{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/blog/blog.component.ts","webpack:///src/app/components/blog/blog.component.html","webpack:///src/app/components/edit-post/edit-post.component.ts","webpack:///src/app/components/edit-post/edit-post.component.html","webpack:///src/app/components/edit-profile/edit-profile.component.ts","webpack:///src/app/components/edit-profile/edit-profile.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/see-comments/see-comments.component.ts","webpack:///src/app/components/see-comments/see-comments.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/blog.service.ts","webpack:///src/app/services/profile.service.ts","webpack:///src/app/services/validation.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BlogComponent","activatedRoute","BlogService","AuthService","router","localStorage","getItem","setItem","location","reload","removeItem","check","comments","blogName","snapshot","paramMap","get","getUserBlog","subscribe","data","blog","success","URL","profileImageUrl","profileImage","coverImageUrl","coverImage","posts","userName","styles","indecies","i","length","imageId","isImage","push","image","display","text","width","padding","console","log","show","visibility","headingCss","height","checkAuth","isLogged","commentText","comment","ch","navigate","encapsulation","None","postText","EditPostComponent","ProfileService","fileToUpload","imageIds","getMyBlog","newPosts","index","postEdit","editPost","files","item","uploadFileToActivity","postFile","imageSrc","error","navigateHome","EditProfileComponent","ValidationService","coverToUpload","profileToUpload","iserror","password","getMe","user","email","type","coverImageId","profileImageId","valid","validateEdit","validateEmail","checkExistMail","editProfile","handleFileInput","EditUser","HomeComponent","authService","userBlogName","blogname","logout","LoginComponent","validateLogin","userLogin","login","setLocalStorage","token","LoginUser","ProfileComponent","imageStyle","newPost","createPost","RegisterComponent","validateRegister","validateBlog","checkExistBlog","userRegister","res","RegisterUser","SeeCommentsComponent","commentsCheck","commentsLength","j","Number","commentter","AuthGuard","providedIn","http","post","getLocalStorage","httpOptions","headers","Authorization","authToken","clear","helper","isExpired","isTokenExpired","httpClient","endpoint","formData","FormData","set","put","re","checkmail","test","String","toLowerCase","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { EditPostComponent } from './components/edit-post/edit-post.component';\nimport { EditProfileComponent } from './components/edit-profile/edit-profile.component';\nimport { SeeCommentsComponent } from './components/see-comments/see-comments.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'blog/:blogName',\n    component: BlogComponent,\n  },\n  {\n    path: 'profile/createPost',\n    component: ProfileComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'profile/editPosts',\n    component: EditPostComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'profile/editProfile',\n    component: EditProfileComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'profile/comments',\n    component: SeeCommentsComponent,\n    canActivate: [AuthGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-Mirai';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AuthService } from './services/auth.service';\nimport { ValidationService } from './services/validation.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './components/login/login.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { EditPostComponent } from './components/edit-post/edit-post.component';\nimport { EditProfileComponent } from './components/edit-profile/edit-profile.component';\nimport { SeeCommentsComponent } from './components/see-comments/see-comments.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    HomeComponent,\n    LoginComponent,\n    BlogComponent,\n    ProfileComponent,\n    EditPostComponent,\n    EditProfileComponent,\n    SeeCommentsComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  providers: [AuthService, ValidationService, AuthGuard],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ViewEncapsulation } from '@angular/core';\nimport { BlogService } from '../../services/blog.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.scss'],\n})\nexport class BlogComponent implements OnInit {\n  URL: String;\n  blogName: any;\n  blog: any;\n  headingCss: {};\n  check: Boolean;\n  show: {};\n  commentText: String;\n  comments: any;\n  styles: any;\n  userName: String;\n  posts: any;\n  coverImageUrl: String;\n  profileImageUrl: String;\n  indecies: any;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private BlogService: BlogService,\n    private AuthService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    if (!localStorage.getItem('foo')) {\n      localStorage.setItem('foo', 'no reload');\n      location.reload();\n    } else {\n      localStorage.removeItem('foo');\n    }\n    this.check = false;\n    this.comments = [];\n    this.blogName = this.activatedRoute.snapshot.paramMap.get('blogName');\n    this.BlogService.getUserBlog(this.blogName).subscribe((data) => {\n      this.blog = data;\n      if (this.blog.success) {\n        this.blog = this.blog.blog;\n        this.URL = '/api/me/image?id=';\n        this.profileImageUrl = this.URL + this.blog.profileImage;\n        this.coverImageUrl = this.URL + this.blog.coverImage;\n        this.posts = this.blog.posts;\n        this.userName = this.blog.userName;\n        this.styles = [];\n        this.indecies = [];\n        for (var i = 0; i < this.posts.length; i++) {\n          this.posts[i].imageId = '/api/me/image?id=' + this.posts[i].imageId;\n          if (!this.posts[i].isImage) {\n            this.styles.push({\n              image: { display: 'none' },\n              text: { float: 'left', width: '80%', padding: '10px' },\n            });\n          } else {\n            this.styles.push({ image: {}, text: {} });\n          }\n          this.indecies.push(i);\n        }\n        console.log(this.blog);\n      } else {\n        console.log('blog not found');\n      }\n    });\n    this.show = {\n      visibility: 'hidden',\n    };\n    this.headingCss = {\n      height: '100%',\n    };\n  }\n  comment(i) {\n    let checkAuth = this.AuthService.isLogged();\n    console.log(checkAuth);\n    i = this.posts.length - i - 1;\n    if (checkAuth) {\n      this.commentText = this.comments[i];\n      this.BlogService.comment(this.commentText, this.blogName, i).subscribe(\n        (data) => {\n          let ch: any;\n          ch = data;\n          if (ch.success) {\n            this.commentText = '';\n            this.comments[i] = '';\n          } else {\n            console.log('failed');\n          }\n        }\n      );\n    } else {\n      this.router.navigate(['']);\n    }\n  }\n}\n","<div class=\"overlay\"></div>\n<div class=\"wrapper\">\n  <header>\n    <div\n      id=\"images\"\n      style=\"\n        position: relative;\n        margin: 0;\n        padding: 0;\n        top: 0;\n        width: 100%;\n        height: 30vh;\n      \"\n    >\n      <img\n        id=\"coverImage\"\n        style=\"\n          position: absolute;\n          margin: 0;\n          padding: 0;\n          top: 0;\n          right: 0;\n          width: 100%;\n          height: 30vh;\n          box-shadow: inset 0 -3em 3em rgba(223, 208, 208, 0.1),\n            0 0 0 2px rgb(255, 255, 255),\n            0.3em 0.3em 1em rgba(206, 174, 174, 0.3);\n        \"\n        src=\"{{ coverImageUrl }}\"\n      />\n      <div class=\"card\">\n        <img id=\"profileImage\" src=\"{{ profileImageUrl }}\" />\n        <label dir=\"auto\">\n          {{ userName }}\n        </label>\n      </div>\n    </div>\n  </header>\n  <main>\n    <div class=\"postcard\" *ngFor=\"let i of indecies\">\n      <div class=\"post\">\n        <div\n          class=\"postImage\"\n          [ngStyle]=\"styles[indecies.length - i - 1].image\"\n        >\n          <img src=\"{{ posts[indecies.length - i - 1].imageId }}\" />\n        </div>\n        <div class=\"postText\" [ngStyle]=\"styles[indecies.length - i - 1].text\">\n          <p dir=\"auto\">\n            {{ posts[indecies.length - i - 1].postText }}\n          </p>\n        </div>\n      </div>\n\n      <div class=\"leaveComment\">\n        <br />\n        <form class=\"commentform\" (submit)=\"comment(i)\">\n          <textarea\n            name=\"comment\"\n            id=\"comment\"\n            rows=\"10\"\n            tabindex=\"4\"\n            required=\"required\"\n            [(ngModel)]=\"comments[indecies.length - i - 1]\"\n          ></textarea>\n          <input type=\"submit\" value=\"Comment\" />\n        </form>\n      </div>\n    </div>\n  </main>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { ViewEncapsulation } from '@angular/core';\nimport { ProfileService } from '../../services/profile.service';\nimport { Router } from '@angular/router';\nimport { BlogService } from '../../services/blog.service';\nimport { NONE_TYPE } from '@angular/compiler';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app-edit-post',\n  templateUrl: './edit-post.component.html',\n  styleUrls: ['./edit-post.component.scss'],\n})\nexport class EditPostComponent implements OnInit {\n  URL: String;\n  blog: any;\n  posts: any;\n  indecies: any;\n  styles: any;\n  fileToUpload: File = null;\n  imageSrc: any;\n  imageIds = [];\n  newPosts: [\n    {\n      id: String;\n      postText: String;\n      isImage: Boolean;\n      imageId: String;\n    }\n  ];\n\n  constructor(\n    private router: Router,\n    private ProfileService: ProfileService,\n    private BlogService: BlogService\n  ) {}\n\n  ngOnInit(): void {\n    if (!localStorage.getItem('aoo')) {\n      localStorage.setItem('aoo', 'no reload');\n      location.reload();\n    } else {\n      localStorage.removeItem('aoo');\n    }\n    this.URL = '/api/me/image?id=';\n    this.BlogService.getMyBlog().subscribe((data) => {\n      this.blog = data;\n      console.log(this.blog);\n      if (this.blog.success) {\n        this.blog = this.blog.blog;\n        this.URL = '/api/me/image?id=';\n        this.posts = this.blog.posts;\n        this.styles = [];\n        this.newPosts = this.blog.posts;\n        this.indecies = [];\n        for (var i = 0; i < this.posts.length; i++) {\n          this.imageIds.push(this.posts[i].imageId);\n          this.posts[i].imageId = '/api/me/image?id=' + this.posts[i].imageId;\n          if (!this.posts[i].isImage) {\n            this.styles.push({ display: 'none' });\n          } else {\n            this.styles.push({ display: 'inline' });\n          }\n          this.indecies.push(i);\n        }\n        console.log(this.posts[0]);\n      } else {\n        console.log('blog not found');\n      }\n    });\n  }\n  editPost(index) {\n    let check;\n    if (this.styles[index].display == 'none') {\n      check = false;\n    } else {\n      check = true;\n    }\n    const postEdit = {\n      imageId: this.imageIds[index],\n      isImage: check,\n      postText: this.newPosts[index].postText,\n    };\n    this.ProfileService.editPost(postEdit, index).subscribe((data) => {\n      check;\n      check = data;\n      if (check.success) {\n        location.reload();\n      } else {\n        console.log('failed');\n      }\n    });\n  }\n  clearImage(index) {\n    this.styles[index].display = 'none';\n    this.posts[index].imageId = '';\n    this.newPosts[index].isImage = false;\n    this.newPosts[index].imageId = '';\n  }\n  handleInput(files: FileList, index) {\n    this.fileToUpload = files.item(0);\n    this.uploadFileToActivity(index);\n  }\n  uploadFileToActivity(index) {\n    this.ProfileService.postFile(this.fileToUpload).subscribe(\n      (data) => {\n        this.styles[index].display = 'inline';\n        this.imageSrc = data;\n        this.URL = '/api/me/image?id=';\n        this.posts[index].imageId = this.URL + this.imageSrc.imageId;\n        console.log(this.posts[index].imageId);\n        this.newPosts[index].imageId = this.URL + this.imageSrc.imageId;\n        this.imageIds[index] = this.imageSrc.imageId;\n        console.log(this.newPosts[index].imageId);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  navigateHome() {\n    this.router.navigate(['']);\n  }\n}\n","<div class=\"sidenav\">\n  <svg\n    width=\"250\"\n    height=\"150\"\n    viewBox=\"0 0 714.4 298.4\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    id=\"logoReg\"\n    style=\"cursor: pointer;\"\n    (click)=\"navigateHome()\"\n  >\n    <g\n      id=\"svgGroup\"\n      stroke-linecap=\"round\"\n      fill-rule=\"evenodd\"\n      font-size=\"9pt\"\n      stroke=\"#000\"\n      stroke-width=\"0.25mm\"\n      fill=\"rgba(#bab1d6, 0.6)\"\n      style=\"stroke: white; stroke-width: 0.25mm; fill: rgba(#bab1d6, 0.6);\"\n    >\n      <path\n        d=\"M 11.6 134 L 9.6 58.4 Q 9.6 40.811 5.781 30.479 A 39.104 39.104 0 0 0 5.6 30 Q 1.6 19.6 1.6 18.8 A 6.814 6.814 0 0 1 4.204 13.721 Q 8.95 9.443 22.346 6.446 A 144.97 144.97 0 0 1 28.6 5.2 Q 50.755 1.262 64.292 0.555 A 106.086 106.086 0 0 1 69.8 0.4 Q 84 0.4 85.2 7.2 Q 110.4 119.6 127.6 163.2 A 20.425 20.425 0 0 0 128.421 164.952 Q 129.973 167.862 131.641 167.994 A 2.012 2.012 0 0 0 131.8 168 A 2.835 2.835 0 0 0 133.64 167.286 Q 134.713 166.397 135.6 164.4 Q 162.4 88.8 182.8 14.8 A 10.275 10.275 0 0 1 186.085 10.124 Q 187.444 8.991 189.285 8.08 A 22.524 22.524 0 0 1 190.8 7.4 Q 195.625 5.44 205.793 3.594 A 253.913 253.913 0 0 1 213 2.4 Q 228.8 0 244.4 0 A 58.111 58.111 0 0 1 249.302 0.189 Q 260 1.1 260 6.4 A 1.608 1.608 0 0 1 259.981 6.585 Q 259.869 7.39 259.084 11.222 A 720.765 720.765 0 0 1 258.8 12.6 Q 257.975 16.588 257.15 21.804 A 338.363 338.363 0 0 0 256.4 26.8 A 1601.181 1601.181 0 0 0 255.444 33.607 Q 255.022 36.654 254.561 40.052 A 3200.023 3200.023 0 0 0 253.6 47.2 Q 250 74.8 249 110.6 Q 248 146.4 248 182.4 L 248.8 224.4 Q 248.8 246.556 251.049 258.887 A 55.67 55.67 0 0 0 252.6 265.4 Q 256.4 277.6 256.4 279.4 A 2.984 2.984 0 0 1 256.099 280.646 Q 255.481 281.988 253.6 283.6 A 38.953 38.953 0 0 1 241.687 289.982 Q 236.094 291.904 229.194 292.805 A 102.153 102.153 0 0 1 216 293.6 Q 200 293.6 198 282.8 Q 197.088 278.546 196.869 270.481 A 202.597 202.597 0 0 1 196.8 265 Q 196.8 254.561 198.557 207.072 A 14151.852 14151.852 0 0 1 199.2 190 Q 201.51 129.546 201.597 100.785 A 728.222 728.222 0 0 0 201.6 98.6 Q 201.6 75.307 199.477 70.985 A 1.384 1.384 0 0 0 198.4 70 A 1.201 1.201 0 0 0 198.267 70.007 Q 198 70.037 198 70.2 A 0.142 0.142 0 0 1 197.945 70.296 Q 197.742 70.486 196.8 70.8 Q 195.6 71.2 190.6 83.2 A 149.579 149.579 0 0 0 188.381 88.938 Q 182.825 104.05 170.8 142.4 Q 156 189.6 144 230.6 Q 132.677 269.289 130.97 274.319 A 16.882 16.882 0 0 1 130.8 274.8 A 18.138 18.138 0 0 1 126.774 281.004 Q 123.334 284.38 118.057 285.276 A 24.217 24.217 0 0 1 114 285.6 A 13.196 13.196 0 0 1 109.365 284.817 A 11.562 11.562 0 0 1 104.4 281.2 Q 94.6 235.875 73.076 160.772 A 4770.388 4770.388 0 0 0 58.8 112 L 47.6 75.6 A 9.706 9.706 0 0 0 47.3 74.921 Q 46.77 73.844 46.24 73.645 A 0.679 0.679 0 0 0 46 73.6 Q 44.255 73.6 43.424 75.732 A 7.541 7.541 0 0 0 43.2 76.4 A 509.99 509.99 0 0 0 42.577 90.178 Q 41.6 119.069 41.6 178.6 Q 41.6 254.8 47.2 274.8 A 2.984 2.984 0 0 1 47.411 275.379 Q 47.573 275.999 47.596 276.898 A 11.896 11.896 0 0 1 47.6 277.2 A 9.716 9.716 0 0 1 43.764 284.92 Q 40.484 287.649 34.4 289.4 Q 22.602 292.797 12.881 293.158 A 61.513 61.513 0 0 1 10.6 293.2 A 35.343 35.343 0 0 1 7.133 293.045 Q 3.728 292.708 1.949 291.634 A 3.617 3.617 0 0 1 0 288.4 A 1.038 1.038 0 0 1 0.031 288.213 Q 0.219 287.389 1.527 283.426 A 525.892 525.892 0 0 1 2 282 A 137.444 137.444 0 0 0 5.266 267.861 Q 7.779 254.017 9.102 234.958 A 531.788 531.788 0 0 0 9.8 222.8 A 1561.178 1561.178 0 0 0 11.031 186.707 Q 11.458 168.271 11.564 147.841 A 2648.453 2648.453 0 0 0 11.6 134 Z\"\n        id=\"0\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 289.2 277.6 L 293.6 184.4 A 227.823 227.823 0 0 0 293.154 169.563 Q 291.759 148.294 286 139.2 Q 283.601 135.203 280.404 133.203 A 15.591 15.591 0 0 0 280.4 133.2 Q 278.175 132.459 278.013 130.342 A 4.468 4.468 0 0 1 278 130 A 6.531 6.531 0 0 1 279.798 125.761 Q 283.381 121.571 294.104 117.522 A 116.127 116.127 0 0 1 298.4 116 Q 318.8 109.2 328.2 109.2 Q 334.044 109.2 336.41 111.056 A 4.019 4.019 0 0 1 338 114 A 139.175 139.175 0 0 1 337.923 118.034 Q 337.614 128.144 336.074 154.711 A 5532.626 5532.626 0 0 1 335.8 159.4 Q 333.6 196.8 333.6 238 A 566.385 566.385 0 0 0 333.769 252.354 Q 334.5 281.075 338.4 289.2 A 8.908 8.908 0 0 1 339.261 291.075 A 6.963 6.963 0 0 1 339.6 293.2 A 3.49 3.49 0 0 1 337.721 296.214 Q 334.806 298.054 327.366 298.345 A 75.836 75.836 0 0 1 324.4 298.4 A 63.621 63.621 0 0 1 304.597 295.117 A 83.2 83.2 0 0 1 293.2 290.4 Q 289.314 288.458 289.203 278.211 A 56.309 56.309 0 0 1 289.2 277.6 Z M 321.2 75.6 L 311.6 75.2 A 34.825 34.825 0 0 0 306.955 75.486 Q 301.716 76.194 299.041 78.657 A 8.217 8.217 0 0 0 297.6 80.4 A 3.276 3.276 0 0 1 297.061 81.033 A 2.131 2.131 0 0 1 295.6 81.6 A 3.253 3.253 0 0 1 292.83 79.818 Q 290.961 76.857 290.53 68.975 A 95.167 95.167 0 0 1 290.4 63.8 Q 290.4 46.903 295.266 41.721 A 8.263 8.263 0 0 1 295.8 41.2 A 15.154 15.154 0 0 1 300.456 38.468 Q 304.858 36.766 311.594 36.465 A 67.334 67.334 0 0 1 314.6 36.4 A 61.12 61.12 0 0 1 320.675 36.679 Q 329.181 37.532 332.8 41 Q 337.422 45.43 337.593 55.607 A 47.069 47.069 0 0 1 337.6 56.4 Q 337.6 64.999 335.318 69.414 A 10.311 10.311 0 0 1 334 71.4 A 10.225 10.225 0 0 1 330.151 74.12 Q 326.663 75.6 321.2 75.6 Z\"\n        id=\"1\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 488 152 L 486 182.4 L 487.6 196.4 Q 487.6 203.355 475.542 203.946 A 47.931 47.931 0 0 1 473.2 204 A 56.968 56.968 0 0 1 462.633 203.11 Q 445.235 199.809 444.082 184.268 A 30.652 30.652 0 0 1 444 182 A 27.097 27.097 0 0 1 444.26 178.46 Q 444.757 174.723 446.203 169.629 A 112.428 112.428 0 0 1 446.8 167.6 Q 449.6 158.4 449.6 151.6 A 19.375 19.375 0 0 0 448.334 144.52 A 17.914 17.914 0 0 0 445.6 139.8 Q 441.6 134.8 434 134.8 A 17.698 17.698 0 0 0 421.169 140.033 A 21.554 21.554 0 0 0 421 140.2 A 30.667 30.667 0 0 0 417.601 144.193 Q 415.922 146.574 415.039 148.993 A 16.522 16.522 0 0 0 414.4 151.2 L 412.8 156.8 Q 410.991 166.149 410.545 184.932 A 562.247 562.247 0 0 0 410.4 198.2 Q 410.4 220.404 410.869 235.338 A 507.581 507.581 0 0 0 411.2 243.8 Q 412 260.4 412.8 266.6 A 400.96 400.96 0 0 1 413.072 268.75 Q 413.53 272.456 413.591 273.682 A 6.578 6.578 0 0 1 413.6 274 A 14.991 14.991 0 0 1 408.817 284.956 Q 406.719 287.037 403.702 288.836 A 38.563 38.563 0 0 1 401.2 290.2 A 59.714 59.714 0 0 1 387.25 295.214 A 50.638 50.638 0 0 1 376.4 296.4 A 44.621 44.621 0 0 1 372.344 296.232 Q 364 295.466 364 291.2 L 366 278.8 A 369.653 369.653 0 0 0 369.188 252.37 Q 370.394 238.56 370.997 222.468 A 923.507 923.507 0 0 0 371.6 188 A 1237.779 1237.779 0 0 0 371.38 163.728 Q 370.789 133.714 368.604 118.036 A 104.607 104.607 0 0 0 367.6 112 Q 367.6 107.503 374.975 107.219 A 26.717 26.717 0 0 1 376 107.2 A 48.509 48.509 0 0 1 386.459 108.245 Q 392.68 109.62 397.137 112.809 A 23.97 23.97 0 0 1 404.8 122 A 4.252 4.252 0 0 0 404.996 122.604 Q 405.411 123.6 406.2 123.6 A 1.484 1.484 0 0 0 406.747 123.452 Q 407.994 122.912 411.092 120.413 A 94.455 94.455 0 0 0 411.6 120 A 47.626 47.626 0 0 1 442.169 109.204 A 59.58 59.58 0 0 1 442.8 109.2 A 60.072 60.072 0 0 1 462.75 112.691 A 69.217 69.217 0 0 1 465.2 113.6 A 33.732 33.732 0 0 1 486.184 137.111 Q 487.943 143.552 487.998 151.487 A 74.114 74.114 0 0 1 488 152 Z\"\n        id=\"2\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 630.4 169.6 L 629.6 220.8 A 378.48 378.48 0 0 0 630.079 240.663 Q 631.552 268.543 637.561 279.846 A 18.679 18.679 0 0 0 641.2 284.8 A 5.897 5.897 0 0 1 642.236 286.166 A 4.638 4.638 0 0 1 642.8 288.4 A 3.405 3.405 0 0 1 640.83 291.259 Q 636.044 294.173 619.637 294.384 A 204.849 204.849 0 0 1 617 294.4 A 65.592 65.592 0 0 1 607.681 293.797 Q 590.881 291.372 589.6 279.2 Q 589.2 275.6 589.2 264.4 L 590.8 200.4 A 3.485 3.485 0 0 0 590.618 199.225 Q 590.038 197.6 587.6 197.6 Q 568.4 197.6 551.6 208.4 A 44.292 44.292 0 0 0 542.741 215.736 A 29.155 29.155 0 0 0 534.8 236 A 26.732 26.732 0 0 0 535.719 243.164 A 21.118 21.118 0 0 0 539.6 250.8 A 17.329 17.329 0 0 0 543.597 254.515 A 13.91 13.91 0 0 0 551.4 256.8 Q 558.4 256.8 563 254 Q 567.097 251.507 568.18 250.917 A 7.307 7.307 0 0 1 568.4 250.8 A 6.219 6.219 0 0 1 573.337 254.424 Q 574.785 257.193 575.108 262.048 A 44.639 44.639 0 0 1 575.2 265 A 23.898 23.898 0 0 1 566.696 283.628 A 34.903 34.903 0 0 1 562.8 286.6 A 49.912 49.912 0 0 1 548.573 293.203 A 43.91 43.91 0 0 1 536.8 294.8 Q 523.2 294.8 513.4 290 Q 506.456 286.599 502.223 282.595 A 25.221 25.221 0 0 1 499.2 279.2 A 53.648 53.648 0 0 1 493.106 268.394 A 61.842 61.842 0 0 1 492 265.6 Q 489.2 256.4 489.2 249.6 A 72.084 72.084 0 0 1 491.832 229.619 A 54.524 54.524 0 0 1 506.8 204.8 Q 524.4 188 552 180.8 A 384.489 384.489 0 0 0 563.485 178.361 Q 588.675 172.569 590 167.6 Q 591.2 163.2 591.2 152.8 Q 591.2 135.967 577.581 132.5 A 32.419 32.419 0 0 0 569.6 131.6 Q 560.4 131.6 553.2 137.4 A 20.1 20.1 0 0 0 548.407 142.828 A 17.729 17.729 0 0 0 546 152 L 548.4 161.6 A 6.745 6.745 0 0 1 545.149 166.546 Q 542.348 168.402 537.168 169.218 A 46.903 46.903 0 0 1 534 169.6 L 529.6 170 A 38.953 38.953 0 0 1 521.941 169.291 Q 517.302 168.361 513.681 166.209 A 21.977 21.977 0 0 1 510.6 164 Q 503.6 158 503.6 148 Q 503.6 141.6 507.8 133.8 A 40.467 40.467 0 0 1 513.736 125.408 A 35.006 35.006 0 0 1 518.4 121.2 A 34.236 34.236 0 0 1 523.084 118.298 Q 528.988 115.213 538.2 112.6 Q 551.6 108.8 564 108.8 Q 574.22 108.8 580.636 109.344 A 79.276 79.276 0 0 1 583.2 109.6 A 81.699 81.699 0 0 1 587.873 110.304 Q 593.641 111.326 601.8 113.4 A 40.692 40.692 0 0 1 615.708 119.766 A 38.307 38.307 0 0 1 621.4 124.8 Q 629.2 133.2 629.8 142.6 Q 630.4 152 630.4 169.6 Z\"\n        id=\"3\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 664 277.6 L 668.4 184.4 A 227.823 227.823 0 0 0 667.954 169.563 Q 666.559 148.294 660.8 139.2 Q 658.401 135.203 655.204 133.203 A 15.591 15.591 0 0 0 655.2 133.2 Q 652.975 132.459 652.813 130.342 A 4.468 4.468 0 0 1 652.8 130 A 6.531 6.531 0 0 1 654.598 125.761 Q 658.181 121.571 668.904 117.522 A 116.127 116.127 0 0 1 673.2 116 Q 693.6 109.2 703 109.2 Q 708.844 109.2 711.21 111.056 A 4.019 4.019 0 0 1 712.8 114 A 139.175 139.175 0 0 1 712.723 118.034 Q 712.414 128.144 710.874 154.711 A 5532.626 5532.626 0 0 1 710.6 159.4 Q 708.4 196.8 708.4 238 A 566.385 566.385 0 0 0 708.569 252.354 Q 709.3 281.075 713.2 289.2 A 8.908 8.908 0 0 1 714.061 291.075 A 6.963 6.963 0 0 1 714.4 293.2 A 3.49 3.49 0 0 1 712.521 296.214 Q 709.606 298.054 702.166 298.345 A 75.836 75.836 0 0 1 699.2 298.4 A 63.621 63.621 0 0 1 679.397 295.117 A 83.2 83.2 0 0 1 668 290.4 Q 664.114 288.458 664.003 278.211 A 56.309 56.309 0 0 1 664 277.6 Z M 696 75.6 L 686.4 75.2 A 34.825 34.825 0 0 0 681.755 75.486 Q 676.516 76.194 673.841 78.657 A 8.217 8.217 0 0 0 672.4 80.4 A 3.276 3.276 0 0 1 671.861 81.033 A 2.131 2.131 0 0 1 670.4 81.6 A 3.253 3.253 0 0 1 667.63 79.818 Q 665.761 76.857 665.33 68.975 A 95.167 95.167 0 0 1 665.2 63.8 Q 665.2 46.903 670.066 41.721 A 8.263 8.263 0 0 1 670.6 41.2 A 15.154 15.154 0 0 1 675.256 38.468 Q 679.658 36.766 686.394 36.465 A 67.334 67.334 0 0 1 689.4 36.4 A 61.12 61.12 0 0 1 695.475 36.679 Q 703.981 37.532 707.6 41 Q 712.222 45.43 712.393 55.607 A 47.069 47.069 0 0 1 712.4 56.4 Q 712.4 64.999 710.118 69.414 A 10.311 10.311 0 0 1 708.8 71.4 A 10.225 10.225 0 0 1 704.951 74.12 Q 701.463 75.6 696 75.6 Z\"\n        id=\"4\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n    </g>\n  </svg>\n  <a routerLink=\"/profile/createPost\">Create Post</a>\n  <a class=\"active\" routerLink=\"/profile/editPosts\">Edit Post</a>\n  <a routerLink=\"/profile/editProfile\">Edit Profile Info</a>\n  <a routerLink=\"/profile/comments\">See Comments</a>\n</div>\n\n<div class=\"content\">\n  <div *ngFor=\"let i of indecies\" class=\"postcard\">\n    <div class=\"post\">\n      <form>\n        <textarea\n          name=\"comment\"\n          id=\"comment\"\n          rows=\"10\"\n          dir=\"auto\"\n          tabindex=\"4\"\n          required=\"required\"\n          value=\"{{ posts[indecies.length - indecies[i] - 1].postText }}\"\n          [(ngModel)]=\"newPosts[indecies.length - indecies[i] - 1].postText\"\n        ></textarea>\n        <br />\n        <input\n          type=\"file\"\n          name=\"file\"\n          width=\"30px\"\n          id=\"file\"\n          class=\"custom-file-input\"\n          (change)=\"\n            handleInput($event.target.files, indecies.length - indecies[i] - 1)\n          \"\n        />\n        <input\n          [ngStyle]=\"styles[indecies.length - indecies[i] - 1]\"\n          type=\"button\"\n          value=\"Clear Image\"\n          id=\"clear\"\n          (click)=\"clearImage(indecies.length - indecies[i] - 1)\"\n        />\n      </form>\n      <input\n        id=\"submit\"\n        type=\"submit\"\n        value=\"EDIT\"\n        (click)=\"editPost(indecies.length - indecies[i] - 1)\"\n      />\n      <div\n        [ngStyle]=\"styles[indecies.length - indecies[i] - 1]\"\n        class=\"postImage\"\n      >\n        <img src=\"{{ posts[indecies.length - indecies[i] - 1].imageId }}\" />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ViewEncapsulation } from '@angular/core';\nimport { BlogService } from '../../services/blog.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { ProfileService } from '../../services/profile.service';\nimport { ValidationService } from '../../services/validation.service';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss'],\n})\nexport class EditProfileComponent implements OnInit {\n  coverImage: any;\n  profileImage: any;\n  email: any;\n  password: any;\n  userName: any;\n  user: any;\n  URL: any;\n  coverImageId: any;\n  profileImageId: any;\n  error: any;\n  iserror: any;\n  imageSrc: any;\n  coverToUpload: File = null;\n  profileToUpload: File = null;\n  fileToUpload: File = null;\n\n  constructor(\n    private router: Router,\n    private ProfileService: ProfileService,\n    private ValidationService: ValidationService\n  ) {}\n\n  ngOnInit(): void {\n    this.iserror = false;\n    this.error = '';\n    this.password = '';\n    if (!localStorage.getItem('soo')) {\n      localStorage.setItem('soo', 'no reload');\n      location.reload();\n    } else {\n      localStorage.removeItem('soo');\n    }\n    this.URL = '/api/me/image?id=';\n    this.ProfileService.getMe().subscribe((data) => {\n      this.user = data;\n      if (this.user.success) {\n        this.coverImage = this.URL + this.user.user.coverImage;\n        this.profileImage = this.URL + this.user.user.profileImage;\n        this.email = this.user.user.email;\n        this.userName = this.user.user.userName;\n        this.user = this.user.user;\n      } else {\n        console.log('failed');\n      }\n    });\n  }\n  handleFileInput(files: FileList, type) {\n    this.fileToUpload = files.item(0);\n    this.uploadFileToActivity(type);\n  }\n\n  uploadFileToActivity(type) {\n    this.ProfileService.postFile(this.fileToUpload).subscribe(\n      (data) => {\n        this.imageSrc = data;\n        this.URL = '/api/me/image?id=';\n        if (type == 'cover') {\n          this.coverImageId = this.imageSrc.imageId;\n          this.coverImage = this.URL + this.imageSrc.imageId;\n        } else if (type == 'profile') {\n          this.profileImageId = this.imageSrc.imageId;\n          this.profileImage = this.URL + this.imageSrc.imageId;\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  EditUser() {\n    let valid = this.ValidationService.validateEdit(\n      this.email,\n      this.password,\n      this.userName,\n      this.user\n    );\n    if (valid.success) {\n      if (this.email != this.user.email) {\n        this.ValidationService.validateEmail(this.email).subscribe((data) => {\n          let checkExistMail: any;\n          checkExistMail = data;\n          console.log(checkExistMail);\n          if (!checkExistMail.success) {\n            this.iserror = true;\n            this.error = 'Email is already existed';\n          } else {\n            let user: any;\n            if (this.password != '') {\n              user = {\n                coverImage: this.coverImageId,\n                profileImage: this.profileImageId,\n                email: this.email,\n                password: this.password,\n                userName: this.userName,\n              };\n            } else {\n              user = {\n                coverImage: this.coverImageId,\n                profileImage: this.profileImageId,\n                email: this.email,\n                userName: this.userName,\n              };\n            }\n\n            let check: any;\n            this.ProfileService.editProfile(user).subscribe((data) => {\n              check = data;\n              if (check.success) {\n                location.reload();\n              } else {\n                console.log('failed');\n              }\n            });\n          }\n        });\n      } else {\n        let user: any;\n        if (this.password != '') {\n          user = {\n            coverImage: this.coverImageId,\n            profileImage: this.profileImageId,\n            email: this.email,\n            password: this.password,\n            userName: this.userName,\n          };\n        } else {\n          user = {\n            coverImage: this.coverImageId,\n            profileImage: this.profileImageId,\n            email: this.email,\n            userName: this.userName,\n          };\n        }\n\n        let check: any;\n        this.ProfileService.editProfile(user).subscribe((data) => {\n          check = data;\n          if (check.success) {\n            location.reload();\n          } else {\n            console.log('failed');\n          }\n        });\n      }\n    } else {\n      this.iserror = true;\n      this.error = valid.text;\n    }\n  }\n  navigateHome() {\n    console.log('asas');\n    this.router.navigate(['']);\n  }\n}\n","<div class=\"sidenav\">\n  <svg\n    width=\"250\"\n    height=\"150\"\n    viewBox=\"0 0 714.4 298.4\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    id=\"logoReg\"\n    style=\"cursor: pointer;\"\n    (click)=\"navigateHome()\"\n  >\n    <g\n      id=\"svgGroup\"\n      stroke-linecap=\"round\"\n      fill-rule=\"evenodd\"\n      font-size=\"9pt\"\n      stroke=\"#000\"\n      stroke-width=\"0.25mm\"\n      fill=\"rgba(#bab1d6, 0.6)\"\n      style=\"stroke: white; stroke-width: 0.25mm; fill: rgba(#bab1d6, 0.6);\"\n    >\n      <path\n        d=\"M 11.6 134 L 9.6 58.4 Q 9.6 40.811 5.781 30.479 A 39.104 39.104 0 0 0 5.6 30 Q 1.6 19.6 1.6 18.8 A 6.814 6.814 0 0 1 4.204 13.721 Q 8.95 9.443 22.346 6.446 A 144.97 144.97 0 0 1 28.6 5.2 Q 50.755 1.262 64.292 0.555 A 106.086 106.086 0 0 1 69.8 0.4 Q 84 0.4 85.2 7.2 Q 110.4 119.6 127.6 163.2 A 20.425 20.425 0 0 0 128.421 164.952 Q 129.973 167.862 131.641 167.994 A 2.012 2.012 0 0 0 131.8 168 A 2.835 2.835 0 0 0 133.64 167.286 Q 134.713 166.397 135.6 164.4 Q 162.4 88.8 182.8 14.8 A 10.275 10.275 0 0 1 186.085 10.124 Q 187.444 8.991 189.285 8.08 A 22.524 22.524 0 0 1 190.8 7.4 Q 195.625 5.44 205.793 3.594 A 253.913 253.913 0 0 1 213 2.4 Q 228.8 0 244.4 0 A 58.111 58.111 0 0 1 249.302 0.189 Q 260 1.1 260 6.4 A 1.608 1.608 0 0 1 259.981 6.585 Q 259.869 7.39 259.084 11.222 A 720.765 720.765 0 0 1 258.8 12.6 Q 257.975 16.588 257.15 21.804 A 338.363 338.363 0 0 0 256.4 26.8 A 1601.181 1601.181 0 0 0 255.444 33.607 Q 255.022 36.654 254.561 40.052 A 3200.023 3200.023 0 0 0 253.6 47.2 Q 250 74.8 249 110.6 Q 248 146.4 248 182.4 L 248.8 224.4 Q 248.8 246.556 251.049 258.887 A 55.67 55.67 0 0 0 252.6 265.4 Q 256.4 277.6 256.4 279.4 A 2.984 2.984 0 0 1 256.099 280.646 Q 255.481 281.988 253.6 283.6 A 38.953 38.953 0 0 1 241.687 289.982 Q 236.094 291.904 229.194 292.805 A 102.153 102.153 0 0 1 216 293.6 Q 200 293.6 198 282.8 Q 197.088 278.546 196.869 270.481 A 202.597 202.597 0 0 1 196.8 265 Q 196.8 254.561 198.557 207.072 A 14151.852 14151.852 0 0 1 199.2 190 Q 201.51 129.546 201.597 100.785 A 728.222 728.222 0 0 0 201.6 98.6 Q 201.6 75.307 199.477 70.985 A 1.384 1.384 0 0 0 198.4 70 A 1.201 1.201 0 0 0 198.267 70.007 Q 198 70.037 198 70.2 A 0.142 0.142 0 0 1 197.945 70.296 Q 197.742 70.486 196.8 70.8 Q 195.6 71.2 190.6 83.2 A 149.579 149.579 0 0 0 188.381 88.938 Q 182.825 104.05 170.8 142.4 Q 156 189.6 144 230.6 Q 132.677 269.289 130.97 274.319 A 16.882 16.882 0 0 1 130.8 274.8 A 18.138 18.138 0 0 1 126.774 281.004 Q 123.334 284.38 118.057 285.276 A 24.217 24.217 0 0 1 114 285.6 A 13.196 13.196 0 0 1 109.365 284.817 A 11.562 11.562 0 0 1 104.4 281.2 Q 94.6 235.875 73.076 160.772 A 4770.388 4770.388 0 0 0 58.8 112 L 47.6 75.6 A 9.706 9.706 0 0 0 47.3 74.921 Q 46.77 73.844 46.24 73.645 A 0.679 0.679 0 0 0 46 73.6 Q 44.255 73.6 43.424 75.732 A 7.541 7.541 0 0 0 43.2 76.4 A 509.99 509.99 0 0 0 42.577 90.178 Q 41.6 119.069 41.6 178.6 Q 41.6 254.8 47.2 274.8 A 2.984 2.984 0 0 1 47.411 275.379 Q 47.573 275.999 47.596 276.898 A 11.896 11.896 0 0 1 47.6 277.2 A 9.716 9.716 0 0 1 43.764 284.92 Q 40.484 287.649 34.4 289.4 Q 22.602 292.797 12.881 293.158 A 61.513 61.513 0 0 1 10.6 293.2 A 35.343 35.343 0 0 1 7.133 293.045 Q 3.728 292.708 1.949 291.634 A 3.617 3.617 0 0 1 0 288.4 A 1.038 1.038 0 0 1 0.031 288.213 Q 0.219 287.389 1.527 283.426 A 525.892 525.892 0 0 1 2 282 A 137.444 137.444 0 0 0 5.266 267.861 Q 7.779 254.017 9.102 234.958 A 531.788 531.788 0 0 0 9.8 222.8 A 1561.178 1561.178 0 0 0 11.031 186.707 Q 11.458 168.271 11.564 147.841 A 2648.453 2648.453 0 0 0 11.6 134 Z\"\n        id=\"0\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 289.2 277.6 L 293.6 184.4 A 227.823 227.823 0 0 0 293.154 169.563 Q 291.759 148.294 286 139.2 Q 283.601 135.203 280.404 133.203 A 15.591 15.591 0 0 0 280.4 133.2 Q 278.175 132.459 278.013 130.342 A 4.468 4.468 0 0 1 278 130 A 6.531 6.531 0 0 1 279.798 125.761 Q 283.381 121.571 294.104 117.522 A 116.127 116.127 0 0 1 298.4 116 Q 318.8 109.2 328.2 109.2 Q 334.044 109.2 336.41 111.056 A 4.019 4.019 0 0 1 338 114 A 139.175 139.175 0 0 1 337.923 118.034 Q 337.614 128.144 336.074 154.711 A 5532.626 5532.626 0 0 1 335.8 159.4 Q 333.6 196.8 333.6 238 A 566.385 566.385 0 0 0 333.769 252.354 Q 334.5 281.075 338.4 289.2 A 8.908 8.908 0 0 1 339.261 291.075 A 6.963 6.963 0 0 1 339.6 293.2 A 3.49 3.49 0 0 1 337.721 296.214 Q 334.806 298.054 327.366 298.345 A 75.836 75.836 0 0 1 324.4 298.4 A 63.621 63.621 0 0 1 304.597 295.117 A 83.2 83.2 0 0 1 293.2 290.4 Q 289.314 288.458 289.203 278.211 A 56.309 56.309 0 0 1 289.2 277.6 Z M 321.2 75.6 L 311.6 75.2 A 34.825 34.825 0 0 0 306.955 75.486 Q 301.716 76.194 299.041 78.657 A 8.217 8.217 0 0 0 297.6 80.4 A 3.276 3.276 0 0 1 297.061 81.033 A 2.131 2.131 0 0 1 295.6 81.6 A 3.253 3.253 0 0 1 292.83 79.818 Q 290.961 76.857 290.53 68.975 A 95.167 95.167 0 0 1 290.4 63.8 Q 290.4 46.903 295.266 41.721 A 8.263 8.263 0 0 1 295.8 41.2 A 15.154 15.154 0 0 1 300.456 38.468 Q 304.858 36.766 311.594 36.465 A 67.334 67.334 0 0 1 314.6 36.4 A 61.12 61.12 0 0 1 320.675 36.679 Q 329.181 37.532 332.8 41 Q 337.422 45.43 337.593 55.607 A 47.069 47.069 0 0 1 337.6 56.4 Q 337.6 64.999 335.318 69.414 A 10.311 10.311 0 0 1 334 71.4 A 10.225 10.225 0 0 1 330.151 74.12 Q 326.663 75.6 321.2 75.6 Z\"\n        id=\"1\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 488 152 L 486 182.4 L 487.6 196.4 Q 487.6 203.355 475.542 203.946 A 47.931 47.931 0 0 1 473.2 204 A 56.968 56.968 0 0 1 462.633 203.11 Q 445.235 199.809 444.082 184.268 A 30.652 30.652 0 0 1 444 182 A 27.097 27.097 0 0 1 444.26 178.46 Q 444.757 174.723 446.203 169.629 A 112.428 112.428 0 0 1 446.8 167.6 Q 449.6 158.4 449.6 151.6 A 19.375 19.375 0 0 0 448.334 144.52 A 17.914 17.914 0 0 0 445.6 139.8 Q 441.6 134.8 434 134.8 A 17.698 17.698 0 0 0 421.169 140.033 A 21.554 21.554 0 0 0 421 140.2 A 30.667 30.667 0 0 0 417.601 144.193 Q 415.922 146.574 415.039 148.993 A 16.522 16.522 0 0 0 414.4 151.2 L 412.8 156.8 Q 410.991 166.149 410.545 184.932 A 562.247 562.247 0 0 0 410.4 198.2 Q 410.4 220.404 410.869 235.338 A 507.581 507.581 0 0 0 411.2 243.8 Q 412 260.4 412.8 266.6 A 400.96 400.96 0 0 1 413.072 268.75 Q 413.53 272.456 413.591 273.682 A 6.578 6.578 0 0 1 413.6 274 A 14.991 14.991 0 0 1 408.817 284.956 Q 406.719 287.037 403.702 288.836 A 38.563 38.563 0 0 1 401.2 290.2 A 59.714 59.714 0 0 1 387.25 295.214 A 50.638 50.638 0 0 1 376.4 296.4 A 44.621 44.621 0 0 1 372.344 296.232 Q 364 295.466 364 291.2 L 366 278.8 A 369.653 369.653 0 0 0 369.188 252.37 Q 370.394 238.56 370.997 222.468 A 923.507 923.507 0 0 0 371.6 188 A 1237.779 1237.779 0 0 0 371.38 163.728 Q 370.789 133.714 368.604 118.036 A 104.607 104.607 0 0 0 367.6 112 Q 367.6 107.503 374.975 107.219 A 26.717 26.717 0 0 1 376 107.2 A 48.509 48.509 0 0 1 386.459 108.245 Q 392.68 109.62 397.137 112.809 A 23.97 23.97 0 0 1 404.8 122 A 4.252 4.252 0 0 0 404.996 122.604 Q 405.411 123.6 406.2 123.6 A 1.484 1.484 0 0 0 406.747 123.452 Q 407.994 122.912 411.092 120.413 A 94.455 94.455 0 0 0 411.6 120 A 47.626 47.626 0 0 1 442.169 109.204 A 59.58 59.58 0 0 1 442.8 109.2 A 60.072 60.072 0 0 1 462.75 112.691 A 69.217 69.217 0 0 1 465.2 113.6 A 33.732 33.732 0 0 1 486.184 137.111 Q 487.943 143.552 487.998 151.487 A 74.114 74.114 0 0 1 488 152 Z\"\n        id=\"2\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 630.4 169.6 L 629.6 220.8 A 378.48 378.48 0 0 0 630.079 240.663 Q 631.552 268.543 637.561 279.846 A 18.679 18.679 0 0 0 641.2 284.8 A 5.897 5.897 0 0 1 642.236 286.166 A 4.638 4.638 0 0 1 642.8 288.4 A 3.405 3.405 0 0 1 640.83 291.259 Q 636.044 294.173 619.637 294.384 A 204.849 204.849 0 0 1 617 294.4 A 65.592 65.592 0 0 1 607.681 293.797 Q 590.881 291.372 589.6 279.2 Q 589.2 275.6 589.2 264.4 L 590.8 200.4 A 3.485 3.485 0 0 0 590.618 199.225 Q 590.038 197.6 587.6 197.6 Q 568.4 197.6 551.6 208.4 A 44.292 44.292 0 0 0 542.741 215.736 A 29.155 29.155 0 0 0 534.8 236 A 26.732 26.732 0 0 0 535.719 243.164 A 21.118 21.118 0 0 0 539.6 250.8 A 17.329 17.329 0 0 0 543.597 254.515 A 13.91 13.91 0 0 0 551.4 256.8 Q 558.4 256.8 563 254 Q 567.097 251.507 568.18 250.917 A 7.307 7.307 0 0 1 568.4 250.8 A 6.219 6.219 0 0 1 573.337 254.424 Q 574.785 257.193 575.108 262.048 A 44.639 44.639 0 0 1 575.2 265 A 23.898 23.898 0 0 1 566.696 283.628 A 34.903 34.903 0 0 1 562.8 286.6 A 49.912 49.912 0 0 1 548.573 293.203 A 43.91 43.91 0 0 1 536.8 294.8 Q 523.2 294.8 513.4 290 Q 506.456 286.599 502.223 282.595 A 25.221 25.221 0 0 1 499.2 279.2 A 53.648 53.648 0 0 1 493.106 268.394 A 61.842 61.842 0 0 1 492 265.6 Q 489.2 256.4 489.2 249.6 A 72.084 72.084 0 0 1 491.832 229.619 A 54.524 54.524 0 0 1 506.8 204.8 Q 524.4 188 552 180.8 A 384.489 384.489 0 0 0 563.485 178.361 Q 588.675 172.569 590 167.6 Q 591.2 163.2 591.2 152.8 Q 591.2 135.967 577.581 132.5 A 32.419 32.419 0 0 0 569.6 131.6 Q 560.4 131.6 553.2 137.4 A 20.1 20.1 0 0 0 548.407 142.828 A 17.729 17.729 0 0 0 546 152 L 548.4 161.6 A 6.745 6.745 0 0 1 545.149 166.546 Q 542.348 168.402 537.168 169.218 A 46.903 46.903 0 0 1 534 169.6 L 529.6 170 A 38.953 38.953 0 0 1 521.941 169.291 Q 517.302 168.361 513.681 166.209 A 21.977 21.977 0 0 1 510.6 164 Q 503.6 158 503.6 148 Q 503.6 141.6 507.8 133.8 A 40.467 40.467 0 0 1 513.736 125.408 A 35.006 35.006 0 0 1 518.4 121.2 A 34.236 34.236 0 0 1 523.084 118.298 Q 528.988 115.213 538.2 112.6 Q 551.6 108.8 564 108.8 Q 574.22 108.8 580.636 109.344 A 79.276 79.276 0 0 1 583.2 109.6 A 81.699 81.699 0 0 1 587.873 110.304 Q 593.641 111.326 601.8 113.4 A 40.692 40.692 0 0 1 615.708 119.766 A 38.307 38.307 0 0 1 621.4 124.8 Q 629.2 133.2 629.8 142.6 Q 630.4 152 630.4 169.6 Z\"\n        id=\"3\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 664 277.6 L 668.4 184.4 A 227.823 227.823 0 0 0 667.954 169.563 Q 666.559 148.294 660.8 139.2 Q 658.401 135.203 655.204 133.203 A 15.591 15.591 0 0 0 655.2 133.2 Q 652.975 132.459 652.813 130.342 A 4.468 4.468 0 0 1 652.8 130 A 6.531 6.531 0 0 1 654.598 125.761 Q 658.181 121.571 668.904 117.522 A 116.127 116.127 0 0 1 673.2 116 Q 693.6 109.2 703 109.2 Q 708.844 109.2 711.21 111.056 A 4.019 4.019 0 0 1 712.8 114 A 139.175 139.175 0 0 1 712.723 118.034 Q 712.414 128.144 710.874 154.711 A 5532.626 5532.626 0 0 1 710.6 159.4 Q 708.4 196.8 708.4 238 A 566.385 566.385 0 0 0 708.569 252.354 Q 709.3 281.075 713.2 289.2 A 8.908 8.908 0 0 1 714.061 291.075 A 6.963 6.963 0 0 1 714.4 293.2 A 3.49 3.49 0 0 1 712.521 296.214 Q 709.606 298.054 702.166 298.345 A 75.836 75.836 0 0 1 699.2 298.4 A 63.621 63.621 0 0 1 679.397 295.117 A 83.2 83.2 0 0 1 668 290.4 Q 664.114 288.458 664.003 278.211 A 56.309 56.309 0 0 1 664 277.6 Z M 696 75.6 L 686.4 75.2 A 34.825 34.825 0 0 0 681.755 75.486 Q 676.516 76.194 673.841 78.657 A 8.217 8.217 0 0 0 672.4 80.4 A 3.276 3.276 0 0 1 671.861 81.033 A 2.131 2.131 0 0 1 670.4 81.6 A 3.253 3.253 0 0 1 667.63 79.818 Q 665.761 76.857 665.33 68.975 A 95.167 95.167 0 0 1 665.2 63.8 Q 665.2 46.903 670.066 41.721 A 8.263 8.263 0 0 1 670.6 41.2 A 15.154 15.154 0 0 1 675.256 38.468 Q 679.658 36.766 686.394 36.465 A 67.334 67.334 0 0 1 689.4 36.4 A 61.12 61.12 0 0 1 695.475 36.679 Q 703.981 37.532 707.6 41 Q 712.222 45.43 712.393 55.607 A 47.069 47.069 0 0 1 712.4 56.4 Q 712.4 64.999 710.118 69.414 A 10.311 10.311 0 0 1 708.8 71.4 A 10.225 10.225 0 0 1 704.951 74.12 Q 701.463 75.6 696 75.6 Z\"\n        id=\"4\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n    </g>\n  </svg>\n  <a routerLink=\"/profile/createPost\">Create Post</a>\n  <a routerLink=\"/profile/editPosts\">Edit Post</a>\n  <a class=\"active\" routerLink=\"/profile/editProfile\">Edit Profile Info</a>\n  <a routerLink=\"/profile/comments\">See Comments</a>\n</div>\n<div class=\"content\">\n  <div id=\"images\" style=\"position: relative; width: 80%; height: 30vh;\">\n    <img\n      id=\"coverImage\"\n      style=\"\n        position: absolute;\n        width: 100%;\n        height: 30vh;\n        box-shadow: inset 0 -3em 3em rgba(223, 208, 208, 0.1),\n          0 0 0 2px rgb(255, 255, 255), 0.3em 0.3em 1em rgba(206, 174, 174, 0.3);\n      \"\n      src=\"{{ coverImage }}\"\n    />\n    <div class=\"card\">\n      <img id=\"profileImage\" src=\"{{ profileImage }}\" />\n      <label dir=\"auto\">\n        {{ userName }}\n      </label>\n    </div>\n  </div>\n  <input\n    type=\"file\"\n    name=\"file\"\n    width=\"30px\"\n    id=\"file\"\n    class=\"inputfile\"\n    (change)=\"handleFileInput($event.target.files, 'profile')\"\n  />\n  <label id=\"profileLabel\" for=\"file\">Choose Profile Image</label>\n  <div *ngIf=\"iserror\" class=\"error\">\n    <p>{{ error }}</p>\n  </div>\n\n  <form id=\"form\" (submit)=\"EditUser()\">\n    <div class=\"field\">\n      <div class=\"overlay\"></div>\n      <label dir=\"auto\">User Name</label>\n      <input dir=\"auto\" type=\"text\" name=\"userName\" [(ngModel)]=\"userName\" />\n    </div>\n    <div class=\"field\">\n      <div class=\"overlay\"></div>\n      <label>Email</label>\n      <input dir=\"auto\" type=\"email\" name=\"email\" [(ngModel)]=\"email\" />\n    </div>\n    <div class=\"field\">\n      <div class=\"overlay\"></div>\n      <label>Password</label>\n      <input\n        dir=\"auto\"\n        type=\"password\"\n        name=\"password\"\n        [(ngModel)]=\"password\"\n      />\n    </div>\n    <input id=\"submit\" type=\"submit\" value=\"Edit\" />\n  </form>\n  <input\n    type=\"file\"\n    name=\"file\"\n    width=\"30px\"\n    id=\"file\"\n    class=\"custom-file-input\"\n    (change)=\"handleFileInput($event.target.files, 'cover')\"\n  />\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ViewEncapsulation } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class HomeComponent implements OnInit {\n  blogname: any;\n  constructor(public authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    if (!localStorage.getItem('qoo')) {\n      localStorage.setItem('qoo', 'no reload');\n      location.reload();\n    } else {\n      localStorage.removeItem('qoo');\n    }\n  }\n  navigateRegister() {\n    this.router.navigate(['/register']);\n  }\n  navigateLogin() {\n    this.router.navigate(['/login']);\n  }\n  navigateProfile() {\n    this.router.navigate(['/profile/createPost']);\n  }\n  navigateBlog() {\n    this.authService.userBlogName().subscribe((data) => {\n      this.blogname = data;\n      this.blogname = this.blogname.blogname;\n      this.router.navigate(['/blog/' + this.blogname]);\n    });\n  }\n  Logout() {\n    this.authService.logout();\n  }\n}\n","<div id=\"overlay\"></div>\n<svg\n  width=\"714.4\"\n  height=\"298.4\"\n  viewBox=\"0 0 714.4 298.4\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  id=\"logo\"\n>\n  <g\n    id=\"svgGroup\"\n    stroke-linecap=\"round\"\n    fill-rule=\"evenodd\"\n    font-size=\"9pt\"\n    stroke=\"#000\"\n    stroke-width=\"0.25mm\"\n    fill=\"none\"\n    style=\"stroke: white; stroke-width: 10; fill: none;\"\n  >\n    <path\n      d=\"M 11.6 134 L 9.6 58.4 Q 9.6 40.811 5.781 30.479 A 39.104 39.104 0 0 0 5.6 30 Q 1.6 19.6 1.6 18.8 A 6.814 6.814 0 0 1 4.204 13.721 Q 8.95 9.443 22.346 6.446 A 144.97 144.97 0 0 1 28.6 5.2 Q 50.755 1.262 64.292 0.555 A 106.086 106.086 0 0 1 69.8 0.4 Q 84 0.4 85.2 7.2 Q 110.4 119.6 127.6 163.2 A 20.425 20.425 0 0 0 128.421 164.952 Q 129.973 167.862 131.641 167.994 A 2.012 2.012 0 0 0 131.8 168 A 2.835 2.835 0 0 0 133.64 167.286 Q 134.713 166.397 135.6 164.4 Q 162.4 88.8 182.8 14.8 A 10.275 10.275 0 0 1 186.085 10.124 Q 187.444 8.991 189.285 8.08 A 22.524 22.524 0 0 1 190.8 7.4 Q 195.625 5.44 205.793 3.594 A 253.913 253.913 0 0 1 213 2.4 Q 228.8 0 244.4 0 A 58.111 58.111 0 0 1 249.302 0.189 Q 260 1.1 260 6.4 A 1.608 1.608 0 0 1 259.981 6.585 Q 259.869 7.39 259.084 11.222 A 720.765 720.765 0 0 1 258.8 12.6 Q 257.975 16.588 257.15 21.804 A 338.363 338.363 0 0 0 256.4 26.8 A 1601.181 1601.181 0 0 0 255.444 33.607 Q 255.022 36.654 254.561 40.052 A 3200.023 3200.023 0 0 0 253.6 47.2 Q 250 74.8 249 110.6 Q 248 146.4 248 182.4 L 248.8 224.4 Q 248.8 246.556 251.049 258.887 A 55.67 55.67 0 0 0 252.6 265.4 Q 256.4 277.6 256.4 279.4 A 2.984 2.984 0 0 1 256.099 280.646 Q 255.481 281.988 253.6 283.6 A 38.953 38.953 0 0 1 241.687 289.982 Q 236.094 291.904 229.194 292.805 A 102.153 102.153 0 0 1 216 293.6 Q 200 293.6 198 282.8 Q 197.088 278.546 196.869 270.481 A 202.597 202.597 0 0 1 196.8 265 Q 196.8 254.561 198.557 207.072 A 14151.852 14151.852 0 0 1 199.2 190 Q 201.51 129.546 201.597 100.785 A 728.222 728.222 0 0 0 201.6 98.6 Q 201.6 75.307 199.477 70.985 A 1.384 1.384 0 0 0 198.4 70 A 1.201 1.201 0 0 0 198.267 70.007 Q 198 70.037 198 70.2 A 0.142 0.142 0 0 1 197.945 70.296 Q 197.742 70.486 196.8 70.8 Q 195.6 71.2 190.6 83.2 A 149.579 149.579 0 0 0 188.381 88.938 Q 182.825 104.05 170.8 142.4 Q 156 189.6 144 230.6 Q 132.677 269.289 130.97 274.319 A 16.882 16.882 0 0 1 130.8 274.8 A 18.138 18.138 0 0 1 126.774 281.004 Q 123.334 284.38 118.057 285.276 A 24.217 24.217 0 0 1 114 285.6 A 13.196 13.196 0 0 1 109.365 284.817 A 11.562 11.562 0 0 1 104.4 281.2 Q 94.6 235.875 73.076 160.772 A 4770.388 4770.388 0 0 0 58.8 112 L 47.6 75.6 A 9.706 9.706 0 0 0 47.3 74.921 Q 46.77 73.844 46.24 73.645 A 0.679 0.679 0 0 0 46 73.6 Q 44.255 73.6 43.424 75.732 A 7.541 7.541 0 0 0 43.2 76.4 A 509.99 509.99 0 0 0 42.577 90.178 Q 41.6 119.069 41.6 178.6 Q 41.6 254.8 47.2 274.8 A 2.984 2.984 0 0 1 47.411 275.379 Q 47.573 275.999 47.596 276.898 A 11.896 11.896 0 0 1 47.6 277.2 A 9.716 9.716 0 0 1 43.764 284.92 Q 40.484 287.649 34.4 289.4 Q 22.602 292.797 12.881 293.158 A 61.513 61.513 0 0 1 10.6 293.2 A 35.343 35.343 0 0 1 7.133 293.045 Q 3.728 292.708 1.949 291.634 A 3.617 3.617 0 0 1 0 288.4 A 1.038 1.038 0 0 1 0.031 288.213 Q 0.219 287.389 1.527 283.426 A 525.892 525.892 0 0 1 2 282 A 137.444 137.444 0 0 0 5.266 267.861 Q 7.779 254.017 9.102 234.958 A 531.788 531.788 0 0 0 9.8 222.8 A 1561.178 1561.178 0 0 0 11.031 186.707 Q 11.458 168.271 11.564 147.841 A 2648.453 2648.453 0 0 0 11.6 134 Z\"\n      id=\"0\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n      d=\"M 289.2 277.6 L 293.6 184.4 A 227.823 227.823 0 0 0 293.154 169.563 Q 291.759 148.294 286 139.2 Q 283.601 135.203 280.404 133.203 A 15.591 15.591 0 0 0 280.4 133.2 Q 278.175 132.459 278.013 130.342 A 4.468 4.468 0 0 1 278 130 A 6.531 6.531 0 0 1 279.798 125.761 Q 283.381 121.571 294.104 117.522 A 116.127 116.127 0 0 1 298.4 116 Q 318.8 109.2 328.2 109.2 Q 334.044 109.2 336.41 111.056 A 4.019 4.019 0 0 1 338 114 A 139.175 139.175 0 0 1 337.923 118.034 Q 337.614 128.144 336.074 154.711 A 5532.626 5532.626 0 0 1 335.8 159.4 Q 333.6 196.8 333.6 238 A 566.385 566.385 0 0 0 333.769 252.354 Q 334.5 281.075 338.4 289.2 A 8.908 8.908 0 0 1 339.261 291.075 A 6.963 6.963 0 0 1 339.6 293.2 A 3.49 3.49 0 0 1 337.721 296.214 Q 334.806 298.054 327.366 298.345 A 75.836 75.836 0 0 1 324.4 298.4 A 63.621 63.621 0 0 1 304.597 295.117 A 83.2 83.2 0 0 1 293.2 290.4 Q 289.314 288.458 289.203 278.211 A 56.309 56.309 0 0 1 289.2 277.6 Z M 321.2 75.6 L 311.6 75.2 A 34.825 34.825 0 0 0 306.955 75.486 Q 301.716 76.194 299.041 78.657 A 8.217 8.217 0 0 0 297.6 80.4 A 3.276 3.276 0 0 1 297.061 81.033 A 2.131 2.131 0 0 1 295.6 81.6 A 3.253 3.253 0 0 1 292.83 79.818 Q 290.961 76.857 290.53 68.975 A 95.167 95.167 0 0 1 290.4 63.8 Q 290.4 46.903 295.266 41.721 A 8.263 8.263 0 0 1 295.8 41.2 A 15.154 15.154 0 0 1 300.456 38.468 Q 304.858 36.766 311.594 36.465 A 67.334 67.334 0 0 1 314.6 36.4 A 61.12 61.12 0 0 1 320.675 36.679 Q 329.181 37.532 332.8 41 Q 337.422 45.43 337.593 55.607 A 47.069 47.069 0 0 1 337.6 56.4 Q 337.6 64.999 335.318 69.414 A 10.311 10.311 0 0 1 334 71.4 A 10.225 10.225 0 0 1 330.151 74.12 Q 326.663 75.6 321.2 75.6 Z\"\n      id=\"1\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n      d=\"M 488 152 L 486 182.4 L 487.6 196.4 Q 487.6 203.355 475.542 203.946 A 47.931 47.931 0 0 1 473.2 204 A 56.968 56.968 0 0 1 462.633 203.11 Q 445.235 199.809 444.082 184.268 A 30.652 30.652 0 0 1 444 182 A 27.097 27.097 0 0 1 444.26 178.46 Q 444.757 174.723 446.203 169.629 A 112.428 112.428 0 0 1 446.8 167.6 Q 449.6 158.4 449.6 151.6 A 19.375 19.375 0 0 0 448.334 144.52 A 17.914 17.914 0 0 0 445.6 139.8 Q 441.6 134.8 434 134.8 A 17.698 17.698 0 0 0 421.169 140.033 A 21.554 21.554 0 0 0 421 140.2 A 30.667 30.667 0 0 0 417.601 144.193 Q 415.922 146.574 415.039 148.993 A 16.522 16.522 0 0 0 414.4 151.2 L 412.8 156.8 Q 410.991 166.149 410.545 184.932 A 562.247 562.247 0 0 0 410.4 198.2 Q 410.4 220.404 410.869 235.338 A 507.581 507.581 0 0 0 411.2 243.8 Q 412 260.4 412.8 266.6 A 400.96 400.96 0 0 1 413.072 268.75 Q 413.53 272.456 413.591 273.682 A 6.578 6.578 0 0 1 413.6 274 A 14.991 14.991 0 0 1 408.817 284.956 Q 406.719 287.037 403.702 288.836 A 38.563 38.563 0 0 1 401.2 290.2 A 59.714 59.714 0 0 1 387.25 295.214 A 50.638 50.638 0 0 1 376.4 296.4 A 44.621 44.621 0 0 1 372.344 296.232 Q 364 295.466 364 291.2 L 366 278.8 A 369.653 369.653 0 0 0 369.188 252.37 Q 370.394 238.56 370.997 222.468 A 923.507 923.507 0 0 0 371.6 188 A 1237.779 1237.779 0 0 0 371.38 163.728 Q 370.789 133.714 368.604 118.036 A 104.607 104.607 0 0 0 367.6 112 Q 367.6 107.503 374.975 107.219 A 26.717 26.717 0 0 1 376 107.2 A 48.509 48.509 0 0 1 386.459 108.245 Q 392.68 109.62 397.137 112.809 A 23.97 23.97 0 0 1 404.8 122 A 4.252 4.252 0 0 0 404.996 122.604 Q 405.411 123.6 406.2 123.6 A 1.484 1.484 0 0 0 406.747 123.452 Q 407.994 122.912 411.092 120.413 A 94.455 94.455 0 0 0 411.6 120 A 47.626 47.626 0 0 1 442.169 109.204 A 59.58 59.58 0 0 1 442.8 109.2 A 60.072 60.072 0 0 1 462.75 112.691 A 69.217 69.217 0 0 1 465.2 113.6 A 33.732 33.732 0 0 1 486.184 137.111 Q 487.943 143.552 487.998 151.487 A 74.114 74.114 0 0 1 488 152 Z\"\n      id=\"2\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n      d=\"M 630.4 169.6 L 629.6 220.8 A 378.48 378.48 0 0 0 630.079 240.663 Q 631.552 268.543 637.561 279.846 A 18.679 18.679 0 0 0 641.2 284.8 A 5.897 5.897 0 0 1 642.236 286.166 A 4.638 4.638 0 0 1 642.8 288.4 A 3.405 3.405 0 0 1 640.83 291.259 Q 636.044 294.173 619.637 294.384 A 204.849 204.849 0 0 1 617 294.4 A 65.592 65.592 0 0 1 607.681 293.797 Q 590.881 291.372 589.6 279.2 Q 589.2 275.6 589.2 264.4 L 590.8 200.4 A 3.485 3.485 0 0 0 590.618 199.225 Q 590.038 197.6 587.6 197.6 Q 568.4 197.6 551.6 208.4 A 44.292 44.292 0 0 0 542.741 215.736 A 29.155 29.155 0 0 0 534.8 236 A 26.732 26.732 0 0 0 535.719 243.164 A 21.118 21.118 0 0 0 539.6 250.8 A 17.329 17.329 0 0 0 543.597 254.515 A 13.91 13.91 0 0 0 551.4 256.8 Q 558.4 256.8 563 254 Q 567.097 251.507 568.18 250.917 A 7.307 7.307 0 0 1 568.4 250.8 A 6.219 6.219 0 0 1 573.337 254.424 Q 574.785 257.193 575.108 262.048 A 44.639 44.639 0 0 1 575.2 265 A 23.898 23.898 0 0 1 566.696 283.628 A 34.903 34.903 0 0 1 562.8 286.6 A 49.912 49.912 0 0 1 548.573 293.203 A 43.91 43.91 0 0 1 536.8 294.8 Q 523.2 294.8 513.4 290 Q 506.456 286.599 502.223 282.595 A 25.221 25.221 0 0 1 499.2 279.2 A 53.648 53.648 0 0 1 493.106 268.394 A 61.842 61.842 0 0 1 492 265.6 Q 489.2 256.4 489.2 249.6 A 72.084 72.084 0 0 1 491.832 229.619 A 54.524 54.524 0 0 1 506.8 204.8 Q 524.4 188 552 180.8 A 384.489 384.489 0 0 0 563.485 178.361 Q 588.675 172.569 590 167.6 Q 591.2 163.2 591.2 152.8 Q 591.2 135.967 577.581 132.5 A 32.419 32.419 0 0 0 569.6 131.6 Q 560.4 131.6 553.2 137.4 A 20.1 20.1 0 0 0 548.407 142.828 A 17.729 17.729 0 0 0 546 152 L 548.4 161.6 A 6.745 6.745 0 0 1 545.149 166.546 Q 542.348 168.402 537.168 169.218 A 46.903 46.903 0 0 1 534 169.6 L 529.6 170 A 38.953 38.953 0 0 1 521.941 169.291 Q 517.302 168.361 513.681 166.209 A 21.977 21.977 0 0 1 510.6 164 Q 503.6 158 503.6 148 Q 503.6 141.6 507.8 133.8 A 40.467 40.467 0 0 1 513.736 125.408 A 35.006 35.006 0 0 1 518.4 121.2 A 34.236 34.236 0 0 1 523.084 118.298 Q 528.988 115.213 538.2 112.6 Q 551.6 108.8 564 108.8 Q 574.22 108.8 580.636 109.344 A 79.276 79.276 0 0 1 583.2 109.6 A 81.699 81.699 0 0 1 587.873 110.304 Q 593.641 111.326 601.8 113.4 A 40.692 40.692 0 0 1 615.708 119.766 A 38.307 38.307 0 0 1 621.4 124.8 Q 629.2 133.2 629.8 142.6 Q 630.4 152 630.4 169.6 Z\"\n      id=\"3\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n      d=\"M 664 277.6 L 668.4 184.4 A 227.823 227.823 0 0 0 667.954 169.563 Q 666.559 148.294 660.8 139.2 Q 658.401 135.203 655.204 133.203 A 15.591 15.591 0 0 0 655.2 133.2 Q 652.975 132.459 652.813 130.342 A 4.468 4.468 0 0 1 652.8 130 A 6.531 6.531 0 0 1 654.598 125.761 Q 658.181 121.571 668.904 117.522 A 116.127 116.127 0 0 1 673.2 116 Q 693.6 109.2 703 109.2 Q 708.844 109.2 711.21 111.056 A 4.019 4.019 0 0 1 712.8 114 A 139.175 139.175 0 0 1 712.723 118.034 Q 712.414 128.144 710.874 154.711 A 5532.626 5532.626 0 0 1 710.6 159.4 Q 708.4 196.8 708.4 238 A 566.385 566.385 0 0 0 708.569 252.354 Q 709.3 281.075 713.2 289.2 A 8.908 8.908 0 0 1 714.061 291.075 A 6.963 6.963 0 0 1 714.4 293.2 A 3.49 3.49 0 0 1 712.521 296.214 Q 709.606 298.054 702.166 298.345 A 75.836 75.836 0 0 1 699.2 298.4 A 63.621 63.621 0 0 1 679.397 295.117 A 83.2 83.2 0 0 1 668 290.4 Q 664.114 288.458 664.003 278.211 A 56.309 56.309 0 0 1 664 277.6 Z M 696 75.6 L 686.4 75.2 A 34.825 34.825 0 0 0 681.755 75.486 Q 676.516 76.194 673.841 78.657 A 8.217 8.217 0 0 0 672.4 80.4 A 3.276 3.276 0 0 1 671.861 81.033 A 2.131 2.131 0 0 1 670.4 81.6 A 3.253 3.253 0 0 1 667.63 79.818 Q 665.761 76.857 665.33 68.975 A 95.167 95.167 0 0 1 665.2 63.8 Q 665.2 46.903 670.066 41.721 A 8.263 8.263 0 0 1 670.6 41.2 A 15.154 15.154 0 0 1 675.256 38.468 Q 679.658 36.766 686.394 36.465 A 67.334 67.334 0 0 1 689.4 36.4 A 61.12 61.12 0 0 1 695.475 36.679 Q 703.981 37.532 707.6 41 Q 712.222 45.43 712.393 55.607 A 47.069 47.069 0 0 1 712.4 56.4 Q 712.4 64.999 710.118 69.414 A 10.311 10.311 0 0 1 708.8 71.4 A 10.225 10.225 0 0 1 704.951 74.12 Q 701.463 75.6 696 75.6 Z\"\n      id=\"4\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n  </g>\n</svg>\n<div id=\"btns\">\n  <div *ngIf=\"!authService.isLogged()\" (click)=\"navigateRegister()\">\n    <a>Register</a>\n  </div>\n  <div *ngIf=\"!authService.isLogged()\" (click)=\"navigateLogin()\">\n    <a>Login</a>\n  </div>\n  <div *ngIf=\"authService.isLogged()\" (click)=\"navigateBlog()\">\n    <a>Blog</a>\n  </div>\n  <div *ngIf=\"authService.isLogged()\" (click)=\"navigateProfile()\">\n    <a>Profile</a>\n  </div>\n  <div *ngIf=\"authService.isLogged()\" (click)=\"Logout()\">\n    <a>Logout</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ViewEncapsulation } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { ValidationService } from '../../services/validation.service';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  email: String;\n  password: String;\n  login: any;\n  iserror: any;\n  error: any;\n  constructor(\n    private AuthService: AuthService,\n    private router: Router,\n    private ValidationService: ValidationService\n  ) {}\n\n  ngOnInit(): void {\n    this.email = '';\n    this.password = '';\n    this.error = '';\n    this.iserror = false;\n  }\n  LoginUser() {\n    let valid = this.ValidationService.validateLogin(this.email, this.password);\n    if (valid.success) {\n      let user = {\n        email: this.email,\n        password: this.password,\n      };\n      this.AuthService.userLogin(user).subscribe((data) => {\n        this.login = data;\n        if (this.login.success) {\n          this.AuthService.setLocalStorage(this.login.token, this.login.user);\n          this.router.navigate(['']);\n        } else {\n          this.iserror = true;\n          this.error = 'Email or Password are not valid';\n        }\n      });\n    } else {\n      this.iserror = true;\n      this.error = valid.text;\n    }\n  }\n}\n","<svg\n  width=\"700.4\"\n  height=\"150\"\n  viewBox=\"0 0 714.4 298.4\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  id=\"logoLogin\"\n>\n  <g\n    id=\"svgGroup\"\n    stroke-linecap=\"round\"\n    fill-rule=\"evenodd\"\n    font-size=\"9pt\"\n    stroke=\"#000\"\n    stroke-width=\"0.25mm\"\n    fill=\"none\"\n    style=\"stroke: white; stroke-width: 10; fill: none;\"\n  >\n    <path\n      d=\"M 11.6 134 L 9.6 58.4 Q 9.6 40.811 5.781 30.479 A 39.104 39.104 0 0 0 5.6 30 Q 1.6 19.6 1.6 18.8 A 6.814 6.814 0 0 1 4.204 13.721 Q 8.95 9.443 22.346 6.446 A 144.97 144.97 0 0 1 28.6 5.2 Q 50.755 1.262 64.292 0.555 A 106.086 106.086 0 0 1 69.8 0.4 Q 84 0.4 85.2 7.2 Q 110.4 119.6 127.6 163.2 A 20.425 20.425 0 0 0 128.421 164.952 Q 129.973 167.862 131.641 167.994 A 2.012 2.012 0 0 0 131.8 168 A 2.835 2.835 0 0 0 133.64 167.286 Q 134.713 166.397 135.6 164.4 Q 162.4 88.8 182.8 14.8 A 10.275 10.275 0 0 1 186.085 10.124 Q 187.444 8.991 189.285 8.08 A 22.524 22.524 0 0 1 190.8 7.4 Q 195.625 5.44 205.793 3.594 A 253.913 253.913 0 0 1 213 2.4 Q 228.8 0 244.4 0 A 58.111 58.111 0 0 1 249.302 0.189 Q 260 1.1 260 6.4 A 1.608 1.608 0 0 1 259.981 6.585 Q 259.869 7.39 259.084 11.222 A 720.765 720.765 0 0 1 258.8 12.6 Q 257.975 16.588 257.15 21.804 A 338.363 338.363 0 0 0 256.4 26.8 A 1601.181 1601.181 0 0 0 255.444 33.607 Q 255.022 36.654 254.561 40.052 A 3200.023 3200.023 0 0 0 253.6 47.2 Q 250 74.8 249 110.6 Q 248 146.4 248 182.4 L 248.8 224.4 Q 248.8 246.556 251.049 258.887 A 55.67 55.67 0 0 0 252.6 265.4 Q 256.4 277.6 256.4 279.4 A 2.984 2.984 0 0 1 256.099 280.646 Q 255.481 281.988 253.6 283.6 A 38.953 38.953 0 0 1 241.687 289.982 Q 236.094 291.904 229.194 292.805 A 102.153 102.153 0 0 1 216 293.6 Q 200 293.6 198 282.8 Q 197.088 278.546 196.869 270.481 A 202.597 202.597 0 0 1 196.8 265 Q 196.8 254.561 198.557 207.072 A 14151.852 14151.852 0 0 1 199.2 190 Q 201.51 129.546 201.597 100.785 A 728.222 728.222 0 0 0 201.6 98.6 Q 201.6 75.307 199.477 70.985 A 1.384 1.384 0 0 0 198.4 70 A 1.201 1.201 0 0 0 198.267 70.007 Q 198 70.037 198 70.2 A 0.142 0.142 0 0 1 197.945 70.296 Q 197.742 70.486 196.8 70.8 Q 195.6 71.2 190.6 83.2 A 149.579 149.579 0 0 0 188.381 88.938 Q 182.825 104.05 170.8 142.4 Q 156 189.6 144 230.6 Q 132.677 269.289 130.97 274.319 A 16.882 16.882 0 0 1 130.8 274.8 A 18.138 18.138 0 0 1 126.774 281.004 Q 123.334 284.38 118.057 285.276 A 24.217 24.217 0 0 1 114 285.6 A 13.196 13.196 0 0 1 109.365 284.817 A 11.562 11.562 0 0 1 104.4 281.2 Q 94.6 235.875 73.076 160.772 A 4770.388 4770.388 0 0 0 58.8 112 L 47.6 75.6 A 9.706 9.706 0 0 0 47.3 74.921 Q 46.77 73.844 46.24 73.645 A 0.679 0.679 0 0 0 46 73.6 Q 44.255 73.6 43.424 75.732 A 7.541 7.541 0 0 0 43.2 76.4 A 509.99 509.99 0 0 0 42.577 90.178 Q 41.6 119.069 41.6 178.6 Q 41.6 254.8 47.2 274.8 A 2.984 2.984 0 0 1 47.411 275.379 Q 47.573 275.999 47.596 276.898 A 11.896 11.896 0 0 1 47.6 277.2 A 9.716 9.716 0 0 1 43.764 284.92 Q 40.484 287.649 34.4 289.4 Q 22.602 292.797 12.881 293.158 A 61.513 61.513 0 0 1 10.6 293.2 A 35.343 35.343 0 0 1 7.133 293.045 Q 3.728 292.708 1.949 291.634 A 3.617 3.617 0 0 1 0 288.4 A 1.038 1.038 0 0 1 0.031 288.213 Q 0.219 287.389 1.527 283.426 A 525.892 525.892 0 0 1 2 282 A 137.444 137.444 0 0 0 5.266 267.861 Q 7.779 254.017 9.102 234.958 A 531.788 531.788 0 0 0 9.8 222.8 A 1561.178 1561.178 0 0 0 11.031 186.707 Q 11.458 168.271 11.564 147.841 A 2648.453 2648.453 0 0 0 11.6 134 Z\"\n      id=\"0\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n      d=\"M 289.2 277.6 L 293.6 184.4 A 227.823 227.823 0 0 0 293.154 169.563 Q 291.759 148.294 286 139.2 Q 283.601 135.203 280.404 133.203 A 15.591 15.591 0 0 0 280.4 133.2 Q 278.175 132.459 278.013 130.342 A 4.468 4.468 0 0 1 278 130 A 6.531 6.531 0 0 1 279.798 125.761 Q 283.381 121.571 294.104 117.522 A 116.127 116.127 0 0 1 298.4 116 Q 318.8 109.2 328.2 109.2 Q 334.044 109.2 336.41 111.056 A 4.019 4.019 0 0 1 338 114 A 139.175 139.175 0 0 1 337.923 118.034 Q 337.614 128.144 336.074 154.711 A 5532.626 5532.626 0 0 1 335.8 159.4 Q 333.6 196.8 333.6 238 A 566.385 566.385 0 0 0 333.769 252.354 Q 334.5 281.075 338.4 289.2 A 8.908 8.908 0 0 1 339.261 291.075 A 6.963 6.963 0 0 1 339.6 293.2 A 3.49 3.49 0 0 1 337.721 296.214 Q 334.806 298.054 327.366 298.345 A 75.836 75.836 0 0 1 324.4 298.4 A 63.621 63.621 0 0 1 304.597 295.117 A 83.2 83.2 0 0 1 293.2 290.4 Q 289.314 288.458 289.203 278.211 A 56.309 56.309 0 0 1 289.2 277.6 Z M 321.2 75.6 L 311.6 75.2 A 34.825 34.825 0 0 0 306.955 75.486 Q 301.716 76.194 299.041 78.657 A 8.217 8.217 0 0 0 297.6 80.4 A 3.276 3.276 0 0 1 297.061 81.033 A 2.131 2.131 0 0 1 295.6 81.6 A 3.253 3.253 0 0 1 292.83 79.818 Q 290.961 76.857 290.53 68.975 A 95.167 95.167 0 0 1 290.4 63.8 Q 290.4 46.903 295.266 41.721 A 8.263 8.263 0 0 1 295.8 41.2 A 15.154 15.154 0 0 1 300.456 38.468 Q 304.858 36.766 311.594 36.465 A 67.334 67.334 0 0 1 314.6 36.4 A 61.12 61.12 0 0 1 320.675 36.679 Q 329.181 37.532 332.8 41 Q 337.422 45.43 337.593 55.607 A 47.069 47.069 0 0 1 337.6 56.4 Q 337.6 64.999 335.318 69.414 A 10.311 10.311 0 0 1 334 71.4 A 10.225 10.225 0 0 1 330.151 74.12 Q 326.663 75.6 321.2 75.6 Z\"\n      id=\"1\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n      d=\"M 488 152 L 486 182.4 L 487.6 196.4 Q 487.6 203.355 475.542 203.946 A 47.931 47.931 0 0 1 473.2 204 A 56.968 56.968 0 0 1 462.633 203.11 Q 445.235 199.809 444.082 184.268 A 30.652 30.652 0 0 1 444 182 A 27.097 27.097 0 0 1 444.26 178.46 Q 444.757 174.723 446.203 169.629 A 112.428 112.428 0 0 1 446.8 167.6 Q 449.6 158.4 449.6 151.6 A 19.375 19.375 0 0 0 448.334 144.52 A 17.914 17.914 0 0 0 445.6 139.8 Q 441.6 134.8 434 134.8 A 17.698 17.698 0 0 0 421.169 140.033 A 21.554 21.554 0 0 0 421 140.2 A 30.667 30.667 0 0 0 417.601 144.193 Q 415.922 146.574 415.039 148.993 A 16.522 16.522 0 0 0 414.4 151.2 L 412.8 156.8 Q 410.991 166.149 410.545 184.932 A 562.247 562.247 0 0 0 410.4 198.2 Q 410.4 220.404 410.869 235.338 A 507.581 507.581 0 0 0 411.2 243.8 Q 412 260.4 412.8 266.6 A 400.96 400.96 0 0 1 413.072 268.75 Q 413.53 272.456 413.591 273.682 A 6.578 6.578 0 0 1 413.6 274 A 14.991 14.991 0 0 1 408.817 284.956 Q 406.719 287.037 403.702 288.836 A 38.563 38.563 0 0 1 401.2 290.2 A 59.714 59.714 0 0 1 387.25 295.214 A 50.638 50.638 0 0 1 376.4 296.4 A 44.621 44.621 0 0 1 372.344 296.232 Q 364 295.466 364 291.2 L 366 278.8 A 369.653 369.653 0 0 0 369.188 252.37 Q 370.394 238.56 370.997 222.468 A 923.507 923.507 0 0 0 371.6 188 A 1237.779 1237.779 0 0 0 371.38 163.728 Q 370.789 133.714 368.604 118.036 A 104.607 104.607 0 0 0 367.6 112 Q 367.6 107.503 374.975 107.219 A 26.717 26.717 0 0 1 376 107.2 A 48.509 48.509 0 0 1 386.459 108.245 Q 392.68 109.62 397.137 112.809 A 23.97 23.97 0 0 1 404.8 122 A 4.252 4.252 0 0 0 404.996 122.604 Q 405.411 123.6 406.2 123.6 A 1.484 1.484 0 0 0 406.747 123.452 Q 407.994 122.912 411.092 120.413 A 94.455 94.455 0 0 0 411.6 120 A 47.626 47.626 0 0 1 442.169 109.204 A 59.58 59.58 0 0 1 442.8 109.2 A 60.072 60.072 0 0 1 462.75 112.691 A 69.217 69.217 0 0 1 465.2 113.6 A 33.732 33.732 0 0 1 486.184 137.111 Q 487.943 143.552 487.998 151.487 A 74.114 74.114 0 0 1 488 152 Z\"\n      id=\"2\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n      d=\"M 630.4 169.6 L 629.6 220.8 A 378.48 378.48 0 0 0 630.079 240.663 Q 631.552 268.543 637.561 279.846 A 18.679 18.679 0 0 0 641.2 284.8 A 5.897 5.897 0 0 1 642.236 286.166 A 4.638 4.638 0 0 1 642.8 288.4 A 3.405 3.405 0 0 1 640.83 291.259 Q 636.044 294.173 619.637 294.384 A 204.849 204.849 0 0 1 617 294.4 A 65.592 65.592 0 0 1 607.681 293.797 Q 590.881 291.372 589.6 279.2 Q 589.2 275.6 589.2 264.4 L 590.8 200.4 A 3.485 3.485 0 0 0 590.618 199.225 Q 590.038 197.6 587.6 197.6 Q 568.4 197.6 551.6 208.4 A 44.292 44.292 0 0 0 542.741 215.736 A 29.155 29.155 0 0 0 534.8 236 A 26.732 26.732 0 0 0 535.719 243.164 A 21.118 21.118 0 0 0 539.6 250.8 A 17.329 17.329 0 0 0 543.597 254.515 A 13.91 13.91 0 0 0 551.4 256.8 Q 558.4 256.8 563 254 Q 567.097 251.507 568.18 250.917 A 7.307 7.307 0 0 1 568.4 250.8 A 6.219 6.219 0 0 1 573.337 254.424 Q 574.785 257.193 575.108 262.048 A 44.639 44.639 0 0 1 575.2 265 A 23.898 23.898 0 0 1 566.696 283.628 A 34.903 34.903 0 0 1 562.8 286.6 A 49.912 49.912 0 0 1 548.573 293.203 A 43.91 43.91 0 0 1 536.8 294.8 Q 523.2 294.8 513.4 290 Q 506.456 286.599 502.223 282.595 A 25.221 25.221 0 0 1 499.2 279.2 A 53.648 53.648 0 0 1 493.106 268.394 A 61.842 61.842 0 0 1 492 265.6 Q 489.2 256.4 489.2 249.6 A 72.084 72.084 0 0 1 491.832 229.619 A 54.524 54.524 0 0 1 506.8 204.8 Q 524.4 188 552 180.8 A 384.489 384.489 0 0 0 563.485 178.361 Q 588.675 172.569 590 167.6 Q 591.2 163.2 591.2 152.8 Q 591.2 135.967 577.581 132.5 A 32.419 32.419 0 0 0 569.6 131.6 Q 560.4 131.6 553.2 137.4 A 20.1 20.1 0 0 0 548.407 142.828 A 17.729 17.729 0 0 0 546 152 L 548.4 161.6 A 6.745 6.745 0 0 1 545.149 166.546 Q 542.348 168.402 537.168 169.218 A 46.903 46.903 0 0 1 534 169.6 L 529.6 170 A 38.953 38.953 0 0 1 521.941 169.291 Q 517.302 168.361 513.681 166.209 A 21.977 21.977 0 0 1 510.6 164 Q 503.6 158 503.6 148 Q 503.6 141.6 507.8 133.8 A 40.467 40.467 0 0 1 513.736 125.408 A 35.006 35.006 0 0 1 518.4 121.2 A 34.236 34.236 0 0 1 523.084 118.298 Q 528.988 115.213 538.2 112.6 Q 551.6 108.8 564 108.8 Q 574.22 108.8 580.636 109.344 A 79.276 79.276 0 0 1 583.2 109.6 A 81.699 81.699 0 0 1 587.873 110.304 Q 593.641 111.326 601.8 113.4 A 40.692 40.692 0 0 1 615.708 119.766 A 38.307 38.307 0 0 1 621.4 124.8 Q 629.2 133.2 629.8 142.6 Q 630.4 152 630.4 169.6 Z\"\n      id=\"3\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n      d=\"M 664 277.6 L 668.4 184.4 A 227.823 227.823 0 0 0 667.954 169.563 Q 666.559 148.294 660.8 139.2 Q 658.401 135.203 655.204 133.203 A 15.591 15.591 0 0 0 655.2 133.2 Q 652.975 132.459 652.813 130.342 A 4.468 4.468 0 0 1 652.8 130 A 6.531 6.531 0 0 1 654.598 125.761 Q 658.181 121.571 668.904 117.522 A 116.127 116.127 0 0 1 673.2 116 Q 693.6 109.2 703 109.2 Q 708.844 109.2 711.21 111.056 A 4.019 4.019 0 0 1 712.8 114 A 139.175 139.175 0 0 1 712.723 118.034 Q 712.414 128.144 710.874 154.711 A 5532.626 5532.626 0 0 1 710.6 159.4 Q 708.4 196.8 708.4 238 A 566.385 566.385 0 0 0 708.569 252.354 Q 709.3 281.075 713.2 289.2 A 8.908 8.908 0 0 1 714.061 291.075 A 6.963 6.963 0 0 1 714.4 293.2 A 3.49 3.49 0 0 1 712.521 296.214 Q 709.606 298.054 702.166 298.345 A 75.836 75.836 0 0 1 699.2 298.4 A 63.621 63.621 0 0 1 679.397 295.117 A 83.2 83.2 0 0 1 668 290.4 Q 664.114 288.458 664.003 278.211 A 56.309 56.309 0 0 1 664 277.6 Z M 696 75.6 L 686.4 75.2 A 34.825 34.825 0 0 0 681.755 75.486 Q 676.516 76.194 673.841 78.657 A 8.217 8.217 0 0 0 672.4 80.4 A 3.276 3.276 0 0 1 671.861 81.033 A 2.131 2.131 0 0 1 670.4 81.6 A 3.253 3.253 0 0 1 667.63 79.818 Q 665.761 76.857 665.33 68.975 A 95.167 95.167 0 0 1 665.2 63.8 Q 665.2 46.903 670.066 41.721 A 8.263 8.263 0 0 1 670.6 41.2 A 15.154 15.154 0 0 1 675.256 38.468 Q 679.658 36.766 686.394 36.465 A 67.334 67.334 0 0 1 689.4 36.4 A 61.12 61.12 0 0 1 695.475 36.679 Q 703.981 37.532 707.6 41 Q 712.222 45.43 712.393 55.607 A 47.069 47.069 0 0 1 712.4 56.4 Q 712.4 64.999 710.118 69.414 A 10.311 10.311 0 0 1 708.8 71.4 A 10.225 10.225 0 0 1 704.951 74.12 Q 701.463 75.6 696 75.6 Z\"\n      id=\"4\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n  </g>\n</svg>\n<form id=\"form\" (submit)=\"LoginUser()\">\n  <div class=\"field\">\n    <div class=\"overlay\"></div>\n    <label>Email</label>\n    <input dir=\"auto\" type=\"text\" name=\"email\" [(ngModel)]=\"email\" />\n  </div>\n  <div class=\"field\">\n    <div class=\"overlay\"></div>\n    <label>Password</label>\n    <input dir=\"auto\" type=\"password\" name=\"password\" [(ngModel)]=\"password\" />\n  </div>\n\n  <input id=\"submit\" type=\"submit\" value=\"Login\" />\n</form>\n<div *ngIf=\"iserror\" class=\"error\">\n  <p>{{ error }}</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ViewEncapsulation } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { ProfileService } from '../../services/profile.service';\nimport { Router } from '@angular/router';\nimport { NONE_TYPE } from '@angular/compiler';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  imageSrc: any;\n  isImage: Boolean;\n  imageId: any;\n  postText: String;\n  fileToUpload: File = null;\n  URL: any;\n  imageStyle: any;\n\n  constructor(private router: Router, private ProfileService: ProfileService) {}\n\n  ngOnInit(): void {\n    this.imageStyle = {\n      display: 'none',\n    };\n    if (!localStorage.getItem('zoo')) {\n      localStorage.setItem('zoo', 'no reload');\n      location.reload();\n    } else {\n      localStorage.removeItem('zoo');\n    }\n  }\n  handleFileInput(files: FileList) {\n    this.imageStyle = {\n      display: 'inline',\n    };\n    this.fileToUpload = files.item(0);\n    this.uploadFileToActivity();\n  }\n  uploadFileToActivity() {\n    this.ProfileService.postFile(this.fileToUpload).subscribe(\n      (data) => {\n        this.imageSrc = data;\n        this.URL = 'http://localhost:3000/api/me/image?id=';\n        this.imageId = this.imageSrc.imageId;\n        this.imageSrc = this.URL + this.imageSrc.imageId;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  createPost() {\n    let check;\n    if (this.imageStyle.display == 'none') {\n      check = false;\n    } else {\n      check = true;\n    }\n    const newPost = {\n      isImage: check,\n      imageId: this.imageId,\n      postText: this.postText,\n    };\n    this.ProfileService.createPost(newPost).subscribe((data) => {\n      check;\n      check = data;\n      if (check.success) {\n        location.reload();\n      } else {\n        console.log('failed');\n      }\n    });\n  }\n  navigateHome() {\n    console.log('asas');\n    this.router.navigate(['']);\n  }\n}\n","<div class=\"sidenav\">\n  <svg\n    width=\"250\"\n    height=\"150\"\n    viewBox=\"0 0 714.4 298.4\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    id=\"logoReg\"\n    style=\"cursor: pointer;\"\n    (click)=\"navigateHome()\"\n  >\n    <g\n      id=\"svgGroup\"\n      stroke-linecap=\"round\"\n      fill-rule=\"evenodd\"\n      font-size=\"9pt\"\n      stroke=\"#000\"\n      stroke-width=\"0.25mm\"\n      fill=\"rgba(#bab1d6, 0.6)\"\n      style=\"stroke: white; stroke-width: 0.25mm; fill: rgba(#bab1d6, 0.6);\"\n    >\n      <path\n        d=\"M 11.6 134 L 9.6 58.4 Q 9.6 40.811 5.781 30.479 A 39.104 39.104 0 0 0 5.6 30 Q 1.6 19.6 1.6 18.8 A 6.814 6.814 0 0 1 4.204 13.721 Q 8.95 9.443 22.346 6.446 A 144.97 144.97 0 0 1 28.6 5.2 Q 50.755 1.262 64.292 0.555 A 106.086 106.086 0 0 1 69.8 0.4 Q 84 0.4 85.2 7.2 Q 110.4 119.6 127.6 163.2 A 20.425 20.425 0 0 0 128.421 164.952 Q 129.973 167.862 131.641 167.994 A 2.012 2.012 0 0 0 131.8 168 A 2.835 2.835 0 0 0 133.64 167.286 Q 134.713 166.397 135.6 164.4 Q 162.4 88.8 182.8 14.8 A 10.275 10.275 0 0 1 186.085 10.124 Q 187.444 8.991 189.285 8.08 A 22.524 22.524 0 0 1 190.8 7.4 Q 195.625 5.44 205.793 3.594 A 253.913 253.913 0 0 1 213 2.4 Q 228.8 0 244.4 0 A 58.111 58.111 0 0 1 249.302 0.189 Q 260 1.1 260 6.4 A 1.608 1.608 0 0 1 259.981 6.585 Q 259.869 7.39 259.084 11.222 A 720.765 720.765 0 0 1 258.8 12.6 Q 257.975 16.588 257.15 21.804 A 338.363 338.363 0 0 0 256.4 26.8 A 1601.181 1601.181 0 0 0 255.444 33.607 Q 255.022 36.654 254.561 40.052 A 3200.023 3200.023 0 0 0 253.6 47.2 Q 250 74.8 249 110.6 Q 248 146.4 248 182.4 L 248.8 224.4 Q 248.8 246.556 251.049 258.887 A 55.67 55.67 0 0 0 252.6 265.4 Q 256.4 277.6 256.4 279.4 A 2.984 2.984 0 0 1 256.099 280.646 Q 255.481 281.988 253.6 283.6 A 38.953 38.953 0 0 1 241.687 289.982 Q 236.094 291.904 229.194 292.805 A 102.153 102.153 0 0 1 216 293.6 Q 200 293.6 198 282.8 Q 197.088 278.546 196.869 270.481 A 202.597 202.597 0 0 1 196.8 265 Q 196.8 254.561 198.557 207.072 A 14151.852 14151.852 0 0 1 199.2 190 Q 201.51 129.546 201.597 100.785 A 728.222 728.222 0 0 0 201.6 98.6 Q 201.6 75.307 199.477 70.985 A 1.384 1.384 0 0 0 198.4 70 A 1.201 1.201 0 0 0 198.267 70.007 Q 198 70.037 198 70.2 A 0.142 0.142 0 0 1 197.945 70.296 Q 197.742 70.486 196.8 70.8 Q 195.6 71.2 190.6 83.2 A 149.579 149.579 0 0 0 188.381 88.938 Q 182.825 104.05 170.8 142.4 Q 156 189.6 144 230.6 Q 132.677 269.289 130.97 274.319 A 16.882 16.882 0 0 1 130.8 274.8 A 18.138 18.138 0 0 1 126.774 281.004 Q 123.334 284.38 118.057 285.276 A 24.217 24.217 0 0 1 114 285.6 A 13.196 13.196 0 0 1 109.365 284.817 A 11.562 11.562 0 0 1 104.4 281.2 Q 94.6 235.875 73.076 160.772 A 4770.388 4770.388 0 0 0 58.8 112 L 47.6 75.6 A 9.706 9.706 0 0 0 47.3 74.921 Q 46.77 73.844 46.24 73.645 A 0.679 0.679 0 0 0 46 73.6 Q 44.255 73.6 43.424 75.732 A 7.541 7.541 0 0 0 43.2 76.4 A 509.99 509.99 0 0 0 42.577 90.178 Q 41.6 119.069 41.6 178.6 Q 41.6 254.8 47.2 274.8 A 2.984 2.984 0 0 1 47.411 275.379 Q 47.573 275.999 47.596 276.898 A 11.896 11.896 0 0 1 47.6 277.2 A 9.716 9.716 0 0 1 43.764 284.92 Q 40.484 287.649 34.4 289.4 Q 22.602 292.797 12.881 293.158 A 61.513 61.513 0 0 1 10.6 293.2 A 35.343 35.343 0 0 1 7.133 293.045 Q 3.728 292.708 1.949 291.634 A 3.617 3.617 0 0 1 0 288.4 A 1.038 1.038 0 0 1 0.031 288.213 Q 0.219 287.389 1.527 283.426 A 525.892 525.892 0 0 1 2 282 A 137.444 137.444 0 0 0 5.266 267.861 Q 7.779 254.017 9.102 234.958 A 531.788 531.788 0 0 0 9.8 222.8 A 1561.178 1561.178 0 0 0 11.031 186.707 Q 11.458 168.271 11.564 147.841 A 2648.453 2648.453 0 0 0 11.6 134 Z\"\n        id=\"0\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 289.2 277.6 L 293.6 184.4 A 227.823 227.823 0 0 0 293.154 169.563 Q 291.759 148.294 286 139.2 Q 283.601 135.203 280.404 133.203 A 15.591 15.591 0 0 0 280.4 133.2 Q 278.175 132.459 278.013 130.342 A 4.468 4.468 0 0 1 278 130 A 6.531 6.531 0 0 1 279.798 125.761 Q 283.381 121.571 294.104 117.522 A 116.127 116.127 0 0 1 298.4 116 Q 318.8 109.2 328.2 109.2 Q 334.044 109.2 336.41 111.056 A 4.019 4.019 0 0 1 338 114 A 139.175 139.175 0 0 1 337.923 118.034 Q 337.614 128.144 336.074 154.711 A 5532.626 5532.626 0 0 1 335.8 159.4 Q 333.6 196.8 333.6 238 A 566.385 566.385 0 0 0 333.769 252.354 Q 334.5 281.075 338.4 289.2 A 8.908 8.908 0 0 1 339.261 291.075 A 6.963 6.963 0 0 1 339.6 293.2 A 3.49 3.49 0 0 1 337.721 296.214 Q 334.806 298.054 327.366 298.345 A 75.836 75.836 0 0 1 324.4 298.4 A 63.621 63.621 0 0 1 304.597 295.117 A 83.2 83.2 0 0 1 293.2 290.4 Q 289.314 288.458 289.203 278.211 A 56.309 56.309 0 0 1 289.2 277.6 Z M 321.2 75.6 L 311.6 75.2 A 34.825 34.825 0 0 0 306.955 75.486 Q 301.716 76.194 299.041 78.657 A 8.217 8.217 0 0 0 297.6 80.4 A 3.276 3.276 0 0 1 297.061 81.033 A 2.131 2.131 0 0 1 295.6 81.6 A 3.253 3.253 0 0 1 292.83 79.818 Q 290.961 76.857 290.53 68.975 A 95.167 95.167 0 0 1 290.4 63.8 Q 290.4 46.903 295.266 41.721 A 8.263 8.263 0 0 1 295.8 41.2 A 15.154 15.154 0 0 1 300.456 38.468 Q 304.858 36.766 311.594 36.465 A 67.334 67.334 0 0 1 314.6 36.4 A 61.12 61.12 0 0 1 320.675 36.679 Q 329.181 37.532 332.8 41 Q 337.422 45.43 337.593 55.607 A 47.069 47.069 0 0 1 337.6 56.4 Q 337.6 64.999 335.318 69.414 A 10.311 10.311 0 0 1 334 71.4 A 10.225 10.225 0 0 1 330.151 74.12 Q 326.663 75.6 321.2 75.6 Z\"\n        id=\"1\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 488 152 L 486 182.4 L 487.6 196.4 Q 487.6 203.355 475.542 203.946 A 47.931 47.931 0 0 1 473.2 204 A 56.968 56.968 0 0 1 462.633 203.11 Q 445.235 199.809 444.082 184.268 A 30.652 30.652 0 0 1 444 182 A 27.097 27.097 0 0 1 444.26 178.46 Q 444.757 174.723 446.203 169.629 A 112.428 112.428 0 0 1 446.8 167.6 Q 449.6 158.4 449.6 151.6 A 19.375 19.375 0 0 0 448.334 144.52 A 17.914 17.914 0 0 0 445.6 139.8 Q 441.6 134.8 434 134.8 A 17.698 17.698 0 0 0 421.169 140.033 A 21.554 21.554 0 0 0 421 140.2 A 30.667 30.667 0 0 0 417.601 144.193 Q 415.922 146.574 415.039 148.993 A 16.522 16.522 0 0 0 414.4 151.2 L 412.8 156.8 Q 410.991 166.149 410.545 184.932 A 562.247 562.247 0 0 0 410.4 198.2 Q 410.4 220.404 410.869 235.338 A 507.581 507.581 0 0 0 411.2 243.8 Q 412 260.4 412.8 266.6 A 400.96 400.96 0 0 1 413.072 268.75 Q 413.53 272.456 413.591 273.682 A 6.578 6.578 0 0 1 413.6 274 A 14.991 14.991 0 0 1 408.817 284.956 Q 406.719 287.037 403.702 288.836 A 38.563 38.563 0 0 1 401.2 290.2 A 59.714 59.714 0 0 1 387.25 295.214 A 50.638 50.638 0 0 1 376.4 296.4 A 44.621 44.621 0 0 1 372.344 296.232 Q 364 295.466 364 291.2 L 366 278.8 A 369.653 369.653 0 0 0 369.188 252.37 Q 370.394 238.56 370.997 222.468 A 923.507 923.507 0 0 0 371.6 188 A 1237.779 1237.779 0 0 0 371.38 163.728 Q 370.789 133.714 368.604 118.036 A 104.607 104.607 0 0 0 367.6 112 Q 367.6 107.503 374.975 107.219 A 26.717 26.717 0 0 1 376 107.2 A 48.509 48.509 0 0 1 386.459 108.245 Q 392.68 109.62 397.137 112.809 A 23.97 23.97 0 0 1 404.8 122 A 4.252 4.252 0 0 0 404.996 122.604 Q 405.411 123.6 406.2 123.6 A 1.484 1.484 0 0 0 406.747 123.452 Q 407.994 122.912 411.092 120.413 A 94.455 94.455 0 0 0 411.6 120 A 47.626 47.626 0 0 1 442.169 109.204 A 59.58 59.58 0 0 1 442.8 109.2 A 60.072 60.072 0 0 1 462.75 112.691 A 69.217 69.217 0 0 1 465.2 113.6 A 33.732 33.732 0 0 1 486.184 137.111 Q 487.943 143.552 487.998 151.487 A 74.114 74.114 0 0 1 488 152 Z\"\n        id=\"2\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 630.4 169.6 L 629.6 220.8 A 378.48 378.48 0 0 0 630.079 240.663 Q 631.552 268.543 637.561 279.846 A 18.679 18.679 0 0 0 641.2 284.8 A 5.897 5.897 0 0 1 642.236 286.166 A 4.638 4.638 0 0 1 642.8 288.4 A 3.405 3.405 0 0 1 640.83 291.259 Q 636.044 294.173 619.637 294.384 A 204.849 204.849 0 0 1 617 294.4 A 65.592 65.592 0 0 1 607.681 293.797 Q 590.881 291.372 589.6 279.2 Q 589.2 275.6 589.2 264.4 L 590.8 200.4 A 3.485 3.485 0 0 0 590.618 199.225 Q 590.038 197.6 587.6 197.6 Q 568.4 197.6 551.6 208.4 A 44.292 44.292 0 0 0 542.741 215.736 A 29.155 29.155 0 0 0 534.8 236 A 26.732 26.732 0 0 0 535.719 243.164 A 21.118 21.118 0 0 0 539.6 250.8 A 17.329 17.329 0 0 0 543.597 254.515 A 13.91 13.91 0 0 0 551.4 256.8 Q 558.4 256.8 563 254 Q 567.097 251.507 568.18 250.917 A 7.307 7.307 0 0 1 568.4 250.8 A 6.219 6.219 0 0 1 573.337 254.424 Q 574.785 257.193 575.108 262.048 A 44.639 44.639 0 0 1 575.2 265 A 23.898 23.898 0 0 1 566.696 283.628 A 34.903 34.903 0 0 1 562.8 286.6 A 49.912 49.912 0 0 1 548.573 293.203 A 43.91 43.91 0 0 1 536.8 294.8 Q 523.2 294.8 513.4 290 Q 506.456 286.599 502.223 282.595 A 25.221 25.221 0 0 1 499.2 279.2 A 53.648 53.648 0 0 1 493.106 268.394 A 61.842 61.842 0 0 1 492 265.6 Q 489.2 256.4 489.2 249.6 A 72.084 72.084 0 0 1 491.832 229.619 A 54.524 54.524 0 0 1 506.8 204.8 Q 524.4 188 552 180.8 A 384.489 384.489 0 0 0 563.485 178.361 Q 588.675 172.569 590 167.6 Q 591.2 163.2 591.2 152.8 Q 591.2 135.967 577.581 132.5 A 32.419 32.419 0 0 0 569.6 131.6 Q 560.4 131.6 553.2 137.4 A 20.1 20.1 0 0 0 548.407 142.828 A 17.729 17.729 0 0 0 546 152 L 548.4 161.6 A 6.745 6.745 0 0 1 545.149 166.546 Q 542.348 168.402 537.168 169.218 A 46.903 46.903 0 0 1 534 169.6 L 529.6 170 A 38.953 38.953 0 0 1 521.941 169.291 Q 517.302 168.361 513.681 166.209 A 21.977 21.977 0 0 1 510.6 164 Q 503.6 158 503.6 148 Q 503.6 141.6 507.8 133.8 A 40.467 40.467 0 0 1 513.736 125.408 A 35.006 35.006 0 0 1 518.4 121.2 A 34.236 34.236 0 0 1 523.084 118.298 Q 528.988 115.213 538.2 112.6 Q 551.6 108.8 564 108.8 Q 574.22 108.8 580.636 109.344 A 79.276 79.276 0 0 1 583.2 109.6 A 81.699 81.699 0 0 1 587.873 110.304 Q 593.641 111.326 601.8 113.4 A 40.692 40.692 0 0 1 615.708 119.766 A 38.307 38.307 0 0 1 621.4 124.8 Q 629.2 133.2 629.8 142.6 Q 630.4 152 630.4 169.6 Z\"\n        id=\"3\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 664 277.6 L 668.4 184.4 A 227.823 227.823 0 0 0 667.954 169.563 Q 666.559 148.294 660.8 139.2 Q 658.401 135.203 655.204 133.203 A 15.591 15.591 0 0 0 655.2 133.2 Q 652.975 132.459 652.813 130.342 A 4.468 4.468 0 0 1 652.8 130 A 6.531 6.531 0 0 1 654.598 125.761 Q 658.181 121.571 668.904 117.522 A 116.127 116.127 0 0 1 673.2 116 Q 693.6 109.2 703 109.2 Q 708.844 109.2 711.21 111.056 A 4.019 4.019 0 0 1 712.8 114 A 139.175 139.175 0 0 1 712.723 118.034 Q 712.414 128.144 710.874 154.711 A 5532.626 5532.626 0 0 1 710.6 159.4 Q 708.4 196.8 708.4 238 A 566.385 566.385 0 0 0 708.569 252.354 Q 709.3 281.075 713.2 289.2 A 8.908 8.908 0 0 1 714.061 291.075 A 6.963 6.963 0 0 1 714.4 293.2 A 3.49 3.49 0 0 1 712.521 296.214 Q 709.606 298.054 702.166 298.345 A 75.836 75.836 0 0 1 699.2 298.4 A 63.621 63.621 0 0 1 679.397 295.117 A 83.2 83.2 0 0 1 668 290.4 Q 664.114 288.458 664.003 278.211 A 56.309 56.309 0 0 1 664 277.6 Z M 696 75.6 L 686.4 75.2 A 34.825 34.825 0 0 0 681.755 75.486 Q 676.516 76.194 673.841 78.657 A 8.217 8.217 0 0 0 672.4 80.4 A 3.276 3.276 0 0 1 671.861 81.033 A 2.131 2.131 0 0 1 670.4 81.6 A 3.253 3.253 0 0 1 667.63 79.818 Q 665.761 76.857 665.33 68.975 A 95.167 95.167 0 0 1 665.2 63.8 Q 665.2 46.903 670.066 41.721 A 8.263 8.263 0 0 1 670.6 41.2 A 15.154 15.154 0 0 1 675.256 38.468 Q 679.658 36.766 686.394 36.465 A 67.334 67.334 0 0 1 689.4 36.4 A 61.12 61.12 0 0 1 695.475 36.679 Q 703.981 37.532 707.6 41 Q 712.222 45.43 712.393 55.607 A 47.069 47.069 0 0 1 712.4 56.4 Q 712.4 64.999 710.118 69.414 A 10.311 10.311 0 0 1 708.8 71.4 A 10.225 10.225 0 0 1 704.951 74.12 Q 701.463 75.6 696 75.6 Z\"\n        id=\"4\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n    </g>\n  </svg>\n  <a class=\"active\" routerLink=\"/profile/createPost\">Create Post</a>\n  <a routerLink=\"/profile/editPosts\">Edit Post</a>\n  <a routerLink=\"/profile/editProfile\">Edit Profile Info</a>\n  <a routerLink=\"/profile/comments\">See Comments</a>\n</div>\n\n<div class=\"content\">\n  <div class=\"postcard\">\n    <div class=\"post\">\n      <form>\n        <textarea\n          name=\"comment\"\n          id=\"comment\"\n          rows=\"10\"\n          tabindex=\"4\"\n          dir=\"auto\"\n          required=\"required\"\n          [(ngModel)]=\"postText\"\n        ></textarea>\n        <br />\n        <input\n          type=\"file\"\n          name=\"file\"\n          width=\"30px\"\n          id=\"file\"\n          class=\"inputfile\"\n          (change)=\"handleFileInput($event.target.files)\"\n        />\n        <label for=\"file\">Choose an Image</label>\n      </form>\n      <input id=\"submit\" type=\"submit\" value=\"POST\" (click)=\"createPost()\" />\n      <div [ngStyle]=\"imageStyle\" class=\"postImage\">\n        <img src=\"{{ imageSrc }}\" />\n      </div>\n    </div>\n  </div>\n</div>\n","<div class=\"wrapper\">\n  <svg\n    width=\"700.4\"\n    height=\"150\"\n    viewBox=\"0 0 714.4 298.4\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    id=\"logoReg\"\n  >\n    <g\n      id=\"svgGroup\"\n      stroke-linecap=\"round\"\n      fill-rule=\"evenodd\"\n      font-size=\"9pt\"\n      stroke=\"#000\"\n      stroke-width=\"0.25mm\"\n      fill=\"none\"\n      style=\"stroke: white; stroke-width: 10; fill: none;\"\n    >\n      <path\n        d=\"M 11.6 134 L 9.6 58.4 Q 9.6 40.811 5.781 30.479 A 39.104 39.104 0 0 0 5.6 30 Q 1.6 19.6 1.6 18.8 A 6.814 6.814 0 0 1 4.204 13.721 Q 8.95 9.443 22.346 6.446 A 144.97 144.97 0 0 1 28.6 5.2 Q 50.755 1.262 64.292 0.555 A 106.086 106.086 0 0 1 69.8 0.4 Q 84 0.4 85.2 7.2 Q 110.4 119.6 127.6 163.2 A 20.425 20.425 0 0 0 128.421 164.952 Q 129.973 167.862 131.641 167.994 A 2.012 2.012 0 0 0 131.8 168 A 2.835 2.835 0 0 0 133.64 167.286 Q 134.713 166.397 135.6 164.4 Q 162.4 88.8 182.8 14.8 A 10.275 10.275 0 0 1 186.085 10.124 Q 187.444 8.991 189.285 8.08 A 22.524 22.524 0 0 1 190.8 7.4 Q 195.625 5.44 205.793 3.594 A 253.913 253.913 0 0 1 213 2.4 Q 228.8 0 244.4 0 A 58.111 58.111 0 0 1 249.302 0.189 Q 260 1.1 260 6.4 A 1.608 1.608 0 0 1 259.981 6.585 Q 259.869 7.39 259.084 11.222 A 720.765 720.765 0 0 1 258.8 12.6 Q 257.975 16.588 257.15 21.804 A 338.363 338.363 0 0 0 256.4 26.8 A 1601.181 1601.181 0 0 0 255.444 33.607 Q 255.022 36.654 254.561 40.052 A 3200.023 3200.023 0 0 0 253.6 47.2 Q 250 74.8 249 110.6 Q 248 146.4 248 182.4 L 248.8 224.4 Q 248.8 246.556 251.049 258.887 A 55.67 55.67 0 0 0 252.6 265.4 Q 256.4 277.6 256.4 279.4 A 2.984 2.984 0 0 1 256.099 280.646 Q 255.481 281.988 253.6 283.6 A 38.953 38.953 0 0 1 241.687 289.982 Q 236.094 291.904 229.194 292.805 A 102.153 102.153 0 0 1 216 293.6 Q 200 293.6 198 282.8 Q 197.088 278.546 196.869 270.481 A 202.597 202.597 0 0 1 196.8 265 Q 196.8 254.561 198.557 207.072 A 14151.852 14151.852 0 0 1 199.2 190 Q 201.51 129.546 201.597 100.785 A 728.222 728.222 0 0 0 201.6 98.6 Q 201.6 75.307 199.477 70.985 A 1.384 1.384 0 0 0 198.4 70 A 1.201 1.201 0 0 0 198.267 70.007 Q 198 70.037 198 70.2 A 0.142 0.142 0 0 1 197.945 70.296 Q 197.742 70.486 196.8 70.8 Q 195.6 71.2 190.6 83.2 A 149.579 149.579 0 0 0 188.381 88.938 Q 182.825 104.05 170.8 142.4 Q 156 189.6 144 230.6 Q 132.677 269.289 130.97 274.319 A 16.882 16.882 0 0 1 130.8 274.8 A 18.138 18.138 0 0 1 126.774 281.004 Q 123.334 284.38 118.057 285.276 A 24.217 24.217 0 0 1 114 285.6 A 13.196 13.196 0 0 1 109.365 284.817 A 11.562 11.562 0 0 1 104.4 281.2 Q 94.6 235.875 73.076 160.772 A 4770.388 4770.388 0 0 0 58.8 112 L 47.6 75.6 A 9.706 9.706 0 0 0 47.3 74.921 Q 46.77 73.844 46.24 73.645 A 0.679 0.679 0 0 0 46 73.6 Q 44.255 73.6 43.424 75.732 A 7.541 7.541 0 0 0 43.2 76.4 A 509.99 509.99 0 0 0 42.577 90.178 Q 41.6 119.069 41.6 178.6 Q 41.6 254.8 47.2 274.8 A 2.984 2.984 0 0 1 47.411 275.379 Q 47.573 275.999 47.596 276.898 A 11.896 11.896 0 0 1 47.6 277.2 A 9.716 9.716 0 0 1 43.764 284.92 Q 40.484 287.649 34.4 289.4 Q 22.602 292.797 12.881 293.158 A 61.513 61.513 0 0 1 10.6 293.2 A 35.343 35.343 0 0 1 7.133 293.045 Q 3.728 292.708 1.949 291.634 A 3.617 3.617 0 0 1 0 288.4 A 1.038 1.038 0 0 1 0.031 288.213 Q 0.219 287.389 1.527 283.426 A 525.892 525.892 0 0 1 2 282 A 137.444 137.444 0 0 0 5.266 267.861 Q 7.779 254.017 9.102 234.958 A 531.788 531.788 0 0 0 9.8 222.8 A 1561.178 1561.178 0 0 0 11.031 186.707 Q 11.458 168.271 11.564 147.841 A 2648.453 2648.453 0 0 0 11.6 134 Z\"\n        id=\"0\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 289.2 277.6 L 293.6 184.4 A 227.823 227.823 0 0 0 293.154 169.563 Q 291.759 148.294 286 139.2 Q 283.601 135.203 280.404 133.203 A 15.591 15.591 0 0 0 280.4 133.2 Q 278.175 132.459 278.013 130.342 A 4.468 4.468 0 0 1 278 130 A 6.531 6.531 0 0 1 279.798 125.761 Q 283.381 121.571 294.104 117.522 A 116.127 116.127 0 0 1 298.4 116 Q 318.8 109.2 328.2 109.2 Q 334.044 109.2 336.41 111.056 A 4.019 4.019 0 0 1 338 114 A 139.175 139.175 0 0 1 337.923 118.034 Q 337.614 128.144 336.074 154.711 A 5532.626 5532.626 0 0 1 335.8 159.4 Q 333.6 196.8 333.6 238 A 566.385 566.385 0 0 0 333.769 252.354 Q 334.5 281.075 338.4 289.2 A 8.908 8.908 0 0 1 339.261 291.075 A 6.963 6.963 0 0 1 339.6 293.2 A 3.49 3.49 0 0 1 337.721 296.214 Q 334.806 298.054 327.366 298.345 A 75.836 75.836 0 0 1 324.4 298.4 A 63.621 63.621 0 0 1 304.597 295.117 A 83.2 83.2 0 0 1 293.2 290.4 Q 289.314 288.458 289.203 278.211 A 56.309 56.309 0 0 1 289.2 277.6 Z M 321.2 75.6 L 311.6 75.2 A 34.825 34.825 0 0 0 306.955 75.486 Q 301.716 76.194 299.041 78.657 A 8.217 8.217 0 0 0 297.6 80.4 A 3.276 3.276 0 0 1 297.061 81.033 A 2.131 2.131 0 0 1 295.6 81.6 A 3.253 3.253 0 0 1 292.83 79.818 Q 290.961 76.857 290.53 68.975 A 95.167 95.167 0 0 1 290.4 63.8 Q 290.4 46.903 295.266 41.721 A 8.263 8.263 0 0 1 295.8 41.2 A 15.154 15.154 0 0 1 300.456 38.468 Q 304.858 36.766 311.594 36.465 A 67.334 67.334 0 0 1 314.6 36.4 A 61.12 61.12 0 0 1 320.675 36.679 Q 329.181 37.532 332.8 41 Q 337.422 45.43 337.593 55.607 A 47.069 47.069 0 0 1 337.6 56.4 Q 337.6 64.999 335.318 69.414 A 10.311 10.311 0 0 1 334 71.4 A 10.225 10.225 0 0 1 330.151 74.12 Q 326.663 75.6 321.2 75.6 Z\"\n        id=\"1\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 488 152 L 486 182.4 L 487.6 196.4 Q 487.6 203.355 475.542 203.946 A 47.931 47.931 0 0 1 473.2 204 A 56.968 56.968 0 0 1 462.633 203.11 Q 445.235 199.809 444.082 184.268 A 30.652 30.652 0 0 1 444 182 A 27.097 27.097 0 0 1 444.26 178.46 Q 444.757 174.723 446.203 169.629 A 112.428 112.428 0 0 1 446.8 167.6 Q 449.6 158.4 449.6 151.6 A 19.375 19.375 0 0 0 448.334 144.52 A 17.914 17.914 0 0 0 445.6 139.8 Q 441.6 134.8 434 134.8 A 17.698 17.698 0 0 0 421.169 140.033 A 21.554 21.554 0 0 0 421 140.2 A 30.667 30.667 0 0 0 417.601 144.193 Q 415.922 146.574 415.039 148.993 A 16.522 16.522 0 0 0 414.4 151.2 L 412.8 156.8 Q 410.991 166.149 410.545 184.932 A 562.247 562.247 0 0 0 410.4 198.2 Q 410.4 220.404 410.869 235.338 A 507.581 507.581 0 0 0 411.2 243.8 Q 412 260.4 412.8 266.6 A 400.96 400.96 0 0 1 413.072 268.75 Q 413.53 272.456 413.591 273.682 A 6.578 6.578 0 0 1 413.6 274 A 14.991 14.991 0 0 1 408.817 284.956 Q 406.719 287.037 403.702 288.836 A 38.563 38.563 0 0 1 401.2 290.2 A 59.714 59.714 0 0 1 387.25 295.214 A 50.638 50.638 0 0 1 376.4 296.4 A 44.621 44.621 0 0 1 372.344 296.232 Q 364 295.466 364 291.2 L 366 278.8 A 369.653 369.653 0 0 0 369.188 252.37 Q 370.394 238.56 370.997 222.468 A 923.507 923.507 0 0 0 371.6 188 A 1237.779 1237.779 0 0 0 371.38 163.728 Q 370.789 133.714 368.604 118.036 A 104.607 104.607 0 0 0 367.6 112 Q 367.6 107.503 374.975 107.219 A 26.717 26.717 0 0 1 376 107.2 A 48.509 48.509 0 0 1 386.459 108.245 Q 392.68 109.62 397.137 112.809 A 23.97 23.97 0 0 1 404.8 122 A 4.252 4.252 0 0 0 404.996 122.604 Q 405.411 123.6 406.2 123.6 A 1.484 1.484 0 0 0 406.747 123.452 Q 407.994 122.912 411.092 120.413 A 94.455 94.455 0 0 0 411.6 120 A 47.626 47.626 0 0 1 442.169 109.204 A 59.58 59.58 0 0 1 442.8 109.2 A 60.072 60.072 0 0 1 462.75 112.691 A 69.217 69.217 0 0 1 465.2 113.6 A 33.732 33.732 0 0 1 486.184 137.111 Q 487.943 143.552 487.998 151.487 A 74.114 74.114 0 0 1 488 152 Z\"\n        id=\"2\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 630.4 169.6 L 629.6 220.8 A 378.48 378.48 0 0 0 630.079 240.663 Q 631.552 268.543 637.561 279.846 A 18.679 18.679 0 0 0 641.2 284.8 A 5.897 5.897 0 0 1 642.236 286.166 A 4.638 4.638 0 0 1 642.8 288.4 A 3.405 3.405 0 0 1 640.83 291.259 Q 636.044 294.173 619.637 294.384 A 204.849 204.849 0 0 1 617 294.4 A 65.592 65.592 0 0 1 607.681 293.797 Q 590.881 291.372 589.6 279.2 Q 589.2 275.6 589.2 264.4 L 590.8 200.4 A 3.485 3.485 0 0 0 590.618 199.225 Q 590.038 197.6 587.6 197.6 Q 568.4 197.6 551.6 208.4 A 44.292 44.292 0 0 0 542.741 215.736 A 29.155 29.155 0 0 0 534.8 236 A 26.732 26.732 0 0 0 535.719 243.164 A 21.118 21.118 0 0 0 539.6 250.8 A 17.329 17.329 0 0 0 543.597 254.515 A 13.91 13.91 0 0 0 551.4 256.8 Q 558.4 256.8 563 254 Q 567.097 251.507 568.18 250.917 A 7.307 7.307 0 0 1 568.4 250.8 A 6.219 6.219 0 0 1 573.337 254.424 Q 574.785 257.193 575.108 262.048 A 44.639 44.639 0 0 1 575.2 265 A 23.898 23.898 0 0 1 566.696 283.628 A 34.903 34.903 0 0 1 562.8 286.6 A 49.912 49.912 0 0 1 548.573 293.203 A 43.91 43.91 0 0 1 536.8 294.8 Q 523.2 294.8 513.4 290 Q 506.456 286.599 502.223 282.595 A 25.221 25.221 0 0 1 499.2 279.2 A 53.648 53.648 0 0 1 493.106 268.394 A 61.842 61.842 0 0 1 492 265.6 Q 489.2 256.4 489.2 249.6 A 72.084 72.084 0 0 1 491.832 229.619 A 54.524 54.524 0 0 1 506.8 204.8 Q 524.4 188 552 180.8 A 384.489 384.489 0 0 0 563.485 178.361 Q 588.675 172.569 590 167.6 Q 591.2 163.2 591.2 152.8 Q 591.2 135.967 577.581 132.5 A 32.419 32.419 0 0 0 569.6 131.6 Q 560.4 131.6 553.2 137.4 A 20.1 20.1 0 0 0 548.407 142.828 A 17.729 17.729 0 0 0 546 152 L 548.4 161.6 A 6.745 6.745 0 0 1 545.149 166.546 Q 542.348 168.402 537.168 169.218 A 46.903 46.903 0 0 1 534 169.6 L 529.6 170 A 38.953 38.953 0 0 1 521.941 169.291 Q 517.302 168.361 513.681 166.209 A 21.977 21.977 0 0 1 510.6 164 Q 503.6 158 503.6 148 Q 503.6 141.6 507.8 133.8 A 40.467 40.467 0 0 1 513.736 125.408 A 35.006 35.006 0 0 1 518.4 121.2 A 34.236 34.236 0 0 1 523.084 118.298 Q 528.988 115.213 538.2 112.6 Q 551.6 108.8 564 108.8 Q 574.22 108.8 580.636 109.344 A 79.276 79.276 0 0 1 583.2 109.6 A 81.699 81.699 0 0 1 587.873 110.304 Q 593.641 111.326 601.8 113.4 A 40.692 40.692 0 0 1 615.708 119.766 A 38.307 38.307 0 0 1 621.4 124.8 Q 629.2 133.2 629.8 142.6 Q 630.4 152 630.4 169.6 Z\"\n        id=\"3\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 664 277.6 L 668.4 184.4 A 227.823 227.823 0 0 0 667.954 169.563 Q 666.559 148.294 660.8 139.2 Q 658.401 135.203 655.204 133.203 A 15.591 15.591 0 0 0 655.2 133.2 Q 652.975 132.459 652.813 130.342 A 4.468 4.468 0 0 1 652.8 130 A 6.531 6.531 0 0 1 654.598 125.761 Q 658.181 121.571 668.904 117.522 A 116.127 116.127 0 0 1 673.2 116 Q 693.6 109.2 703 109.2 Q 708.844 109.2 711.21 111.056 A 4.019 4.019 0 0 1 712.8 114 A 139.175 139.175 0 0 1 712.723 118.034 Q 712.414 128.144 710.874 154.711 A 5532.626 5532.626 0 0 1 710.6 159.4 Q 708.4 196.8 708.4 238 A 566.385 566.385 0 0 0 708.569 252.354 Q 709.3 281.075 713.2 289.2 A 8.908 8.908 0 0 1 714.061 291.075 A 6.963 6.963 0 0 1 714.4 293.2 A 3.49 3.49 0 0 1 712.521 296.214 Q 709.606 298.054 702.166 298.345 A 75.836 75.836 0 0 1 699.2 298.4 A 63.621 63.621 0 0 1 679.397 295.117 A 83.2 83.2 0 0 1 668 290.4 Q 664.114 288.458 664.003 278.211 A 56.309 56.309 0 0 1 664 277.6 Z M 696 75.6 L 686.4 75.2 A 34.825 34.825 0 0 0 681.755 75.486 Q 676.516 76.194 673.841 78.657 A 8.217 8.217 0 0 0 672.4 80.4 A 3.276 3.276 0 0 1 671.861 81.033 A 2.131 2.131 0 0 1 670.4 81.6 A 3.253 3.253 0 0 1 667.63 79.818 Q 665.761 76.857 665.33 68.975 A 95.167 95.167 0 0 1 665.2 63.8 Q 665.2 46.903 670.066 41.721 A 8.263 8.263 0 0 1 670.6 41.2 A 15.154 15.154 0 0 1 675.256 38.468 Q 679.658 36.766 686.394 36.465 A 67.334 67.334 0 0 1 689.4 36.4 A 61.12 61.12 0 0 1 695.475 36.679 Q 703.981 37.532 707.6 41 Q 712.222 45.43 712.393 55.607 A 47.069 47.069 0 0 1 712.4 56.4 Q 712.4 64.999 710.118 69.414 A 10.311 10.311 0 0 1 708.8 71.4 A 10.225 10.225 0 0 1 704.951 74.12 Q 701.463 75.6 696 75.6 Z\"\n        id=\"4\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n    </g>\n  </svg>\n  <form id=\"form\" (submit)=\"RegisterUser()\">\n    <div class=\"field\">\n      <div class=\"overlay\"></div>\n      <label>Username</label>\n      <input dir=\"auto\" type=\"text\" name=\"userName\" [(ngModel)]=\"userName\" />\n    </div>\n    <div class=\"field\">\n      <div class=\"overlay\"></div>\n      <label>Email</label>\n      <input dir=\"auto\" type=\"text\" name=\"email\" [(ngModel)]=\"email\" />\n    </div>\n    <div class=\"field\">\n      <div class=\"overlay\"></div>\n      <label>Password</label>\n      <input\n        dir=\"auto\"\n        type=\"password\"\n        name=\"password\"\n        [(ngModel)]=\"password\"\n      />\n    </div>\n    <div class=\"field\">\n      <div class=\"overlay\"></div>\n      <label>Blog Name</label>\n      <input dir=\"auto\" type=\"text\" name=\"blogName\" [(ngModel)]=\"blogName\" />\n    </div>\n    <div *ngIf=\"iserror\" class=\"error\">\n      <p>{{ error }}</p>\n    </div>\n    <input id=\"submit\" type=\"submit\" value=\"Register\" />\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ViewEncapsulation } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { ValidationService } from '../../services/validation.service';\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  userName: String;\n  blogName: String;\n  password: String;\n  email: String;\n  res: any;\n  error: any;\n  iserror: any;\n  constructor(\n    private AuthService: AuthService,\n    private router: Router,\n    private ValidationService: ValidationService\n  ) {}\n\n  ngOnInit(): void {\n    this.iserror = false;\n    this.error = '';\n    this.userName = '';\n    this.blogName = '';\n    this.password = '';\n    this.email = '';\n  }\n  async RegisterUser() {\n    let valid = await this.ValidationService.validateRegister(\n      this.userName,\n      this.password,\n      this.email,\n      this.blogName\n    );\n    if (valid.success) {\n      this.ValidationService.validateEmail(this.email).subscribe((data) => {\n        let checkExistMail: any;\n        checkExistMail = data;\n        console.log(checkExistMail);\n        if (!checkExistMail.success) {\n          this.iserror = true;\n          this.error = 'Email is already existed';\n        } else {\n          this.ValidationService.validateBlog(this.blogName).subscribe(\n            (data) => {\n              let checkExistBlog: any;\n              checkExistBlog = data;\n              console.log(checkExistBlog);\n              if (!checkExistBlog.success) {\n                this.iserror = true;\n                this.error = 'Blog Name is already existed';\n              } else {\n                const user = {\n                  userName: this.userName,\n                  blogName: this.blogName,\n                  password: this.password,\n                  email: this.email,\n                };\n\n                this.AuthService.userRegister(user).subscribe((data) => {\n                  this.res = data;\n                  if (this.res.success) {\n                    this.router.navigate(['/login']);\n                  }\n                });\n              }\n            }\n          );\n        }\n      });\n    } else {\n      this.iserror = true;\n      this.error = valid.text;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ViewEncapsulation } from '@angular/core';\nimport { BlogService } from '../../services/blog.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app-see-comments',\n  templateUrl: './see-comments.component.html',\n  styleUrls: ['./see-comments.component.scss'],\n})\nexport class SeeCommentsComponent implements OnInit {\n  URL: String;\n  blogName: any;\n  blog: any;\n  check: Boolean;\n  commentText: String;\n  comments: any;\n  commentsCheck: any;\n  commentsLength: any;\n  styles: any;\n  posts: any;\n  indecies: any;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private BlogService: BlogService,\n    private AuthService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    if (!localStorage.getItem('loo')) {\n      localStorage.setItem('loo', 'no reload');\n      location.reload();\n    } else {\n      localStorage.removeItem('loo');\n    }\n    this.URL = '/api/me/image?id=';\n    this.BlogService.getMyBlog().subscribe((data) => {\n      this.blog = data;\n      console.log(this.blog);\n      if (this.blog.success) {\n        this.blog = this.blog.blog;\n        this.URL = '/api/me/image?id=';\n        this.posts = this.blog.posts;\n        this.styles = [];\n        this.indecies = [];\n        this.commentsCheck = [];\n        this.commentsLength = [[]];\n        for (var i = 0; i < this.posts.length; i++) {\n          if (this.posts[i].comments.length == 0) {\n            console.log(false);\n            this.commentsCheck.push(false);\n          } else {\n            console.log(true);\n            this.commentsCheck.push(true);\n          }\n          this.commentsLength.push([]);\n          for (var j = 0; j < this.posts[i].comments.length; j++) {\n            this.commentsLength[i].push(Number(j));\n            this.posts[i].comments[j].commentter.profileImage =\n              this.URL + this.posts[i].comments[j].commentter.profileImage;\n          }\n          this.posts[i].imageId = '/api/me/image?id=' + this.posts[i].imageId;\n          if (!this.posts[i].isImage) {\n            this.styles.push({\n              image: { display: 'none' },\n              text: { float: 'left', width: '80%', padding: '10px' },\n            });\n          } else {\n            this.styles.push({ image: {}, text: {} });\n          }\n          this.indecies.push(i);\n        }\n        console.log(this.posts[0]);\n      } else {\n        console.log('blog not found');\n      }\n    });\n  }\n  see() {\n    console.log(this.commentsLength);\n  }\n  navigateHome() {\n    this.router.navigate(['']);\n  }\n}\n","<div class=\"sidenav\">\n  <svg\n    width=\"250\"\n    height=\"150\"\n    viewBox=\"0 0 714.4 298.4\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    id=\"logoReg\"\n    style=\"cursor: pointer;\"\n    (click)=\"navigateHome()\"\n  >\n    <g\n      id=\"svgGroup\"\n      stroke-linecap=\"round\"\n      fill-rule=\"evenodd\"\n      font-size=\"9pt\"\n      stroke=\"#000\"\n      stroke-width=\"0.25mm\"\n      fill=\"rgba(#bab1d6, 0.6)\"\n      style=\"stroke: white; stroke-width: 0.25mm; fill: rgba(#bab1d6, 0.6);\"\n    >\n      <path\n        d=\"M 11.6 134 L 9.6 58.4 Q 9.6 40.811 5.781 30.479 A 39.104 39.104 0 0 0 5.6 30 Q 1.6 19.6 1.6 18.8 A 6.814 6.814 0 0 1 4.204 13.721 Q 8.95 9.443 22.346 6.446 A 144.97 144.97 0 0 1 28.6 5.2 Q 50.755 1.262 64.292 0.555 A 106.086 106.086 0 0 1 69.8 0.4 Q 84 0.4 85.2 7.2 Q 110.4 119.6 127.6 163.2 A 20.425 20.425 0 0 0 128.421 164.952 Q 129.973 167.862 131.641 167.994 A 2.012 2.012 0 0 0 131.8 168 A 2.835 2.835 0 0 0 133.64 167.286 Q 134.713 166.397 135.6 164.4 Q 162.4 88.8 182.8 14.8 A 10.275 10.275 0 0 1 186.085 10.124 Q 187.444 8.991 189.285 8.08 A 22.524 22.524 0 0 1 190.8 7.4 Q 195.625 5.44 205.793 3.594 A 253.913 253.913 0 0 1 213 2.4 Q 228.8 0 244.4 0 A 58.111 58.111 0 0 1 249.302 0.189 Q 260 1.1 260 6.4 A 1.608 1.608 0 0 1 259.981 6.585 Q 259.869 7.39 259.084 11.222 A 720.765 720.765 0 0 1 258.8 12.6 Q 257.975 16.588 257.15 21.804 A 338.363 338.363 0 0 0 256.4 26.8 A 1601.181 1601.181 0 0 0 255.444 33.607 Q 255.022 36.654 254.561 40.052 A 3200.023 3200.023 0 0 0 253.6 47.2 Q 250 74.8 249 110.6 Q 248 146.4 248 182.4 L 248.8 224.4 Q 248.8 246.556 251.049 258.887 A 55.67 55.67 0 0 0 252.6 265.4 Q 256.4 277.6 256.4 279.4 A 2.984 2.984 0 0 1 256.099 280.646 Q 255.481 281.988 253.6 283.6 A 38.953 38.953 0 0 1 241.687 289.982 Q 236.094 291.904 229.194 292.805 A 102.153 102.153 0 0 1 216 293.6 Q 200 293.6 198 282.8 Q 197.088 278.546 196.869 270.481 A 202.597 202.597 0 0 1 196.8 265 Q 196.8 254.561 198.557 207.072 A 14151.852 14151.852 0 0 1 199.2 190 Q 201.51 129.546 201.597 100.785 A 728.222 728.222 0 0 0 201.6 98.6 Q 201.6 75.307 199.477 70.985 A 1.384 1.384 0 0 0 198.4 70 A 1.201 1.201 0 0 0 198.267 70.007 Q 198 70.037 198 70.2 A 0.142 0.142 0 0 1 197.945 70.296 Q 197.742 70.486 196.8 70.8 Q 195.6 71.2 190.6 83.2 A 149.579 149.579 0 0 0 188.381 88.938 Q 182.825 104.05 170.8 142.4 Q 156 189.6 144 230.6 Q 132.677 269.289 130.97 274.319 A 16.882 16.882 0 0 1 130.8 274.8 A 18.138 18.138 0 0 1 126.774 281.004 Q 123.334 284.38 118.057 285.276 A 24.217 24.217 0 0 1 114 285.6 A 13.196 13.196 0 0 1 109.365 284.817 A 11.562 11.562 0 0 1 104.4 281.2 Q 94.6 235.875 73.076 160.772 A 4770.388 4770.388 0 0 0 58.8 112 L 47.6 75.6 A 9.706 9.706 0 0 0 47.3 74.921 Q 46.77 73.844 46.24 73.645 A 0.679 0.679 0 0 0 46 73.6 Q 44.255 73.6 43.424 75.732 A 7.541 7.541 0 0 0 43.2 76.4 A 509.99 509.99 0 0 0 42.577 90.178 Q 41.6 119.069 41.6 178.6 Q 41.6 254.8 47.2 274.8 A 2.984 2.984 0 0 1 47.411 275.379 Q 47.573 275.999 47.596 276.898 A 11.896 11.896 0 0 1 47.6 277.2 A 9.716 9.716 0 0 1 43.764 284.92 Q 40.484 287.649 34.4 289.4 Q 22.602 292.797 12.881 293.158 A 61.513 61.513 0 0 1 10.6 293.2 A 35.343 35.343 0 0 1 7.133 293.045 Q 3.728 292.708 1.949 291.634 A 3.617 3.617 0 0 1 0 288.4 A 1.038 1.038 0 0 1 0.031 288.213 Q 0.219 287.389 1.527 283.426 A 525.892 525.892 0 0 1 2 282 A 137.444 137.444 0 0 0 5.266 267.861 Q 7.779 254.017 9.102 234.958 A 531.788 531.788 0 0 0 9.8 222.8 A 1561.178 1561.178 0 0 0 11.031 186.707 Q 11.458 168.271 11.564 147.841 A 2648.453 2648.453 0 0 0 11.6 134 Z\"\n        id=\"0\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 289.2 277.6 L 293.6 184.4 A 227.823 227.823 0 0 0 293.154 169.563 Q 291.759 148.294 286 139.2 Q 283.601 135.203 280.404 133.203 A 15.591 15.591 0 0 0 280.4 133.2 Q 278.175 132.459 278.013 130.342 A 4.468 4.468 0 0 1 278 130 A 6.531 6.531 0 0 1 279.798 125.761 Q 283.381 121.571 294.104 117.522 A 116.127 116.127 0 0 1 298.4 116 Q 318.8 109.2 328.2 109.2 Q 334.044 109.2 336.41 111.056 A 4.019 4.019 0 0 1 338 114 A 139.175 139.175 0 0 1 337.923 118.034 Q 337.614 128.144 336.074 154.711 A 5532.626 5532.626 0 0 1 335.8 159.4 Q 333.6 196.8 333.6 238 A 566.385 566.385 0 0 0 333.769 252.354 Q 334.5 281.075 338.4 289.2 A 8.908 8.908 0 0 1 339.261 291.075 A 6.963 6.963 0 0 1 339.6 293.2 A 3.49 3.49 0 0 1 337.721 296.214 Q 334.806 298.054 327.366 298.345 A 75.836 75.836 0 0 1 324.4 298.4 A 63.621 63.621 0 0 1 304.597 295.117 A 83.2 83.2 0 0 1 293.2 290.4 Q 289.314 288.458 289.203 278.211 A 56.309 56.309 0 0 1 289.2 277.6 Z M 321.2 75.6 L 311.6 75.2 A 34.825 34.825 0 0 0 306.955 75.486 Q 301.716 76.194 299.041 78.657 A 8.217 8.217 0 0 0 297.6 80.4 A 3.276 3.276 0 0 1 297.061 81.033 A 2.131 2.131 0 0 1 295.6 81.6 A 3.253 3.253 0 0 1 292.83 79.818 Q 290.961 76.857 290.53 68.975 A 95.167 95.167 0 0 1 290.4 63.8 Q 290.4 46.903 295.266 41.721 A 8.263 8.263 0 0 1 295.8 41.2 A 15.154 15.154 0 0 1 300.456 38.468 Q 304.858 36.766 311.594 36.465 A 67.334 67.334 0 0 1 314.6 36.4 A 61.12 61.12 0 0 1 320.675 36.679 Q 329.181 37.532 332.8 41 Q 337.422 45.43 337.593 55.607 A 47.069 47.069 0 0 1 337.6 56.4 Q 337.6 64.999 335.318 69.414 A 10.311 10.311 0 0 1 334 71.4 A 10.225 10.225 0 0 1 330.151 74.12 Q 326.663 75.6 321.2 75.6 Z\"\n        id=\"1\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 488 152 L 486 182.4 L 487.6 196.4 Q 487.6 203.355 475.542 203.946 A 47.931 47.931 0 0 1 473.2 204 A 56.968 56.968 0 0 1 462.633 203.11 Q 445.235 199.809 444.082 184.268 A 30.652 30.652 0 0 1 444 182 A 27.097 27.097 0 0 1 444.26 178.46 Q 444.757 174.723 446.203 169.629 A 112.428 112.428 0 0 1 446.8 167.6 Q 449.6 158.4 449.6 151.6 A 19.375 19.375 0 0 0 448.334 144.52 A 17.914 17.914 0 0 0 445.6 139.8 Q 441.6 134.8 434 134.8 A 17.698 17.698 0 0 0 421.169 140.033 A 21.554 21.554 0 0 0 421 140.2 A 30.667 30.667 0 0 0 417.601 144.193 Q 415.922 146.574 415.039 148.993 A 16.522 16.522 0 0 0 414.4 151.2 L 412.8 156.8 Q 410.991 166.149 410.545 184.932 A 562.247 562.247 0 0 0 410.4 198.2 Q 410.4 220.404 410.869 235.338 A 507.581 507.581 0 0 0 411.2 243.8 Q 412 260.4 412.8 266.6 A 400.96 400.96 0 0 1 413.072 268.75 Q 413.53 272.456 413.591 273.682 A 6.578 6.578 0 0 1 413.6 274 A 14.991 14.991 0 0 1 408.817 284.956 Q 406.719 287.037 403.702 288.836 A 38.563 38.563 0 0 1 401.2 290.2 A 59.714 59.714 0 0 1 387.25 295.214 A 50.638 50.638 0 0 1 376.4 296.4 A 44.621 44.621 0 0 1 372.344 296.232 Q 364 295.466 364 291.2 L 366 278.8 A 369.653 369.653 0 0 0 369.188 252.37 Q 370.394 238.56 370.997 222.468 A 923.507 923.507 0 0 0 371.6 188 A 1237.779 1237.779 0 0 0 371.38 163.728 Q 370.789 133.714 368.604 118.036 A 104.607 104.607 0 0 0 367.6 112 Q 367.6 107.503 374.975 107.219 A 26.717 26.717 0 0 1 376 107.2 A 48.509 48.509 0 0 1 386.459 108.245 Q 392.68 109.62 397.137 112.809 A 23.97 23.97 0 0 1 404.8 122 A 4.252 4.252 0 0 0 404.996 122.604 Q 405.411 123.6 406.2 123.6 A 1.484 1.484 0 0 0 406.747 123.452 Q 407.994 122.912 411.092 120.413 A 94.455 94.455 0 0 0 411.6 120 A 47.626 47.626 0 0 1 442.169 109.204 A 59.58 59.58 0 0 1 442.8 109.2 A 60.072 60.072 0 0 1 462.75 112.691 A 69.217 69.217 0 0 1 465.2 113.6 A 33.732 33.732 0 0 1 486.184 137.111 Q 487.943 143.552 487.998 151.487 A 74.114 74.114 0 0 1 488 152 Z\"\n        id=\"2\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 630.4 169.6 L 629.6 220.8 A 378.48 378.48 0 0 0 630.079 240.663 Q 631.552 268.543 637.561 279.846 A 18.679 18.679 0 0 0 641.2 284.8 A 5.897 5.897 0 0 1 642.236 286.166 A 4.638 4.638 0 0 1 642.8 288.4 A 3.405 3.405 0 0 1 640.83 291.259 Q 636.044 294.173 619.637 294.384 A 204.849 204.849 0 0 1 617 294.4 A 65.592 65.592 0 0 1 607.681 293.797 Q 590.881 291.372 589.6 279.2 Q 589.2 275.6 589.2 264.4 L 590.8 200.4 A 3.485 3.485 0 0 0 590.618 199.225 Q 590.038 197.6 587.6 197.6 Q 568.4 197.6 551.6 208.4 A 44.292 44.292 0 0 0 542.741 215.736 A 29.155 29.155 0 0 0 534.8 236 A 26.732 26.732 0 0 0 535.719 243.164 A 21.118 21.118 0 0 0 539.6 250.8 A 17.329 17.329 0 0 0 543.597 254.515 A 13.91 13.91 0 0 0 551.4 256.8 Q 558.4 256.8 563 254 Q 567.097 251.507 568.18 250.917 A 7.307 7.307 0 0 1 568.4 250.8 A 6.219 6.219 0 0 1 573.337 254.424 Q 574.785 257.193 575.108 262.048 A 44.639 44.639 0 0 1 575.2 265 A 23.898 23.898 0 0 1 566.696 283.628 A 34.903 34.903 0 0 1 562.8 286.6 A 49.912 49.912 0 0 1 548.573 293.203 A 43.91 43.91 0 0 1 536.8 294.8 Q 523.2 294.8 513.4 290 Q 506.456 286.599 502.223 282.595 A 25.221 25.221 0 0 1 499.2 279.2 A 53.648 53.648 0 0 1 493.106 268.394 A 61.842 61.842 0 0 1 492 265.6 Q 489.2 256.4 489.2 249.6 A 72.084 72.084 0 0 1 491.832 229.619 A 54.524 54.524 0 0 1 506.8 204.8 Q 524.4 188 552 180.8 A 384.489 384.489 0 0 0 563.485 178.361 Q 588.675 172.569 590 167.6 Q 591.2 163.2 591.2 152.8 Q 591.2 135.967 577.581 132.5 A 32.419 32.419 0 0 0 569.6 131.6 Q 560.4 131.6 553.2 137.4 A 20.1 20.1 0 0 0 548.407 142.828 A 17.729 17.729 0 0 0 546 152 L 548.4 161.6 A 6.745 6.745 0 0 1 545.149 166.546 Q 542.348 168.402 537.168 169.218 A 46.903 46.903 0 0 1 534 169.6 L 529.6 170 A 38.953 38.953 0 0 1 521.941 169.291 Q 517.302 168.361 513.681 166.209 A 21.977 21.977 0 0 1 510.6 164 Q 503.6 158 503.6 148 Q 503.6 141.6 507.8 133.8 A 40.467 40.467 0 0 1 513.736 125.408 A 35.006 35.006 0 0 1 518.4 121.2 A 34.236 34.236 0 0 1 523.084 118.298 Q 528.988 115.213 538.2 112.6 Q 551.6 108.8 564 108.8 Q 574.22 108.8 580.636 109.344 A 79.276 79.276 0 0 1 583.2 109.6 A 81.699 81.699 0 0 1 587.873 110.304 Q 593.641 111.326 601.8 113.4 A 40.692 40.692 0 0 1 615.708 119.766 A 38.307 38.307 0 0 1 621.4 124.8 Q 629.2 133.2 629.8 142.6 Q 630.4 152 630.4 169.6 Z\"\n        id=\"3\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 664 277.6 L 668.4 184.4 A 227.823 227.823 0 0 0 667.954 169.563 Q 666.559 148.294 660.8 139.2 Q 658.401 135.203 655.204 133.203 A 15.591 15.591 0 0 0 655.2 133.2 Q 652.975 132.459 652.813 130.342 A 4.468 4.468 0 0 1 652.8 130 A 6.531 6.531 0 0 1 654.598 125.761 Q 658.181 121.571 668.904 117.522 A 116.127 116.127 0 0 1 673.2 116 Q 693.6 109.2 703 109.2 Q 708.844 109.2 711.21 111.056 A 4.019 4.019 0 0 1 712.8 114 A 139.175 139.175 0 0 1 712.723 118.034 Q 712.414 128.144 710.874 154.711 A 5532.626 5532.626 0 0 1 710.6 159.4 Q 708.4 196.8 708.4 238 A 566.385 566.385 0 0 0 708.569 252.354 Q 709.3 281.075 713.2 289.2 A 8.908 8.908 0 0 1 714.061 291.075 A 6.963 6.963 0 0 1 714.4 293.2 A 3.49 3.49 0 0 1 712.521 296.214 Q 709.606 298.054 702.166 298.345 A 75.836 75.836 0 0 1 699.2 298.4 A 63.621 63.621 0 0 1 679.397 295.117 A 83.2 83.2 0 0 1 668 290.4 Q 664.114 288.458 664.003 278.211 A 56.309 56.309 0 0 1 664 277.6 Z M 696 75.6 L 686.4 75.2 A 34.825 34.825 0 0 0 681.755 75.486 Q 676.516 76.194 673.841 78.657 A 8.217 8.217 0 0 0 672.4 80.4 A 3.276 3.276 0 0 1 671.861 81.033 A 2.131 2.131 0 0 1 670.4 81.6 A 3.253 3.253 0 0 1 667.63 79.818 Q 665.761 76.857 665.33 68.975 A 95.167 95.167 0 0 1 665.2 63.8 Q 665.2 46.903 670.066 41.721 A 8.263 8.263 0 0 1 670.6 41.2 A 15.154 15.154 0 0 1 675.256 38.468 Q 679.658 36.766 686.394 36.465 A 67.334 67.334 0 0 1 689.4 36.4 A 61.12 61.12 0 0 1 695.475 36.679 Q 703.981 37.532 707.6 41 Q 712.222 45.43 712.393 55.607 A 47.069 47.069 0 0 1 712.4 56.4 Q 712.4 64.999 710.118 69.414 A 10.311 10.311 0 0 1 708.8 71.4 A 10.225 10.225 0 0 1 704.951 74.12 Q 701.463 75.6 696 75.6 Z\"\n        id=\"4\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n    </g>\n  </svg>\n  <a routerLink=\"/profile/createPost\">Create Post</a>\n  <a routerLink=\"/profile/editPosts\">Edit Post</a>\n  <a routerLink=\"/profile/editProfile\">Edit Profile Info</a>\n  <a class=\"active\" routerLink=\"/profile/comments\">See Comments</a>\n</div>\n<div class=\"content\">\n  <div class=\"allpost\" *ngFor=\"let i of indecies\">\n    <div class=\"postcard\">\n      <div class=\"post\">\n        <div\n          class=\"postImage\"\n          [ngStyle]=\"styles[indecies.length - i - 1].image\"\n        >\n          <img src=\"{{ posts[indecies.length - i - 1].imageId }}\" />\n        </div>\n        <div class=\"postText\" [ngStyle]=\"styles[indecies.length - i - 1].text\">\n          <p dir=\"auto\">\n            {{ posts[indecies.length - i - 1].postText }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"commentSection\"\n      *ngIf=\"commentsCheck[commentsCheck.length - i - 1]\"\n    >\n      <div\n        class=\"commentcard\"\n        *ngFor=\"let j of commentsLength[indecies.length - i - 1]\"\n        (click)=\"see()\"\n      >\n        <div class=\"cardImage\">\n          <img\n            src=\"{{\n              posts[indecies.length - i - 1].comments[j].commentter.profileImage\n            }}\"\n          />\n          <label>{{\n            posts[indecies.length - i - 1].comments[j].commentter.userName\n          }}</label>\n          <label style=\"font-size: smaller; margin-left: 10px;\">{{\n            posts[indecies.length - i - 1].comments[j].commentDate\n          }}</label>\n        </div>\n        <div class=\"commentText\">\n          <p>\n            {{ posts[indecies.length - i - 1].comments[j].commentText }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private AuthService: AuthService, private router: Router) {}\n  canActivate() {\n    if (this.AuthService.isLogged()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  constructor(private http: HttpClient) {}\n  userRegister(user) {\n    return this.http.post('/api/register', user);\n  }\n  userBlogName() {\n    this.getLocalStorage();\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: this.authToken,\n      }),\n    };\n    return this.http.get('/api/user/blogname', httpOptions);\n  }\n  userLogin(user) {\n    return this.http.post('/api/login', user);\n  }\n  setLocalStorage(token, user) {\n    localStorage.clear();\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', user);\n    this.authToken = token;\n    this.user = user;\n  }\n  getLocalStorage() {\n    let token = localStorage.getItem('token');\n    this.authToken = token;\n  }\n  isLogged() {\n    this.getLocalStorage();\n    const helper = new JwtHelperService();\n    console.log(this.authToken);\n    const isExpired = helper.isTokenExpired(this.authToken);\n    console.log(isExpired);\n    return !isExpired;\n  }\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root',\n})\nexport class BlogService {\n  blogName: String;\n  authToken: any;\n  constructor(private http: HttpClient) {}\n  getUserBlog(blogName) {\n    this.blogName = blogName;\n    return this.http.get('/api/' + blogName);\n  }\n  getMyBlog() {\n    this.authToken = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: this.authToken,\n      }),\n    };\n    return this.http.get('/api/me/blog', httpOptions);\n  }\n  comment(commentText, blogName, index) {\n    this.authToken = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: this.authToken,\n      }),\n    };\n    return this.http.post(\n      '/api/me/comment',\n      { commentText: commentText, blogName: blogName, index: index },\n      httpOptions\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  authToken: any;\n  constructor(private httpClient: HttpClient) {}\n  postFile(fileToUpload: File) {\n    this.authToken = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Authorization: this.authToken,\n      }),\n    };\n    const endpoint = '/api/me/uploadImage';\n    const formData: FormData = new FormData();\n    formData.set('file', fileToUpload);\n    console.log(formData);\n\n    return this.httpClient.post(endpoint, formData, httpOptions);\n  }\n  editPost(newPost, index) {\n    this.authToken = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: this.authToken,\n      }),\n    };\n    return this.httpClient.put(\n      '/api/me/post',\n      { newPost: newPost, index: index },\n      httpOptions\n    );\n  }\n  editProfile(user) {\n    this.authToken = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: this.authToken,\n      }),\n    };\n    return this.httpClient.put('/api/me/profile', { user: user }, httpOptions);\n  }\n  getMe() {\n    this.authToken = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: this.authToken,\n      }),\n    };\n    return this.httpClient.get('/api/me/profile', httpOptions);\n  }\n  createPost(newPost) {\n    this.authToken = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: this.authToken,\n      }),\n    };\n    return this.httpClient.post(\n      '/api/me/post',\n      { newPost: newPost },\n      httpOptions\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { animationFrame } from 'rxjs/internal/scheduler/animationFrame';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ValidationService {\n  constructor(private http: HttpClient) {}\n  async validateRegister(userName, password, email, blogName) {\n    if (userName == '' || password == '' || email == '' || blogName == '') {\n      return { success: false, text: 'Please Fill in all data' };\n    }\n    if (password.length < 5) {\n      return { success: false, text: 'Password is too short' };\n    }\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const checkmail = re.test(String(email).toLowerCase());\n    if (!checkmail) {\n      return { success: false, text: 'Please Enter valid email' };\n    }\n    return { success: true };\n  }\n  validateEmail(email) {\n    let res: any;\n    return this.http.post('api/me/checkMail', {\n      email: email,\n    });\n  }\n  validateBlog(blogName) {\n    let res: any;\n    return this.http.post('/api/me/checkBlog', {\n      blogName: blogName,\n    });\n  }\n  validateLogin(email, password) {\n    if (password == '' || email == '') {\n      return { success: false, text: 'Please Fill in all data' };\n    }\n    if (password.length < 5) {\n      return { success: false, text: 'Password is too short' };\n    }\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const checkmail = re.test(String(email).toLowerCase());\n    if (!checkmail) {\n      return { success: false, text: 'Please Enter valid email' };\n    }\n    return { success: true };\n  }\n  validateEdit(email, password, userName, user) {\n    if (user.userName != userName) {\n      if (userName == '') {\n        return { success: false, text: 'user name cant be empty' };\n      }\n    }\n    if (password != '') {\n      if (password.length < 5) {\n        return { success: false, text: 'Password is too short' };\n      }\n    }\n    if (user.email != email) {\n      if (email == '') {\n        return { success: false, text: 'email cant be empty' };\n      }\n      const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      const checkmail = re.test(String(email).toLowerCase());\n      if (!checkmail) {\n        return { success: false, text: 'Please Enter valid email' };\n      }\n    }\n    return { success: true };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}