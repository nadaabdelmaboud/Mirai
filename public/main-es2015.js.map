{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/blog/blog.component.ts","./src/app/components/blog/blog.component.html","./src/app/components/edit-post/edit-post.component.ts","./src/app/components/edit-post/edit-post.component.html","./src/app/components/edit-profile/edit-profile.component.ts","./src/app/components/edit-profile/edit-profile.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/see-comments/see-comments.component.ts","./src/app/components/see-comments/see-comments.component.html","./src/app/guards/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/blog.service.ts","./src/app/services/profile.service.ts","./src/app/services/validation.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { EditPostComponent } from './components/edit-post/edit-post.component';\nimport { EditProfileComponent } from './components/edit-profile/edit-profile.component';\nimport { SeeCommentsComponent } from './components/see-comments/see-comments.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'blog/:blogName',\n    component: BlogComponent,\n  },\n  {\n    path: 'profile/createPost',\n    component: ProfileComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'profile/editPosts',\n    component: EditPostComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'profile/editProfile',\n    component: EditProfileComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'profile/comments',\n    component: SeeCommentsComponent,\n    canActivate: [AuthGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-Mirai';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AuthService } from './services/auth.service';\nimport { ValidationService } from './services/validation.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './components/login/login.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { EditPostComponent } from './components/edit-post/edit-post.component';\nimport { EditProfileComponent } from './components/edit-profile/edit-profile.component';\nimport { SeeCommentsComponent } from './components/see-comments/see-comments.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    HomeComponent,\n    LoginComponent,\n    BlogComponent,\n    ProfileComponent,\n    EditPostComponent,\n    EditProfileComponent,\n    SeeCommentsComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  providers: [AuthService, ValidationService, AuthGuard],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ViewEncapsulation } from '@angular/core';\nimport { BlogService } from '../../services/blog.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.scss'],\n})\nexport class BlogComponent implements OnInit {\n  URL: String;\n  blogName: any;\n  blog: any;\n  headingCss: {};\n  check: Boolean;\n  show: {};\n  commentText: String;\n  comments: any;\n  styles: any;\n  userName: String;\n  posts: any;\n  coverImageUrl: String;\n  profileImageUrl: String;\n  indecies: any;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private BlogService: BlogService,\n    private AuthService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    if (!localStorage.getItem('foo')) {\n      localStorage.setItem('foo', 'no reload');\n      location.reload();\n    } else {\n      localStorage.removeItem('foo');\n    }\n    this.check = false;\n    this.comments = [];\n    this.blogName = this.activatedRoute.snapshot.paramMap.get('blogName');\n    this.BlogService.getUserBlog(this.blogName).subscribe((data) => {\n      this.blog = data;\n      if (this.blog.success) {\n        this.blog = this.blog.blog;\n        this.URL = '/api/me/image?id=';\n        this.profileImageUrl = this.URL + this.blog.profileImage;\n        this.coverImageUrl = this.URL + this.blog.coverImage;\n        this.posts = this.blog.posts;\n        this.userName = this.blog.userName;\n        this.styles = [];\n        this.indecies = [];\n        for (var i = 0; i < this.posts.length; i++) {\n          this.posts[i].imageId = '/api/me/image?id=' + this.posts[i].imageId;\n          if (!this.posts[i].isImage) {\n            this.styles.push({\n              image: { display: 'none' },\n              text: { float: 'left', width: '80%', padding: '10px' },\n            });\n          } else {\n            this.styles.push({ image: {}, text: {} });\n          }\n          this.indecies.push(i);\n        }\n        console.log(this.blog);\n      } else {\n        console.log('blog not found');\n      }\n    });\n    this.show = {\n      visibility: 'hidden',\n    };\n    this.headingCss = {\n      height: '100%',\n    };\n  }\n  comment(i) {\n    let checkAuth = this.AuthService.isLogged();\n    console.log(checkAuth);\n    i = this.posts.length - i - 1;\n    if (checkAuth) {\n      this.commentText = this.comments[i];\n      this.BlogService.comment(this.commentText, this.blogName, i).subscribe(\n        (data) => {\n          let ch: any;\n          ch = data;\n          if (ch.success) {\n            this.commentText = '';\n            this.comments[i] = '';\n          } else {\n            console.log('failed');\n          }\n        }\n      );\n    } else {\n      this.router.navigate(['']);\n    }\n  }\n}\n","<div class=\"overlay\"></div>\n<div class=\"wrapper\">\n  <header>\n    <div\n      id=\"images\"\n      style=\"\n        position: relative;\n        margin: 0;\n        padding: 0;\n        top: 0;\n        width: 100%;\n        height: 30vh;\n      \"\n    >\n      <img\n        id=\"coverImage\"\n        style=\"\n          position: absolute;\n          margin: 0;\n          padding: 0;\n          top: 0;\n          right: 0;\n          width: 100%;\n          height: 30vh;\n          box-shadow: inset 0 -3em 3em rgba(223, 208, 208, 0.1),\n            0 0 0 2px rgb(255, 255, 255),\n            0.3em 0.3em 1em rgba(206, 174, 174, 0.3);\n        \"\n        src=\"{{ coverImageUrl }}\"\n      />\n      <div class=\"card\">\n        <img id=\"profileImage\" src=\"{{ profileImageUrl }}\" />\n        <label dir=\"auto\">\n          {{ userName }}\n        </label>\n      </div>\n    </div>\n  </header>\n  <main>\n    <div class=\"postcard\" *ngFor=\"let i of indecies\">\n      <div class=\"post\">\n        <div\n          class=\"postImage\"\n          [ngStyle]=\"styles[indecies.length - i - 1].image\"\n        >\n          <img src=\"{{ posts[indecies.length - i - 1].imageId }}\" />\n        </div>\n        <div class=\"postText\" [ngStyle]=\"styles[indecies.length - i - 1].text\">\n          <p dir=\"auto\">\n            {{ posts[indecies.length - i - 1].postText }}\n          </p>\n        </div>\n      </div>\n\n      <div class=\"leaveComment\">\n        <br />\n        <form class=\"commentform\" (submit)=\"comment(i)\">\n          <textarea\n            name=\"comment\"\n            id=\"comment\"\n            rows=\"10\"\n            tabindex=\"4\"\n            required=\"required\"\n            [(ngModel)]=\"comments[indecies.length - i - 1]\"\n          ></textarea>\n          <input type=\"submit\" value=\"Comment\" />\n        </form>\n      </div>\n    </div>\n  </main>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { ViewEncapsulation } from '@angular/core';\nimport { ProfileService } from '../../services/profile.service';\nimport { Router } from '@angular/router';\nimport { BlogService } from '../../services/blog.service';\nimport { NONE_TYPE } from '@angular/compiler';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app-edit-post',\n  templateUrl: './edit-post.component.html',\n  styleUrls: ['./edit-post.component.scss'],\n})\nexport class EditPostComponent implements OnInit {\n  URL: String;\n  blog: any;\n  posts: any;\n  indecies: any;\n  styles: any;\n  fileToUpload: File = null;\n  imageSrc: any;\n  imageIds = [];\n  newPosts: [\n    {\n      id: String;\n      postText: String;\n      isImage: Boolean;\n      imageId: String;\n    }\n  ];\n\n  constructor(\n    private router: Router,\n    private ProfileService: ProfileService,\n    private BlogService: BlogService\n  ) {}\n\n  ngOnInit(): void {\n    if (!localStorage.getItem('aoo')) {\n      localStorage.setItem('aoo', 'no reload');\n      location.reload();\n    } else {\n      localStorage.removeItem('aoo');\n    }\n    this.URL = '/api/me/image?id=';\n    this.BlogService.getMyBlog().subscribe((data) => {\n      this.blog = data;\n      console.log(this.blog);\n      if (this.blog.success) {\n        this.blog = this.blog.blog;\n        this.URL = '/api/me/image?id=';\n        this.posts = this.blog.posts;\n        this.styles = [];\n        this.newPosts = this.blog.posts;\n        this.indecies = [];\n        for (var i = 0; i < this.posts.length; i++) {\n          this.imageIds.push(this.posts[i].imageId);\n          this.posts[i].imageId = '/api/me/image?id=' + this.posts[i].imageId;\n          if (!this.posts[i].isImage) {\n            this.styles.push({ display: 'none' });\n          } else {\n            this.styles.push({ display: 'inline' });\n          }\n          this.indecies.push(i);\n        }\n        console.log(this.posts[0]);\n      } else {\n        console.log('blog not found');\n      }\n    });\n  }\n  editPost(index) {\n    let check;\n    if (this.styles[index].display == 'none') {\n      check = false;\n    } else {\n      check = true;\n    }\n    const postEdit = {\n      imageId: this.imageIds[index],\n      isImage: check,\n      postText: this.newPosts[index].postText,\n    };\n    this.ProfileService.editPost(postEdit, index).subscribe((data) => {\n      check;\n      check = data;\n      if (check.success) {\n        location.reload();\n      } else {\n        console.log('failed');\n      }\n    });\n  }\n  clearImage(index) {\n    this.styles[index].display = 'none';\n    this.posts[index].imageId = '';\n    this.newPosts[index].isImage = false;\n    this.newPosts[index].imageId = '';\n  }\n  handleInput(files: FileList, index) {\n    this.fileToUpload = files.item(0);\n    this.uploadFileToActivity(index);\n  }\n  uploadFileToActivity(index) {\n    this.ProfileService.postFile(this.fileToUpload).subscribe(\n      (data) => {\n        this.styles[index].display = 'inline';\n        this.imageSrc = data;\n        this.URL = '/api/me/image?id=';\n        this.posts[index].imageId = this.URL + this.imageSrc.imageId;\n        console.log(this.posts[index].imageId);\n        this.newPosts[index].imageId = this.URL + this.imageSrc.imageId;\n        this.imageIds[index] = this.imageSrc.imageId;\n        console.log(this.newPosts[index].imageId);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  navigateHome() {\n    this.router.navigate(['']);\n  }\n}\n","<div class=\"sidenav\">\n  <svg\n    width=\"250\"\n    height=\"150\"\n    viewBox=\"0 0 714.4 298.4\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    id=\"logoReg\"\n    style=\"cursor: pointer;\"\n    (click)=\"navigateHome()\"\n  >\n    <g\n      id=\"svgGroup\"\n      stroke-linecap=\"round\"\n      fill-rule=\"evenodd\"\n      font-size=\"9pt\"\n      stroke=\"#000\"\n      stroke-width=\"0.25mm\"\n      fill=\"rgba(#bab1d6, 0.6)\"\n      style=\"stroke: white; stroke-width: 0.25mm; fill: rgba(#bab1d6, 0.6);\"\n    >\n      <path\n        d=\"M 11.6 134 L 9.6 58.4 Q 9.6 40.811 5.781 30.479 A 39.104 39.104 0 0 0 5.6 30 Q 1.6 19.6 1.6 18.8 A 6.814 6.814 0 0 1 4.204 13.721 Q 8.95 9.443 22.346 6.446 A 144.97 144.97 0 0 1 28.6 5.2 Q 50.755 1.262 64.292 0.555 A 106.086 106.086 0 0 1 69.8 0.4 Q 84 0.4 85.2 7.2 Q 110.4 119.6 127.6 163.2 A 20.425 20.425 0 0 0 128.421 164.952 Q 129.973 167.862 131.641 167.994 A 2.012 2.012 0 0 0 131.8 168 A 2.835 2.835 0 0 0 133.64 167.286 Q 134.713 166.397 135.6 164.4 Q 162.4 88.8 182.8 14.8 A 10.275 10.275 0 0 1 186.085 10.124 Q 187.444 8.991 189.285 8.08 A 22.524 22.524 0 0 1 190.8 7.4 Q 195.625 5.44 205.793 3.594 A 253.913 253.913 0 0 1 213 2.4 Q 228.8 0 244.4 0 A 58.111 58.111 0 0 1 249.302 0.189 Q 260 1.1 260 6.4 A 1.608 1.608 0 0 1 259.981 6.585 Q 259.869 7.39 259.084 11.222 A 720.765 720.765 0 0 1 258.8 12.6 Q 257.975 16.588 257.15 21.804 A 338.363 338.363 0 0 0 256.4 26.8 A 1601.181 1601.181 0 0 0 255.444 33.607 Q 255.022 36.654 254.561 40.052 A 3200.023 3200.023 0 0 0 253.6 47.2 Q 250 74.8 249 110.6 Q 248 146.4 248 182.4 L 248.8 224.4 Q 248.8 246.556 251.049 258.887 A 55.67 55.67 0 0 0 252.6 265.4 Q 256.4 277.6 256.4 279.4 A 2.984 2.984 0 0 1 256.099 280.646 Q 255.481 281.988 253.6 283.6 A 38.953 38.953 0 0 1 241.687 289.982 Q 236.094 291.904 229.194 292.805 A 102.153 102.153 0 0 1 216 293.6 Q 200 293.6 198 282.8 Q 197.088 278.546 196.869 270.481 A 202.597 202.597 0 0 1 196.8 265 Q 196.8 254.561 198.557 207.072 A 14151.852 14151.852 0 0 1 199.2 190 Q 201.51 129.546 201.597 100.785 A 728.222 728.222 0 0 0 201.6 98.6 Q 201.6 75.307 199.477 70.985 A 1.384 1.384 0 0 0 198.4 70 A 1.201 1.201 0 0 0 198.267 70.007 Q 198 70.037 198 70.2 A 0.142 0.142 0 0 1 197.945 70.296 Q 197.742 70.486 196.8 70.8 Q 195.6 71.2 190.6 83.2 A 149.579 149.579 0 0 0 188.381 88.938 Q 182.825 104.05 170.8 142.4 Q 156 189.6 144 230.6 Q 132.677 269.289 130.97 274.319 A 16.882 16.882 0 0 1 130.8 274.8 A 18.138 18.138 0 0 1 126.774 281.004 Q 123.334 284.38 118.057 285.276 A 24.217 24.217 0 0 1 114 285.6 A 13.196 13.196 0 0 1 109.365 284.817 A 11.562 11.562 0 0 1 104.4 281.2 Q 94.6 235.875 73.076 160.772 A 4770.388 4770.388 0 0 0 58.8 112 L 47.6 75.6 A 9.706 9.706 0 0 0 47.3 74.921 Q 46.77 73.844 46.24 73.645 A 0.679 0.679 0 0 0 46 73.6 Q 44.255 73.6 43.424 75.732 A 7.541 7.541 0 0 0 43.2 76.4 A 509.99 509.99 0 0 0 42.577 90.178 Q 41.6 119.069 41.6 178.6 Q 41.6 254.8 47.2 274.8 A 2.984 2.984 0 0 1 47.411 275.379 Q 47.573 275.999 47.596 276.898 A 11.896 11.896 0 0 1 47.6 277.2 A 9.716 9.716 0 0 1 43.764 284.92 Q 40.484 287.649 34.4 289.4 Q 22.602 292.797 12.881 293.158 A 61.513 61.513 0 0 1 10.6 293.2 A 35.343 35.343 0 0 1 7.133 293.045 Q 3.728 292.708 1.949 291.634 A 3.617 3.617 0 0 1 0 288.4 A 1.038 1.038 0 0 1 0.031 288.213 Q 0.219 287.389 1.527 283.426 A 525.892 525.892 0 0 1 2 282 A 137.444 137.444 0 0 0 5.266 267.861 Q 7.779 254.017 9.102 234.958 A 531.788 531.788 0 0 0 9.8 222.8 A 1561.178 1561.178 0 0 0 11.031 186.707 Q 11.458 168.271 11.564 147.841 A 2648.453 2648.453 0 0 0 11.6 134 Z\"\n        id=\"0\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 289.2 277.6 L 293.6 184.4 A 227.823 227.823 0 0 0 293.154 169.563 Q 291.759 148.294 286 139.2 Q 283.601 135.203 280.404 133.203 A 15.591 15.591 0 0 0 280.4 133.2 Q 278.175 132.459 278.013 130.342 A 4.468 4.468 0 0 1 278 130 A 6.531 6.531 0 0 1 279.798 125.761 Q 283.381 121.571 294.104 117.522 A 116.127 116.127 0 0 1 298.4 116 Q 318.8 109.2 328.2 109.2 Q 334.044 109.2 336.41 111.056 A 4.019 4.019 0 0 1 338 114 A 139.175 139.175 0 0 1 337.923 118.034 Q 337.614 128.144 336.074 154.711 A 5532.626 5532.626 0 0 1 335.8 159.4 Q 333.6 196.8 333.6 238 A 566.385 566.385 0 0 0 333.769 252.354 Q 334.5 281.075 338.4 289.2 A 8.908 8.908 0 0 1 339.261 291.075 A 6.963 6.963 0 0 1 339.6 293.2 A 3.49 3.49 0 0 1 337.721 296.214 Q 334.806 298.054 327.366 298.345 A 75.836 75.836 0 0 1 324.4 298.4 A 63.621 63.621 0 0 1 304.597 295.117 A 83.2 83.2 0 0 1 293.2 290.4 Q 289.314 288.458 289.203 278.211 A 56.309 56.309 0 0 1 289.2 277.6 Z M 321.2 75.6 L 311.6 75.2 A 34.825 34.825 0 0 0 306.955 75.486 Q 301.716 76.194 299.041 78.657 A 8.217 8.217 0 0 0 297.6 80.4 A 3.276 3.276 0 0 1 297.061 81.033 A 2.131 2.131 0 0 1 295.6 81.6 A 3.253 3.253 0 0 1 292.83 79.818 Q 290.961 76.857 290.53 68.975 A 95.167 95.167 0 0 1 290.4 63.8 Q 290.4 46.903 295.266 41.721 A 8.263 8.263 0 0 1 295.8 41.2 A 15.154 15.154 0 0 1 300.456 38.468 Q 304.858 36.766 311.594 36.465 A 67.334 67.334 0 0 1 314.6 36.4 A 61.12 61.12 0 0 1 320.675 36.679 Q 329.181 37.532 332.8 41 Q 337.422 45.43 337.593 55.607 A 47.069 47.069 0 0 1 337.6 56.4 Q 337.6 64.999 335.318 69.414 A 10.311 10.311 0 0 1 334 71.4 A 10.225 10.225 0 0 1 330.151 74.12 Q 326.663 75.6 321.2 75.6 Z\"\n        id=\"1\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 488 152 L 486 182.4 L 487.6 196.4 Q 487.6 203.355 475.542 203.946 A 47.931 47.931 0 0 1 473.2 204 A 56.968 56.968 0 0 1 462.633 203.11 Q 445.235 199.809 444.082 184.268 A 30.652 30.652 0 0 1 444 182 A 27.097 27.097 0 0 1 444.26 178.46 Q 444.757 174.723 446.203 169.629 A 112.428 112.428 0 0 1 446.8 167.6 Q 449.6 158.4 449.6 151.6 A 19.375 19.375 0 0 0 448.334 144.52 A 17.914 17.914 0 0 0 445.6 139.8 Q 441.6 134.8 434 134.8 A 17.698 17.698 0 0 0 421.169 140.033 A 21.554 21.554 0 0 0 421 140.2 A 30.667 30.667 0 0 0 417.601 144.193 Q 415.922 146.574 415.039 148.993 A 16.522 16.522 0 0 0 414.4 151.2 L 412.8 156.8 Q 410.991 166.149 410.545 184.932 A 562.247 562.247 0 0 0 410.4 198.2 Q 410.4 220.404 410.869 235.338 A 507.581 507.581 0 0 0 411.2 243.8 Q 412 260.4 412.8 266.6 A 400.96 400.96 0 0 1 413.072 268.75 Q 413.53 272.456 413.591 273.682 A 6.578 6.578 0 0 1 413.6 274 A 14.991 14.991 0 0 1 408.817 284.956 Q 406.719 287.037 403.702 288.836 A 38.563 38.563 0 0 1 401.2 290.2 A 59.714 59.714 0 0 1 387.25 295.214 A 50.638 50.638 0 0 1 376.4 296.4 A 44.621 44.621 0 0 1 372.344 296.232 Q 364 295.466 364 291.2 L 366 278.8 A 369.653 369.653 0 0 0 369.188 252.37 Q 370.394 238.56 370.997 222.468 A 923.507 923.507 0 0 0 371.6 188 A 1237.779 1237.779 0 0 0 371.38 163.728 Q 370.789 133.714 368.604 118.036 A 104.607 104.607 0 0 0 367.6 112 Q 367.6 107.503 374.975 107.219 A 26.717 26.717 0 0 1 376 107.2 A 48.509 48.509 0 0 1 386.459 108.245 Q 392.68 109.62 397.137 112.809 A 23.97 23.97 0 0 1 404.8 122 A 4.252 4.252 0 0 0 404.996 122.604 Q 405.411 123.6 406.2 123.6 A 1.484 1.484 0 0 0 406.747 123.452 Q 407.994 122.912 411.092 120.413 A 94.455 94.455 0 0 0 411.6 120 A 47.626 47.626 0 0 1 442.169 109.204 A 59.58 59.58 0 0 1 442.8 109.2 A 60.072 60.072 0 0 1 462.75 112.691 A 69.217 69.217 0 0 1 465.2 113.6 A 33.732 33.732 0 0 1 486.184 137.111 Q 487.943 143.552 487.998 151.487 A 74.114 74.114 0 0 1 488 152 Z\"\n        id=\"2\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 630.4 169.6 L 629.6 220.8 A 378.48 378.48 0 0 0 630.079 240.663 Q 631.552 268.543 637.561 279.846 A 18.679 18.679 0 0 0 641.2 284.8 A 5.897 5.897 0 0 1 642.236 286.166 A 4.638 4.638 0 0 1 642.8 288.4 A 3.405 3.405 0 0 1 640.83 291.259 Q 636.044 294.173 619.637 294.384 A 204.849 204.849 0 0 1 617 294.4 A 65.592 65.592 0 0 1 607.681 293.797 Q 590.881 291.372 589.6 279.2 Q 589.2 275.6 589.2 264.4 L 590.8 200.4 A 3.485 3.485 0 0 0 590.618 199.225 Q 590.038 197.6 587.6 197.6 Q 568.4 197.6 551.6 208.4 A 44.292 44.292 0 0 0 542.741 215.736 A 29.155 29.155 0 0 0 534.8 236 A 26.732 26.732 0 0 0 535.719 243.164 A 21.118 21.118 0 0 0 539.6 250.8 A 17.329 17.329 0 0 0 543.597 254.515 A 13.91 13.91 0 0 0 551.4 256.8 Q 558.4 256.8 563 254 Q 567.097 251.507 568.18 250.917 A 7.307 7.307 0 0 1 568.4 250.8 A 6.219 6.219 0 0 1 573.337 254.424 Q 574.785 257.193 575.108 262.048 A 44.639 44.639 0 0 1 575.2 265 A 23.898 23.898 0 0 1 566.696 283.628 A 34.903 34.903 0 0 1 562.8 286.6 A 49.912 49.912 0 0 1 548.573 293.203 A 43.91 43.91 0 0 1 536.8 294.8 Q 523.2 294.8 513.4 290 Q 506.456 286.599 502.223 282.595 A 25.221 25.221 0 0 1 499.2 279.2 A 53.648 53.648 0 0 1 493.106 268.394 A 61.842 61.842 0 0 1 492 265.6 Q 489.2 256.4 489.2 249.6 A 72.084 72.084 0 0 1 491.832 229.619 A 54.524 54.524 0 0 1 506.8 204.8 Q 524.4 188 552 180.8 A 384.489 384.489 0 0 0 563.485 178.361 Q 588.675 172.569 590 167.6 Q 591.2 163.2 591.2 152.8 Q 591.2 135.967 577.581 132.5 A 32.419 32.419 0 0 0 569.6 131.6 Q 560.4 131.6 553.2 137.4 A 20.1 20.1 0 0 0 548.407 142.828 A 17.729 17.729 0 0 0 546 152 L 548.4 161.6 A 6.745 6.745 0 0 1 545.149 166.546 Q 542.348 168.402 537.168 169.218 A 46.903 46.903 0 0 1 534 169.6 L 529.6 170 A 38.953 38.953 0 0 1 521.941 169.291 Q 517.302 168.361 513.681 166.209 A 21.977 21.977 0 0 1 510.6 164 Q 503.6 158 503.6 148 Q 503.6 141.6 507.8 133.8 A 40.467 40.467 0 0 1 513.736 125.408 A 35.006 35.006 0 0 1 518.4 121.2 A 34.236 34.236 0 0 1 523.084 118.298 Q 528.988 115.213 538.2 112.6 Q 551.6 108.8 564 108.8 Q 574.22 108.8 580.636 109.344 A 79.276 79.276 0 0 1 583.2 109.6 A 81.699 81.699 0 0 1 587.873 110.304 Q 593.641 111.326 601.8 113.4 A 40.692 40.692 0 0 1 615.708 119.766 A 38.307 38.307 0 0 1 621.4 124.8 Q 629.2 133.2 629.8 142.6 Q 630.4 152 630.4 169.6 Z\"\n        id=\"3\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 664 277.6 L 668.4 184.4 A 227.823 227.823 0 0 0 667.954 169.563 Q 666.559 148.294 660.8 139.2 Q 658.401 135.203 655.204 133.203 A 15.591 15.591 0 0 0 655.2 133.2 Q 652.975 132.459 652.813 130.342 A 4.468 4.468 0 0 1 652.8 130 A 6.531 6.531 0 0 1 654.598 125.761 Q 658.181 121.571 668.904 117.522 A 116.127 116.127 0 0 1 673.2 116 Q 693.6 109.2 703 109.2 Q 708.844 109.2 711.21 111.056 A 4.019 4.019 0 0 1 712.8 114 A 139.175 139.175 0 0 1 712.723 118.034 Q 712.414 128.144 710.874 154.711 A 5532.626 5532.626 0 0 1 710.6 159.4 Q 708.4 196.8 708.4 238 A 566.385 566.385 0 0 0 708.569 252.354 Q 709.3 281.075 713.2 289.2 A 8.908 8.908 0 0 1 714.061 291.075 A 6.963 6.963 0 0 1 714.4 293.2 A 3.49 3.49 0 0 1 712.521 296.214 Q 709.606 298.054 702.166 298.345 A 75.836 75.836 0 0 1 699.2 298.4 A 63.621 63.621 0 0 1 679.397 295.117 A 83.2 83.2 0 0 1 668 290.4 Q 664.114 288.458 664.003 278.211 A 56.309 56.309 0 0 1 664 277.6 Z M 696 75.6 L 686.4 75.2 A 34.825 34.825 0 0 0 681.755 75.486 Q 676.516 76.194 673.841 78.657 A 8.217 8.217 0 0 0 672.4 80.4 A 3.276 3.276 0 0 1 671.861 81.033 A 2.131 2.131 0 0 1 670.4 81.6 A 3.253 3.253 0 0 1 667.63 79.818 Q 665.761 76.857 665.33 68.975 A 95.167 95.167 0 0 1 665.2 63.8 Q 665.2 46.903 670.066 41.721 A 8.263 8.263 0 0 1 670.6 41.2 A 15.154 15.154 0 0 1 675.256 38.468 Q 679.658 36.766 686.394 36.465 A 67.334 67.334 0 0 1 689.4 36.4 A 61.12 61.12 0 0 1 695.475 36.679 Q 703.981 37.532 707.6 41 Q 712.222 45.43 712.393 55.607 A 47.069 47.069 0 0 1 712.4 56.4 Q 712.4 64.999 710.118 69.414 A 10.311 10.311 0 0 1 708.8 71.4 A 10.225 10.225 0 0 1 704.951 74.12 Q 701.463 75.6 696 75.6 Z\"\n        id=\"4\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n    </g>\n  </svg>\n  <a routerLink=\"/profile/createPost\">Create Post</a>\n  <a class=\"active\" routerLink=\"/profile/editPosts\">Edit Post</a>\n  <a routerLink=\"/profile/editProfile\">Edit Profile Info</a>\n  <a routerLink=\"/profile/comments\">See Comments</a>\n</div>\n\n<div class=\"content\">\n  <div *ngFor=\"let i of indecies\" class=\"postcard\">\n    <div class=\"post\">\n      <form>\n        <textarea\n          name=\"comment\"\n          id=\"comment\"\n          rows=\"10\"\n          dir=\"auto\"\n          tabindex=\"4\"\n          required=\"required\"\n          value=\"{{ posts[indecies.length - indecies[i] - 1].postText }}\"\n          [(ngModel)]=\"newPosts[indecies.length - indecies[i] - 1].postText\"\n        ></textarea>\n        <br />\n        <input\n          type=\"file\"\n          name=\"file\"\n          width=\"30px\"\n          id=\"file\"\n          class=\"custom-file-input\"\n          (change)=\"\n            handleInput($event.target.files, indecies.length - indecies[i] - 1)\n          \"\n        />\n        <input\n          [ngStyle]=\"styles[indecies.length - indecies[i] - 1]\"\n          type=\"button\"\n          value=\"Clear Image\"\n          id=\"clear\"\n          (click)=\"clearImage(indecies.length - indecies[i] - 1)\"\n        />\n      </form>\n      <input\n        id=\"submit\"\n        type=\"submit\"\n        value=\"EDIT\"\n        (click)=\"editPost(indecies.length - indecies[i] - 1)\"\n      />\n      <div\n        [ngStyle]=\"styles[indecies.length - indecies[i] - 1]\"\n        class=\"postImage\"\n      >\n        <img src=\"{{ posts[indecies.length - indecies[i] - 1].imageId }}\" />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ViewEncapsulation } from '@angular/core';\nimport { BlogService } from '../../services/blog.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { ProfileService } from '../../services/profile.service';\nimport { ValidationService } from '../../services/validation.service';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss'],\n})\nexport class EditProfileComponent implements OnInit {\n  coverImage: any;\n  profileImage: any;\n  email: any;\n  password: any;\n  userName: any;\n  user: any;\n  URL: any;\n  coverImageId: any;\n  profileImageId: any;\n  error: any;\n  iserror: any;\n  imageSrc: any;\n  coverToUpload: File = null;\n  profileToUpload: File = null;\n  fileToUpload: File = null;\n\n  constructor(\n    private router: Router,\n    private ProfileService: ProfileService,\n    private ValidationService: ValidationService\n  ) {}\n\n  ngOnInit(): void {\n    this.iserror = false;\n    this.error = '';\n    this.password = '';\n    if (!localStorage.getItem('soo')) {\n      localStorage.setItem('soo', 'no reload');\n      location.reload();\n    } else {\n      localStorage.removeItem('soo');\n    }\n    this.URL = '/api/me/image?id=';\n    this.ProfileService.getMe().subscribe((data) => {\n      this.user = data;\n      if (this.user.success) {\n        this.coverImage = this.URL + this.user.user.coverImage;\n        this.profileImage = this.URL + this.user.user.profileImage;\n        this.email = this.user.user.email;\n        this.userName = this.user.user.userName;\n        this.user = this.user.user;\n      } else {\n        console.log('failed');\n      }\n    });\n  }\n  handleFileInput(files: FileList, type) {\n    this.fileToUpload = files.item(0);\n    this.uploadFileToActivity(type);\n  }\n\n  uploadFileToActivity(type) {\n    this.ProfileService.postFile(this.fileToUpload).subscribe(\n      (data) => {\n        this.imageSrc = data;\n        this.URL = '/api/me/image?id=';\n        if (type == 'cover') {\n          this.coverImageId = this.imageSrc.imageId;\n          this.coverImage = this.URL + this.imageSrc.imageId;\n        } else if (type == 'profile') {\n          this.profileImageId = this.imageSrc.imageId;\n          this.profileImage = this.URL + this.imageSrc.imageId;\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  EditUser() {\n    let valid = this.ValidationService.validateEdit(\n      this.email,\n      this.password,\n      this.userName,\n      this.user\n    );\n    if (valid.success) {\n      if (this.email != this.user.email) {\n        this.ValidationService.validateEmail(this.email).subscribe((data) => {\n          let checkExistMail: any;\n          checkExistMail = data;\n          console.log(checkExistMail);\n          if (!checkExistMail.success) {\n            this.iserror = true;\n            this.error = 'Email is already existed';\n          } else {\n            let user: any;\n            if (this.password != '') {\n              user = {\n                coverImage: this.coverImageId,\n                profileImage: this.profileImageId,\n                email: this.email,\n                password: this.password,\n                userName: this.userName,\n              };\n            } else {\n              user = {\n                coverImage: this.coverImageId,\n                profileImage: this.profileImageId,\n                email: this.email,\n                userName: this.userName,\n              };\n            }\n\n            let check: any;\n            this.ProfileService.editProfile(user).subscribe((data) => {\n              check = data;\n              if (check.success) {\n                location.reload();\n              } else {\n                console.log('failed');\n              }\n            });\n          }\n        });\n      } else {\n        let user: any;\n        if (this.password != '') {\n          user = {\n            coverImage: this.coverImageId,\n            profileImage: this.profileImageId,\n            email: this.email,\n            password: this.password,\n            userName: this.userName,\n          };\n        } else {\n          user = {\n            coverImage: this.coverImageId,\n            profileImage: this.profileImageId,\n            email: this.email,\n            userName: this.userName,\n          };\n        }\n\n        let check: any;\n        this.ProfileService.editProfile(user).subscribe((data) => {\n          check = data;\n          if (check.success) {\n            location.reload();\n          } else {\n            console.log('failed');\n          }\n        });\n      }\n    } else {\n      this.iserror = true;\n      this.error = valid.text;\n    }\n  }\n  navigateHome() {\n    console.log('asas');\n    this.router.navigate(['']);\n  }\n}\n","<div class=\"sidenav\">\n  <svg\n    width=\"250\"\n    height=\"150\"\n    viewBox=\"0 0 714.4 298.4\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    id=\"logoReg\"\n    style=\"cursor: pointer;\"\n    (click)=\"navigateHome()\"\n  >\n    <g\n      id=\"svgGroup\"\n      stroke-linecap=\"round\"\n      fill-rule=\"evenodd\"\n      font-size=\"9pt\"\n      stroke=\"#000\"\n      stroke-width=\"0.25mm\"\n      fill=\"rgba(#bab1d6, 0.6)\"\n      style=\"stroke: white; stroke-width: 0.25mm; fill: rgba(#bab1d6, 0.6);\"\n    >\n      <path\n        d=\"M 11.6 134 L 9.6 58.4 Q 9.6 40.811 5.781 30.479 A 39.104 39.104 0 0 0 5.6 30 Q 1.6 19.6 1.6 18.8 A 6.814 6.814 0 0 1 4.204 13.721 Q 8.95 9.443 22.346 6.446 A 144.97 144.97 0 0 1 28.6 5.2 Q 50.755 1.262 64.292 0.555 A 106.086 106.086 0 0 1 69.8 0.4 Q 84 0.4 85.2 7.2 Q 110.4 119.6 127.6 163.2 A 20.425 20.425 0 0 0 128.421 164.952 Q 129.973 167.862 131.641 167.994 A 2.012 2.012 0 0 0 131.8 168 A 2.835 2.835 0 0 0 133.64 167.286 Q 134.713 166.397 135.6 164.4 Q 162.4 88.8 182.8 14.8 A 10.275 10.275 0 0 1 186.085 10.124 Q 187.444 8.991 189.285 8.08 A 22.524 22.524 0 0 1 190.8 7.4 Q 195.625 5.44 205.793 3.594 A 253.913 253.913 0 0 1 213 2.4 Q 228.8 0 244.4 0 A 58.111 58.111 0 0 1 249.302 0.189 Q 260 1.1 260 6.4 A 1.608 1.608 0 0 1 259.981 6.585 Q 259.869 7.39 259.084 11.222 A 720.765 720.765 0 0 1 258.8 12.6 Q 257.975 16.588 257.15 21.804 A 338.363 338.363 0 0 0 256.4 26.8 A 1601.181 1601.181 0 0 0 255.444 33.607 Q 255.022 36.654 254.561 40.052 A 3200.023 3200.023 0 0 0 253.6 47.2 Q 250 74.8 249 110.6 Q 248 146.4 248 182.4 L 248.8 224.4 Q 248.8 246.556 251.049 258.887 A 55.67 55.67 0 0 0 252.6 265.4 Q 256.4 277.6 256.4 279.4 A 2.984 2.984 0 0 1 256.099 280.646 Q 255.481 281.988 253.6 283.6 A 38.953 38.953 0 0 1 241.687 289.982 Q 236.094 291.904 229.194 292.805 A 102.153 102.153 0 0 1 216 293.6 Q 200 293.6 198 282.8 Q 197.088 278.546 196.869 270.481 A 202.597 202.597 0 0 1 196.8 265 Q 196.8 254.561 198.557 207.072 A 14151.852 14151.852 0 0 1 199.2 190 Q 201.51 129.546 201.597 100.785 A 728.222 728.222 0 0 0 201.6 98.6 Q 201.6 75.307 199.477 70.985 A 1.384 1.384 0 0 0 198.4 70 A 1.201 1.201 0 0 0 198.267 70.007 Q 198 70.037 198 70.2 A 0.142 0.142 0 0 1 197.945 70.296 Q 197.742 70.486 196.8 70.8 Q 195.6 71.2 190.6 83.2 A 149.579 149.579 0 0 0 188.381 88.938 Q 182.825 104.05 170.8 142.4 Q 156 189.6 144 230.6 Q 132.677 269.289 130.97 274.319 A 16.882 16.882 0 0 1 130.8 274.8 A 18.138 18.138 0 0 1 126.774 281.004 Q 123.334 284.38 118.057 285.276 A 24.217 24.217 0 0 1 114 285.6 A 13.196 13.196 0 0 1 109.365 284.817 A 11.562 11.562 0 0 1 104.4 281.2 Q 94.6 235.875 73.076 160.772 A 4770.388 4770.388 0 0 0 58.8 112 L 47.6 75.6 A 9.706 9.706 0 0 0 47.3 74.921 Q 46.77 73.844 46.24 73.645 A 0.679 0.679 0 0 0 46 73.6 Q 44.255 73.6 43.424 75.732 A 7.541 7.541 0 0 0 43.2 76.4 A 509.99 509.99 0 0 0 42.577 90.178 Q 41.6 119.069 41.6 178.6 Q 41.6 254.8 47.2 274.8 A 2.984 2.984 0 0 1 47.411 275.379 Q 47.573 275.999 47.596 276.898 A 11.896 11.896 0 0 1 47.6 277.2 A 9.716 9.716 0 0 1 43.764 284.92 Q 40.484 287.649 34.4 289.4 Q 22.602 292.797 12.881 293.158 A 61.513 61.513 0 0 1 10.6 293.2 A 35.343 35.343 0 0 1 7.133 293.045 Q 3.728 292.708 1.949 291.634 A 3.617 3.617 0 0 1 0 288.4 A 1.038 1.038 0 0 1 0.031 288.213 Q 0.219 287.389 1.527 283.426 A 525.892 525.892 0 0 1 2 282 A 137.444 137.444 0 0 0 5.266 267.861 Q 7.779 254.017 9.102 234.958 A 531.788 531.788 0 0 0 9.8 222.8 A 1561.178 1561.178 0 0 0 11.031 186.707 Q 11.458 168.271 11.564 147.841 A 2648.453 2648.453 0 0 0 11.6 134 Z\"\n        id=\"0\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 289.2 277.6 L 293.6 184.4 A 227.823 227.823 0 0 0 293.154 169.563 Q 291.759 148.294 286 139.2 Q 283.601 135.203 280.404 133.203 A 15.591 15.591 0 0 0 280.4 133.2 Q 278.175 132.459 278.013 130.342 A 4.468 4.468 0 0 1 278 130 A 6.531 6.531 0 0 1 279.798 125.761 Q 283.381 121.571 294.104 117.522 A 116.127 116.127 0 0 1 298.4 116 Q 318.8 109.2 328.2 109.2 Q 334.044 109.2 336.41 111.056 A 4.019 4.019 0 0 1 338 114 A 139.175 139.175 0 0 1 337.923 118.034 Q 337.614 128.144 336.074 154.711 A 5532.626 5532.626 0 0 1 335.8 159.4 Q 333.6 196.8 333.6 238 A 566.385 566.385 0 0 0 333.769 252.354 Q 334.5 281.075 338.4 289.2 A 8.908 8.908 0 0 1 339.261 291.075 A 6.963 6.963 0 0 1 339.6 293.2 A 3.49 3.49 0 0 1 337.721 296.214 Q 334.806 298.054 327.366 298.345 A 75.836 75.836 0 0 1 324.4 298.4 A 63.621 63.621 0 0 1 304.597 295.117 A 83.2 83.2 0 0 1 293.2 290.4 Q 289.314 288.458 289.203 278.211 A 56.309 56.309 0 0 1 289.2 277.6 Z M 321.2 75.6 L 311.6 75.2 A 34.825 34.825 0 0 0 306.955 75.486 Q 301.716 76.194 299.041 78.657 A 8.217 8.217 0 0 0 297.6 80.4 A 3.276 3.276 0 0 1 297.061 81.033 A 2.131 2.131 0 0 1 295.6 81.6 A 3.253 3.253 0 0 1 292.83 79.818 Q 290.961 76.857 290.53 68.975 A 95.167 95.167 0 0 1 290.4 63.8 Q 290.4 46.903 295.266 41.721 A 8.263 8.263 0 0 1 295.8 41.2 A 15.154 15.154 0 0 1 300.456 38.468 Q 304.858 36.766 311.594 36.465 A 67.334 67.334 0 0 1 314.6 36.4 A 61.12 61.12 0 0 1 320.675 36.679 Q 329.181 37.532 332.8 41 Q 337.422 45.43 337.593 55.607 A 47.069 47.069 0 0 1 337.6 56.4 Q 337.6 64.999 335.318 69.414 A 10.311 10.311 0 0 1 334 71.4 A 10.225 10.225 0 0 1 330.151 74.12 Q 326.663 75.6 321.2 75.6 Z\"\n        id=\"1\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 488 152 L 486 182.4 L 487.6 196.4 Q 487.6 203.355 475.542 203.946 A 47.931 47.931 0 0 1 473.2 204 A 56.968 56.968 0 0 1 462.633 203.11 Q 445.235 199.809 444.082 184.268 A 30.652 30.652 0 0 1 444 182 A 27.097 27.097 0 0 1 444.26 178.46 Q 444.757 174.723 446.203 169.629 A 112.428 112.428 0 0 1 446.8 167.6 Q 449.6 158.4 449.6 151.6 A 19.375 19.375 0 0 0 448.334 144.52 A 17.914 17.914 0 0 0 445.6 139.8 Q 441.6 134.8 434 134.8 A 17.698 17.698 0 0 0 421.169 140.033 A 21.554 21.554 0 0 0 421 140.2 A 30.667 30.667 0 0 0 417.601 144.193 Q 415.922 146.574 415.039 148.993 A 16.522 16.522 0 0 0 414.4 151.2 L 412.8 156.8 Q 410.991 166.149 410.545 184.932 A 562.247 562.247 0 0 0 410.4 198.2 Q 410.4 220.404 410.869 235.338 A 507.581 507.581 0 0 0 411.2 243.8 Q 412 260.4 412.8 266.6 A 400.96 400.96 0 0 1 413.072 268.75 Q 413.53 272.456 413.591 273.682 A 6.578 6.578 0 0 1 413.6 274 A 14.991 14.991 0 0 1 408.817 284.956 Q 406.719 287.037 403.702 288.836 A 38.563 38.563 0 0 1 401.2 290.2 A 59.714 59.714 0 0 1 387.25 295.214 A 50.638 50.638 0 0 1 376.4 296.4 A 44.621 44.621 0 0 1 372.344 296.232 Q 364 295.466 364 291.2 L 366 278.8 A 369.653 369.653 0 0 0 369.188 252.37 Q 370.394 238.56 370.997 222.468 A 923.507 923.507 0 0 0 371.6 188 A 1237.779 1237.779 0 0 0 371.38 163.728 Q 370.789 133.714 368.604 118.036 A 104.607 104.607 0 0 0 367.6 112 Q 367.6 107.503 374.975 107.219 A 26.717 26.717 0 0 1 376 107.2 A 48.509 48.509 0 0 1 386.459 108.245 Q 392.68 109.62 397.137 112.809 A 23.97 23.97 0 0 1 404.8 122 A 4.252 4.252 0 0 0 404.996 122.604 Q 405.411 123.6 406.2 123.6 A 1.484 1.484 0 0 0 406.747 123.452 Q 407.994 122.912 411.092 120.413 A 94.455 94.455 0 0 0 411.6 120 A 47.626 47.626 0 0 1 442.169 109.204 A 59.58 59.58 0 0 1 442.8 109.2 A 60.072 60.072 0 0 1 462.75 112.691 A 69.217 69.217 0 0 1 465.2 113.6 A 33.732 33.732 0 0 1 486.184 137.111 Q 487.943 143.552 487.998 151.487 A 74.114 74.114 0 0 1 488 152 Z\"\n        id=\"2\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 630.4 169.6 L 629.6 220.8 A 378.48 378.48 0 0 0 630.079 240.663 Q 631.552 268.543 637.561 279.846 A 18.679 18.679 0 0 0 641.2 284.8 A 5.897 5.897 0 0 1 642.236 286.166 A 4.638 4.638 0 0 1 642.8 288.4 A 3.405 3.405 0 0 1 640.83 291.259 Q 636.044 294.173 619.637 294.384 A 204.849 204.849 0 0 1 617 294.4 A 65.592 65.592 0 0 1 607.681 293.797 Q 590.881 291.372 589.6 279.2 Q 589.2 275.6 589.2 264.4 L 590.8 200.4 A 3.485 3.485 0 0 0 590.618 199.225 Q 590.038 197.6 587.6 197.6 Q 568.4 197.6 551.6 208.4 A 44.292 44.292 0 0 0 542.741 215.736 A 29.155 29.155 0 0 0 534.8 236 A 26.732 26.732 0 0 0 535.719 243.164 A 21.118 21.118 0 0 0 539.6 250.8 A 17.329 17.329 0 0 0 543.597 254.515 A 13.91 13.91 0 0 0 551.4 256.8 Q 558.4 256.8 563 254 Q 567.097 251.507 568.18 250.917 A 7.307 7.307 0 0 1 568.4 250.8 A 6.219 6.219 0 0 1 573.337 254.424 Q 574.785 257.193 575.108 262.048 A 44.639 44.639 0 0 1 575.2 265 A 23.898 23.898 0 0 1 566.696 283.628 A 34.903 34.903 0 0 1 562.8 286.6 A 49.912 49.912 0 0 1 548.573 293.203 A 43.91 43.91 0 0 1 536.8 294.8 Q 523.2 294.8 513.4 290 Q 506.456 286.599 502.223 282.595 A 25.221 25.221 0 0 1 499.2 279.2 A 53.648 53.648 0 0 1 493.106 268.394 A 61.842 61.842 0 0 1 492 265.6 Q 489.2 256.4 489.2 249.6 A 72.084 72.084 0 0 1 491.832 229.619 A 54.524 54.524 0 0 1 506.8 204.8 Q 524.4 188 552 180.8 A 384.489 384.489 0 0 0 563.485 178.361 Q 588.675 172.569 590 167.6 Q 591.2 163.2 591.2 152.8 Q 591.2 135.967 577.581 132.5 A 32.419 32.419 0 0 0 569.6 131.6 Q 560.4 131.6 553.2 137.4 A 20.1 20.1 0 0 0 548.407 142.828 A 17.729 17.729 0 0 0 546 152 L 548.4 161.6 A 6.745 6.745 0 0 1 545.149 166.546 Q 542.348 168.402 537.168 169.218 A 46.903 46.903 0 0 1 534 169.6 L 529.6 170 A 38.953 38.953 0 0 1 521.941 169.291 Q 517.302 168.361 513.681 166.209 A 21.977 21.977 0 0 1 510.6 164 Q 503.6 158 503.6 148 Q 503.6 141.6 507.8 133.8 A 40.467 40.467 0 0 1 513.736 125.408 A 35.006 35.006 0 0 1 518.4 121.2 A 34.236 34.236 0 0 1 523.084 118.298 Q 528.988 115.213 538.2 112.6 Q 551.6 108.8 564 108.8 Q 574.22 108.8 580.636 109.344 A 79.276 79.276 0 0 1 583.2 109.6 A 81.699 81.699 0 0 1 587.873 110.304 Q 593.641 111.326 601.8 113.4 A 40.692 40.692 0 0 1 615.708 119.766 A 38.307 38.307 0 0 1 621.4 124.8 Q 629.2 133.2 629.8 142.6 Q 630.4 152 630.4 169.6 Z\"\n        id=\"3\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 664 277.6 L 668.4 184.4 A 227.823 227.823 0 0 0 667.954 169.563 Q 666.559 148.294 660.8 139.2 Q 658.401 135.203 655.204 133.203 A 15.591 15.591 0 0 0 655.2 133.2 Q 652.975 132.459 652.813 130.342 A 4.468 4.468 0 0 1 652.8 130 A 6.531 6.531 0 0 1 654.598 125.761 Q 658.181 121.571 668.904 117.522 A 116.127 116.127 0 0 1 673.2 116 Q 693.6 109.2 703 109.2 Q 708.844 109.2 711.21 111.056 A 4.019 4.019 0 0 1 712.8 114 A 139.175 139.175 0 0 1 712.723 118.034 Q 712.414 128.144 710.874 154.711 A 5532.626 5532.626 0 0 1 710.6 159.4 Q 708.4 196.8 708.4 238 A 566.385 566.385 0 0 0 708.569 252.354 Q 709.3 281.075 713.2 289.2 A 8.908 8.908 0 0 1 714.061 291.075 A 6.963 6.963 0 0 1 714.4 293.2 A 3.49 3.49 0 0 1 712.521 296.214 Q 709.606 298.054 702.166 298.345 A 75.836 75.836 0 0 1 699.2 298.4 A 63.621 63.621 0 0 1 679.397 295.117 A 83.2 83.2 0 0 1 668 290.4 Q 664.114 288.458 664.003 278.211 A 56.309 56.309 0 0 1 664 277.6 Z M 696 75.6 L 686.4 75.2 A 34.825 34.825 0 0 0 681.755 75.486 Q 676.516 76.194 673.841 78.657 A 8.217 8.217 0 0 0 672.4 80.4 A 3.276 3.276 0 0 1 671.861 81.033 A 2.131 2.131 0 0 1 670.4 81.6 A 3.253 3.253 0 0 1 667.63 79.818 Q 665.761 76.857 665.33 68.975 A 95.167 95.167 0 0 1 665.2 63.8 Q 665.2 46.903 670.066 41.721 A 8.263 8.263 0 0 1 670.6 41.2 A 15.154 15.154 0 0 1 675.256 38.468 Q 679.658 36.766 686.394 36.465 A 67.334 67.334 0 0 1 689.4 36.4 A 61.12 61.12 0 0 1 695.475 36.679 Q 703.981 37.532 707.6 41 Q 712.222 45.43 712.393 55.607 A 47.069 47.069 0 0 1 712.4 56.4 Q 712.4 64.999 710.118 69.414 A 10.311 10.311 0 0 1 708.8 71.4 A 10.225 10.225 0 0 1 704.951 74.12 Q 701.463 75.6 696 75.6 Z\"\n        id=\"4\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n    </g>\n  </svg>\n  <a routerLink=\"/profile/createPost\">Create Post</a>\n  <a routerLink=\"/profile/editPosts\">Edit Post</a>\n  <a class=\"active\" routerLink=\"/profile/editProfile\">Edit Profile Info</a>\n  <a routerLink=\"/profile/comments\">See Comments</a>\n</div>\n<div class=\"content\">\n  <div id=\"images\" style=\"position: relative; width: 80%; height: 30vh;\">\n    <img\n      id=\"coverImage\"\n      style=\"\n        position: absolute;\n        width: 100%;\n        height: 30vh;\n        box-shadow: inset 0 -3em 3em rgba(223, 208, 208, 0.1),\n          0 0 0 2px rgb(255, 255, 255), 0.3em 0.3em 1em rgba(206, 174, 174, 0.3);\n      \"\n      src=\"{{ coverImage }}\"\n    />\n    <div class=\"card\">\n      <img id=\"profileImage\" src=\"{{ profileImage }}\" />\n      <label dir=\"auto\">\n        {{ userName }}\n      </label>\n    </div>\n  </div>\n  <input\n    type=\"file\"\n    name=\"file\"\n    width=\"30px\"\n    id=\"file\"\n    class=\"inputfile\"\n    (change)=\"handleFileInput($event.target.files, 'profile')\"\n  />\n  <label id=\"profileLabel\" for=\"file\">Choose Profile Image</label>\n  <div *ngIf=\"iserror\" class=\"error\">\n    <p>{{ error }}</p>\n  </div>\n\n  <form id=\"form\" (submit)=\"EditUser()\">\n    <div class=\"field\">\n      <div class=\"overlay\"></div>\n      <label dir=\"auto\">User Name</label>\n      <input dir=\"auto\" type=\"text\" name=\"userName\" [(ngModel)]=\"userName\" />\n    </div>\n    <div class=\"field\">\n      <div class=\"overlay\"></div>\n      <label>Email</label>\n      <input dir=\"auto\" type=\"email\" name=\"email\" [(ngModel)]=\"email\" />\n    </div>\n    <div class=\"field\">\n      <div class=\"overlay\"></div>\n      <label>Password</label>\n      <input\n        dir=\"auto\"\n        type=\"password\"\n        name=\"password\"\n        [(ngModel)]=\"password\"\n      />\n    </div>\n    <input id=\"submit\" type=\"submit\" value=\"Edit\" />\n  </form>\n  <input\n    type=\"file\"\n    name=\"file\"\n    width=\"30px\"\n    id=\"file\"\n    class=\"custom-file-input\"\n    (change)=\"handleFileInput($event.target.files, 'cover')\"\n  />\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ViewEncapsulation } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class HomeComponent implements OnInit {\n  blogname: any;\n  constructor(public authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    if (!localStorage.getItem('qoo')) {\n      localStorage.setItem('qoo', 'no reload');\n      location.reload();\n    } else {\n      localStorage.removeItem('qoo');\n    }\n  }\n  navigateRegister() {\n    this.router.navigate(['/register']);\n  }\n  navigateLogin() {\n    this.router.navigate(['/login']);\n  }\n  navigateProfile() {\n    this.router.navigate(['/profile/createPost']);\n  }\n  navigateBlog() {\n    this.authService.userBlogName().subscribe((data) => {\n      this.blogname = data;\n      this.blogname = this.blogname.blogname;\n      this.router.navigate(['/blog/' + this.blogname]);\n    });\n  }\n  Logout() {\n    this.authService.logout();\n  }\n}\n","<div id=\"overlay\"></div>\n<svg\n  width=\"714.4\"\n  height=\"298.4\"\n  viewBox=\"0 0 714.4 298.4\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  id=\"logo\"\n>\n  <g\n    id=\"svgGroup\"\n    stroke-linecap=\"round\"\n    fill-rule=\"evenodd\"\n    font-size=\"9pt\"\n    stroke=\"#000\"\n    stroke-width=\"0.25mm\"\n    fill=\"none\"\n    style=\"stroke: white; stroke-width: 10; fill: none;\"\n  >\n    <path\n      d=\"M 11.6 134 L 9.6 58.4 Q 9.6 40.811 5.781 30.479 A 39.104 39.104 0 0 0 5.6 30 Q 1.6 19.6 1.6 18.8 A 6.814 6.814 0 0 1 4.204 13.721 Q 8.95 9.443 22.346 6.446 A 144.97 144.97 0 0 1 28.6 5.2 Q 50.755 1.262 64.292 0.555 A 106.086 106.086 0 0 1 69.8 0.4 Q 84 0.4 85.2 7.2 Q 110.4 119.6 127.6 163.2 A 20.425 20.425 0 0 0 128.421 164.952 Q 129.973 167.862 131.641 167.994 A 2.012 2.012 0 0 0 131.8 168 A 2.835 2.835 0 0 0 133.64 167.286 Q 134.713 166.397 135.6 164.4 Q 162.4 88.8 182.8 14.8 A 10.275 10.275 0 0 1 186.085 10.124 Q 187.444 8.991 189.285 8.08 A 22.524 22.524 0 0 1 190.8 7.4 Q 195.625 5.44 205.793 3.594 A 253.913 253.913 0 0 1 213 2.4 Q 228.8 0 244.4 0 A 58.111 58.111 0 0 1 249.302 0.189 Q 260 1.1 260 6.4 A 1.608 1.608 0 0 1 259.981 6.585 Q 259.869 7.39 259.084 11.222 A 720.765 720.765 0 0 1 258.8 12.6 Q 257.975 16.588 257.15 21.804 A 338.363 338.363 0 0 0 256.4 26.8 A 1601.181 1601.181 0 0 0 255.444 33.607 Q 255.022 36.654 254.561 40.052 A 3200.023 3200.023 0 0 0 253.6 47.2 Q 250 74.8 249 110.6 Q 248 146.4 248 182.4 L 248.8 224.4 Q 248.8 246.556 251.049 258.887 A 55.67 55.67 0 0 0 252.6 265.4 Q 256.4 277.6 256.4 279.4 A 2.984 2.984 0 0 1 256.099 280.646 Q 255.481 281.988 253.6 283.6 A 38.953 38.953 0 0 1 241.687 289.982 Q 236.094 291.904 229.194 292.805 A 102.153 102.153 0 0 1 216 293.6 Q 200 293.6 198 282.8 Q 197.088 278.546 196.869 270.481 A 202.597 202.597 0 0 1 196.8 265 Q 196.8 254.561 198.557 207.072 A 14151.852 14151.852 0 0 1 199.2 190 Q 201.51 129.546 201.597 100.785 A 728.222 728.222 0 0 0 201.6 98.6 Q 201.6 75.307 199.477 70.985 A 1.384 1.384 0 0 0 198.4 70 A 1.201 1.201 0 0 0 198.267 70.007 Q 198 70.037 198 70.2 A 0.142 0.142 0 0 1 197.945 70.296 Q 197.742 70.486 196.8 70.8 Q 195.6 71.2 190.6 83.2 A 149.579 149.579 0 0 0 188.381 88.938 Q 182.825 104.05 170.8 142.4 Q 156 189.6 144 230.6 Q 132.677 269.289 130.97 274.319 A 16.882 16.882 0 0 1 130.8 274.8 A 18.138 18.138 0 0 1 126.774 281.004 Q 123.334 284.38 118.057 285.276 A 24.217 24.217 0 0 1 114 285.6 A 13.196 13.196 0 0 1 109.365 284.817 A 11.562 11.562 0 0 1 104.4 281.2 Q 94.6 235.875 73.076 160.772 A 4770.388 4770.388 0 0 0 58.8 112 L 47.6 75.6 A 9.706 9.706 0 0 0 47.3 74.921 Q 46.77 73.844 46.24 73.645 A 0.679 0.679 0 0 0 46 73.6 Q 44.255 73.6 43.424 75.732 A 7.541 7.541 0 0 0 43.2 76.4 A 509.99 509.99 0 0 0 42.577 90.178 Q 41.6 119.069 41.6 178.6 Q 41.6 254.8 47.2 274.8 A 2.984 2.984 0 0 1 47.411 275.379 Q 47.573 275.999 47.596 276.898 A 11.896 11.896 0 0 1 47.6 277.2 A 9.716 9.716 0 0 1 43.764 284.92 Q 40.484 287.649 34.4 289.4 Q 22.602 292.797 12.881 293.158 A 61.513 61.513 0 0 1 10.6 293.2 A 35.343 35.343 0 0 1 7.133 293.045 Q 3.728 292.708 1.949 291.634 A 3.617 3.617 0 0 1 0 288.4 A 1.038 1.038 0 0 1 0.031 288.213 Q 0.219 287.389 1.527 283.426 A 525.892 525.892 0 0 1 2 282 A 137.444 137.444 0 0 0 5.266 267.861 Q 7.779 254.017 9.102 234.958 A 531.788 531.788 0 0 0 9.8 222.8 A 1561.178 1561.178 0 0 0 11.031 186.707 Q 11.458 168.271 11.564 147.841 A 2648.453 2648.453 0 0 0 11.6 134 Z\"\n      id=\"0\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n      d=\"M 289.2 277.6 L 293.6 184.4 A 227.823 227.823 0 0 0 293.154 169.563 Q 291.759 148.294 286 139.2 Q 283.601 135.203 280.404 133.203 A 15.591 15.591 0 0 0 280.4 133.2 Q 278.175 132.459 278.013 130.342 A 4.468 4.468 0 0 1 278 130 A 6.531 6.531 0 0 1 279.798 125.761 Q 283.381 121.571 294.104 117.522 A 116.127 116.127 0 0 1 298.4 116 Q 318.8 109.2 328.2 109.2 Q 334.044 109.2 336.41 111.056 A 4.019 4.019 0 0 1 338 114 A 139.175 139.175 0 0 1 337.923 118.034 Q 337.614 128.144 336.074 154.711 A 5532.626 5532.626 0 0 1 335.8 159.4 Q 333.6 196.8 333.6 238 A 566.385 566.385 0 0 0 333.769 252.354 Q 334.5 281.075 338.4 289.2 A 8.908 8.908 0 0 1 339.261 291.075 A 6.963 6.963 0 0 1 339.6 293.2 A 3.49 3.49 0 0 1 337.721 296.214 Q 334.806 298.054 327.366 298.345 A 75.836 75.836 0 0 1 324.4 298.4 A 63.621 63.621 0 0 1 304.597 295.117 A 83.2 83.2 0 0 1 293.2 290.4 Q 289.314 288.458 289.203 278.211 A 56.309 56.309 0 0 1 289.2 277.6 Z M 321.2 75.6 L 311.6 75.2 A 34.825 34.825 0 0 0 306.955 75.486 Q 301.716 76.194 299.041 78.657 A 8.217 8.217 0 0 0 297.6 80.4 A 3.276 3.276 0 0 1 297.061 81.033 A 2.131 2.131 0 0 1 295.6 81.6 A 3.253 3.253 0 0 1 292.83 79.818 Q 290.961 76.857 290.53 68.975 A 95.167 95.167 0 0 1 290.4 63.8 Q 290.4 46.903 295.266 41.721 A 8.263 8.263 0 0 1 295.8 41.2 A 15.154 15.154 0 0 1 300.456 38.468 Q 304.858 36.766 311.594 36.465 A 67.334 67.334 0 0 1 314.6 36.4 A 61.12 61.12 0 0 1 320.675 36.679 Q 329.181 37.532 332.8 41 Q 337.422 45.43 337.593 55.607 A 47.069 47.069 0 0 1 337.6 56.4 Q 337.6 64.999 335.318 69.414 A 10.311 10.311 0 0 1 334 71.4 A 10.225 10.225 0 0 1 330.151 74.12 Q 326.663 75.6 321.2 75.6 Z\"\n      id=\"1\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n      d=\"M 488 152 L 486 182.4 L 487.6 196.4 Q 487.6 203.355 475.542 203.946 A 47.931 47.931 0 0 1 473.2 204 A 56.968 56.968 0 0 1 462.633 203.11 Q 445.235 199.809 444.082 184.268 A 30.652 30.652 0 0 1 444 182 A 27.097 27.097 0 0 1 444.26 178.46 Q 444.757 174.723 446.203 169.629 A 112.428 112.428 0 0 1 446.8 167.6 Q 449.6 158.4 449.6 151.6 A 19.375 19.375 0 0 0 448.334 144.52 A 17.914 17.914 0 0 0 445.6 139.8 Q 441.6 134.8 434 134.8 A 17.698 17.698 0 0 0 421.169 140.033 A 21.554 21.554 0 0 0 421 140.2 A 30.667 30.667 0 0 0 417.601 144.193 Q 415.922 146.574 415.039 148.993 A 16.522 16.522 0 0 0 414.4 151.2 L 412.8 156.8 Q 410.991 166.149 410.545 184.932 A 562.247 562.247 0 0 0 410.4 198.2 Q 410.4 220.404 410.869 235.338 A 507.581 507.581 0 0 0 411.2 243.8 Q 412 260.4 412.8 266.6 A 400.96 400.96 0 0 1 413.072 268.75 Q 413.53 272.456 413.591 273.682 A 6.578 6.578 0 0 1 413.6 274 A 14.991 14.991 0 0 1 408.817 284.956 Q 406.719 287.037 403.702 288.836 A 38.563 38.563 0 0 1 401.2 290.2 A 59.714 59.714 0 0 1 387.25 295.214 A 50.638 50.638 0 0 1 376.4 296.4 A 44.621 44.621 0 0 1 372.344 296.232 Q 364 295.466 364 291.2 L 366 278.8 A 369.653 369.653 0 0 0 369.188 252.37 Q 370.394 238.56 370.997 222.468 A 923.507 923.507 0 0 0 371.6 188 A 1237.779 1237.779 0 0 0 371.38 163.728 Q 370.789 133.714 368.604 118.036 A 104.607 104.607 0 0 0 367.6 112 Q 367.6 107.503 374.975 107.219 A 26.717 26.717 0 0 1 376 107.2 A 48.509 48.509 0 0 1 386.459 108.245 Q 392.68 109.62 397.137 112.809 A 23.97 23.97 0 0 1 404.8 122 A 4.252 4.252 0 0 0 404.996 122.604 Q 405.411 123.6 406.2 123.6 A 1.484 1.484 0 0 0 406.747 123.452 Q 407.994 122.912 411.092 120.413 A 94.455 94.455 0 0 0 411.6 120 A 47.626 47.626 0 0 1 442.169 109.204 A 59.58 59.58 0 0 1 442.8 109.2 A 60.072 60.072 0 0 1 462.75 112.691 A 69.217 69.217 0 0 1 465.2 113.6 A 33.732 33.732 0 0 1 486.184 137.111 Q 487.943 143.552 487.998 151.487 A 74.114 74.114 0 0 1 488 152 Z\"\n      id=\"2\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n      d=\"M 630.4 169.6 L 629.6 220.8 A 378.48 378.48 0 0 0 630.079 240.663 Q 631.552 268.543 637.561 279.846 A 18.679 18.679 0 0 0 641.2 284.8 A 5.897 5.897 0 0 1 642.236 286.166 A 4.638 4.638 0 0 1 642.8 288.4 A 3.405 3.405 0 0 1 640.83 291.259 Q 636.044 294.173 619.637 294.384 A 204.849 204.849 0 0 1 617 294.4 A 65.592 65.592 0 0 1 607.681 293.797 Q 590.881 291.372 589.6 279.2 Q 589.2 275.6 589.2 264.4 L 590.8 200.4 A 3.485 3.485 0 0 0 590.618 199.225 Q 590.038 197.6 587.6 197.6 Q 568.4 197.6 551.6 208.4 A 44.292 44.292 0 0 0 542.741 215.736 A 29.155 29.155 0 0 0 534.8 236 A 26.732 26.732 0 0 0 535.719 243.164 A 21.118 21.118 0 0 0 539.6 250.8 A 17.329 17.329 0 0 0 543.597 254.515 A 13.91 13.91 0 0 0 551.4 256.8 Q 558.4 256.8 563 254 Q 567.097 251.507 568.18 250.917 A 7.307 7.307 0 0 1 568.4 250.8 A 6.219 6.219 0 0 1 573.337 254.424 Q 574.785 257.193 575.108 262.048 A 44.639 44.639 0 0 1 575.2 265 A 23.898 23.898 0 0 1 566.696 283.628 A 34.903 34.903 0 0 1 562.8 286.6 A 49.912 49.912 0 0 1 548.573 293.203 A 43.91 43.91 0 0 1 536.8 294.8 Q 523.2 294.8 513.4 290 Q 506.456 286.599 502.223 282.595 A 25.221 25.221 0 0 1 499.2 279.2 A 53.648 53.648 0 0 1 493.106 268.394 A 61.842 61.842 0 0 1 492 265.6 Q 489.2 256.4 489.2 249.6 A 72.084 72.084 0 0 1 491.832 229.619 A 54.524 54.524 0 0 1 506.8 204.8 Q 524.4 188 552 180.8 A 384.489 384.489 0 0 0 563.485 178.361 Q 588.675 172.569 590 167.6 Q 591.2 163.2 591.2 152.8 Q 591.2 135.967 577.581 132.5 A 32.419 32.419 0 0 0 569.6 131.6 Q 560.4 131.6 553.2 137.4 A 20.1 20.1 0 0 0 548.407 142.828 A 17.729 17.729 0 0 0 546 152 L 548.4 161.6 A 6.745 6.745 0 0 1 545.149 166.546 Q 542.348 168.402 537.168 169.218 A 46.903 46.903 0 0 1 534 169.6 L 529.6 170 A 38.953 38.953 0 0 1 521.941 169.291 Q 517.302 168.361 513.681 166.209 A 21.977 21.977 0 0 1 510.6 164 Q 503.6 158 503.6 148 Q 503.6 141.6 507.8 133.8 A 40.467 40.467 0 0 1 513.736 125.408 A 35.006 35.006 0 0 1 518.4 121.2 A 34.236 34.236 0 0 1 523.084 118.298 Q 528.988 115.213 538.2 112.6 Q 551.6 108.8 564 108.8 Q 574.22 108.8 580.636 109.344 A 79.276 79.276 0 0 1 583.2 109.6 A 81.699 81.699 0 0 1 587.873 110.304 Q 593.641 111.326 601.8 113.4 A 40.692 40.692 0 0 1 615.708 119.766 A 38.307 38.307 0 0 1 621.4 124.8 Q 629.2 133.2 629.8 142.6 Q 630.4 152 630.4 169.6 Z\"\n      id=\"3\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n      d=\"M 664 277.6 L 668.4 184.4 A 227.823 227.823 0 0 0 667.954 169.563 Q 666.559 148.294 660.8 139.2 Q 658.401 135.203 655.204 133.203 A 15.591 15.591 0 0 0 655.2 133.2 Q 652.975 132.459 652.813 130.342 A 4.468 4.468 0 0 1 652.8 130 A 6.531 6.531 0 0 1 654.598 125.761 Q 658.181 121.571 668.904 117.522 A 116.127 116.127 0 0 1 673.2 116 Q 693.6 109.2 703 109.2 Q 708.844 109.2 711.21 111.056 A 4.019 4.019 0 0 1 712.8 114 A 139.175 139.175 0 0 1 712.723 118.034 Q 712.414 128.144 710.874 154.711 A 5532.626 5532.626 0 0 1 710.6 159.4 Q 708.4 196.8 708.4 238 A 566.385 566.385 0 0 0 708.569 252.354 Q 709.3 281.075 713.2 289.2 A 8.908 8.908 0 0 1 714.061 291.075 A 6.963 6.963 0 0 1 714.4 293.2 A 3.49 3.49 0 0 1 712.521 296.214 Q 709.606 298.054 702.166 298.345 A 75.836 75.836 0 0 1 699.2 298.4 A 63.621 63.621 0 0 1 679.397 295.117 A 83.2 83.2 0 0 1 668 290.4 Q 664.114 288.458 664.003 278.211 A 56.309 56.309 0 0 1 664 277.6 Z M 696 75.6 L 686.4 75.2 A 34.825 34.825 0 0 0 681.755 75.486 Q 676.516 76.194 673.841 78.657 A 8.217 8.217 0 0 0 672.4 80.4 A 3.276 3.276 0 0 1 671.861 81.033 A 2.131 2.131 0 0 1 670.4 81.6 A 3.253 3.253 0 0 1 667.63 79.818 Q 665.761 76.857 665.33 68.975 A 95.167 95.167 0 0 1 665.2 63.8 Q 665.2 46.903 670.066 41.721 A 8.263 8.263 0 0 1 670.6 41.2 A 15.154 15.154 0 0 1 675.256 38.468 Q 679.658 36.766 686.394 36.465 A 67.334 67.334 0 0 1 689.4 36.4 A 61.12 61.12 0 0 1 695.475 36.679 Q 703.981 37.532 707.6 41 Q 712.222 45.43 712.393 55.607 A 47.069 47.069 0 0 1 712.4 56.4 Q 712.4 64.999 710.118 69.414 A 10.311 10.311 0 0 1 708.8 71.4 A 10.225 10.225 0 0 1 704.951 74.12 Q 701.463 75.6 696 75.6 Z\"\n      id=\"4\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n  </g>\n</svg>\n<div id=\"btns\">\n  <div *ngIf=\"!authService.isLogged()\" (click)=\"navigateRegister()\">\n    <a>Register</a>\n  </div>\n  <div *ngIf=\"!authService.isLogged()\" (click)=\"navigateLogin()\">\n    <a>Login</a>\n  </div>\n  <div *ngIf=\"authService.isLogged()\" (click)=\"navigateBlog()\">\n    <a>Blog</a>\n  </div>\n  <div *ngIf=\"authService.isLogged()\" (click)=\"navigateProfile()\">\n    <a>Profile</a>\n  </div>\n  <div *ngIf=\"authService.isLogged()\" (click)=\"Logout()\">\n    <a>Logout</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ViewEncapsulation } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { ValidationService } from '../../services/validation.service';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  email: String;\n  password: String;\n  login: any;\n  iserror: any;\n  error: any;\n  constructor(\n    private AuthService: AuthService,\n    private router: Router,\n    private ValidationService: ValidationService\n  ) {}\n\n  ngOnInit(): void {\n    this.email = '';\n    this.password = '';\n    this.error = '';\n    this.iserror = false;\n  }\n  LoginUser() {\n    let valid = this.ValidationService.validateLogin(this.email, this.password);\n    if (valid.success) {\n      let user = {\n        email: this.email,\n        password: this.password,\n      };\n      this.AuthService.userLogin(user).subscribe((data) => {\n        this.login = data;\n        if (this.login.success) {\n          this.AuthService.setLocalStorage(this.login.token, this.login.user);\n          this.router.navigate(['']);\n        } else {\n          this.iserror = true;\n          this.error = 'Email or Password are not valid';\n        }\n      });\n    } else {\n      this.iserror = true;\n      this.error = valid.text;\n    }\n  }\n}\n","<svg\n  width=\"700.4\"\n  height=\"150\"\n  viewBox=\"0 0 714.4 298.4\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  id=\"logoLogin\"\n>\n  <g\n    id=\"svgGroup\"\n    stroke-linecap=\"round\"\n    fill-rule=\"evenodd\"\n    font-size=\"9pt\"\n    stroke=\"#000\"\n    stroke-width=\"0.25mm\"\n    fill=\"none\"\n    style=\"stroke: white; stroke-width: 10; fill: none;\"\n  >\n    <path\n      d=\"M 11.6 134 L 9.6 58.4 Q 9.6 40.811 5.781 30.479 A 39.104 39.104 0 0 0 5.6 30 Q 1.6 19.6 1.6 18.8 A 6.814 6.814 0 0 1 4.204 13.721 Q 8.95 9.443 22.346 6.446 A 144.97 144.97 0 0 1 28.6 5.2 Q 50.755 1.262 64.292 0.555 A 106.086 106.086 0 0 1 69.8 0.4 Q 84 0.4 85.2 7.2 Q 110.4 119.6 127.6 163.2 A 20.425 20.425 0 0 0 128.421 164.952 Q 129.973 167.862 131.641 167.994 A 2.012 2.012 0 0 0 131.8 168 A 2.835 2.835 0 0 0 133.64 167.286 Q 134.713 166.397 135.6 164.4 Q 162.4 88.8 182.8 14.8 A 10.275 10.275 0 0 1 186.085 10.124 Q 187.444 8.991 189.285 8.08 A 22.524 22.524 0 0 1 190.8 7.4 Q 195.625 5.44 205.793 3.594 A 253.913 253.913 0 0 1 213 2.4 Q 228.8 0 244.4 0 A 58.111 58.111 0 0 1 249.302 0.189 Q 260 1.1 260 6.4 A 1.608 1.608 0 0 1 259.981 6.585 Q 259.869 7.39 259.084 11.222 A 720.765 720.765 0 0 1 258.8 12.6 Q 257.975 16.588 257.15 21.804 A 338.363 338.363 0 0 0 256.4 26.8 A 1601.181 1601.181 0 0 0 255.444 33.607 Q 255.022 36.654 254.561 40.052 A 3200.023 3200.023 0 0 0 253.6 47.2 Q 250 74.8 249 110.6 Q 248 146.4 248 182.4 L 248.8 224.4 Q 248.8 246.556 251.049 258.887 A 55.67 55.67 0 0 0 252.6 265.4 Q 256.4 277.6 256.4 279.4 A 2.984 2.984 0 0 1 256.099 280.646 Q 255.481 281.988 253.6 283.6 A 38.953 38.953 0 0 1 241.687 289.982 Q 236.094 291.904 229.194 292.805 A 102.153 102.153 0 0 1 216 293.6 Q 200 293.6 198 282.8 Q 197.088 278.546 196.869 270.481 A 202.597 202.597 0 0 1 196.8 265 Q 196.8 254.561 198.557 207.072 A 14151.852 14151.852 0 0 1 199.2 190 Q 201.51 129.546 201.597 100.785 A 728.222 728.222 0 0 0 201.6 98.6 Q 201.6 75.307 199.477 70.985 A 1.384 1.384 0 0 0 198.4 70 A 1.201 1.201 0 0 0 198.267 70.007 Q 198 70.037 198 70.2 A 0.142 0.142 0 0 1 197.945 70.296 Q 197.742 70.486 196.8 70.8 Q 195.6 71.2 190.6 83.2 A 149.579 149.579 0 0 0 188.381 88.938 Q 182.825 104.05 170.8 142.4 Q 156 189.6 144 230.6 Q 132.677 269.289 130.97 274.319 A 16.882 16.882 0 0 1 130.8 274.8 A 18.138 18.138 0 0 1 126.774 281.004 Q 123.334 284.38 118.057 285.276 A 24.217 24.217 0 0 1 114 285.6 A 13.196 13.196 0 0 1 109.365 284.817 A 11.562 11.562 0 0 1 104.4 281.2 Q 94.6 235.875 73.076 160.772 A 4770.388 4770.388 0 0 0 58.8 112 L 47.6 75.6 A 9.706 9.706 0 0 0 47.3 74.921 Q 46.77 73.844 46.24 73.645 A 0.679 0.679 0 0 0 46 73.6 Q 44.255 73.6 43.424 75.732 A 7.541 7.541 0 0 0 43.2 76.4 A 509.99 509.99 0 0 0 42.577 90.178 Q 41.6 119.069 41.6 178.6 Q 41.6 254.8 47.2 274.8 A 2.984 2.984 0 0 1 47.411 275.379 Q 47.573 275.999 47.596 276.898 A 11.896 11.896 0 0 1 47.6 277.2 A 9.716 9.716 0 0 1 43.764 284.92 Q 40.484 287.649 34.4 289.4 Q 22.602 292.797 12.881 293.158 A 61.513 61.513 0 0 1 10.6 293.2 A 35.343 35.343 0 0 1 7.133 293.045 Q 3.728 292.708 1.949 291.634 A 3.617 3.617 0 0 1 0 288.4 A 1.038 1.038 0 0 1 0.031 288.213 Q 0.219 287.389 1.527 283.426 A 525.892 525.892 0 0 1 2 282 A 137.444 137.444 0 0 0 5.266 267.861 Q 7.779 254.017 9.102 234.958 A 531.788 531.788 0 0 0 9.8 222.8 A 1561.178 1561.178 0 0 0 11.031 186.707 Q 11.458 168.271 11.564 147.841 A 2648.453 2648.453 0 0 0 11.6 134 Z\"\n      id=\"0\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n      d=\"M 289.2 277.6 L 293.6 184.4 A 227.823 227.823 0 0 0 293.154 169.563 Q 291.759 148.294 286 139.2 Q 283.601 135.203 280.404 133.203 A 15.591 15.591 0 0 0 280.4 133.2 Q 278.175 132.459 278.013 130.342 A 4.468 4.468 0 0 1 278 130 A 6.531 6.531 0 0 1 279.798 125.761 Q 283.381 121.571 294.104 117.522 A 116.127 116.127 0 0 1 298.4 116 Q 318.8 109.2 328.2 109.2 Q 334.044 109.2 336.41 111.056 A 4.019 4.019 0 0 1 338 114 A 139.175 139.175 0 0 1 337.923 118.034 Q 337.614 128.144 336.074 154.711 A 5532.626 5532.626 0 0 1 335.8 159.4 Q 333.6 196.8 333.6 238 A 566.385 566.385 0 0 0 333.769 252.354 Q 334.5 281.075 338.4 289.2 A 8.908 8.908 0 0 1 339.261 291.075 A 6.963 6.963 0 0 1 339.6 293.2 A 3.49 3.49 0 0 1 337.721 296.214 Q 334.806 298.054 327.366 298.345 A 75.836 75.836 0 0 1 324.4 298.4 A 63.621 63.621 0 0 1 304.597 295.117 A 83.2 83.2 0 0 1 293.2 290.4 Q 289.314 288.458 289.203 278.211 A 56.309 56.309 0 0 1 289.2 277.6 Z M 321.2 75.6 L 311.6 75.2 A 34.825 34.825 0 0 0 306.955 75.486 Q 301.716 76.194 299.041 78.657 A 8.217 8.217 0 0 0 297.6 80.4 A 3.276 3.276 0 0 1 297.061 81.033 A 2.131 2.131 0 0 1 295.6 81.6 A 3.253 3.253 0 0 1 292.83 79.818 Q 290.961 76.857 290.53 68.975 A 95.167 95.167 0 0 1 290.4 63.8 Q 290.4 46.903 295.266 41.721 A 8.263 8.263 0 0 1 295.8 41.2 A 15.154 15.154 0 0 1 300.456 38.468 Q 304.858 36.766 311.594 36.465 A 67.334 67.334 0 0 1 314.6 36.4 A 61.12 61.12 0 0 1 320.675 36.679 Q 329.181 37.532 332.8 41 Q 337.422 45.43 337.593 55.607 A 47.069 47.069 0 0 1 337.6 56.4 Q 337.6 64.999 335.318 69.414 A 10.311 10.311 0 0 1 334 71.4 A 10.225 10.225 0 0 1 330.151 74.12 Q 326.663 75.6 321.2 75.6 Z\"\n      id=\"1\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n      d=\"M 488 152 L 486 182.4 L 487.6 196.4 Q 487.6 203.355 475.542 203.946 A 47.931 47.931 0 0 1 473.2 204 A 56.968 56.968 0 0 1 462.633 203.11 Q 445.235 199.809 444.082 184.268 A 30.652 30.652 0 0 1 444 182 A 27.097 27.097 0 0 1 444.26 178.46 Q 444.757 174.723 446.203 169.629 A 112.428 112.428 0 0 1 446.8 167.6 Q 449.6 158.4 449.6 151.6 A 19.375 19.375 0 0 0 448.334 144.52 A 17.914 17.914 0 0 0 445.6 139.8 Q 441.6 134.8 434 134.8 A 17.698 17.698 0 0 0 421.169 140.033 A 21.554 21.554 0 0 0 421 140.2 A 30.667 30.667 0 0 0 417.601 144.193 Q 415.922 146.574 415.039 148.993 A 16.522 16.522 0 0 0 414.4 151.2 L 412.8 156.8 Q 410.991 166.149 410.545 184.932 A 562.247 562.247 0 0 0 410.4 198.2 Q 410.4 220.404 410.869 235.338 A 507.581 507.581 0 0 0 411.2 243.8 Q 412 260.4 412.8 266.6 A 400.96 400.96 0 0 1 413.072 268.75 Q 413.53 272.456 413.591 273.682 A 6.578 6.578 0 0 1 413.6 274 A 14.991 14.991 0 0 1 408.817 284.956 Q 406.719 287.037 403.702 288.836 A 38.563 38.563 0 0 1 401.2 290.2 A 59.714 59.714 0 0 1 387.25 295.214 A 50.638 50.638 0 0 1 376.4 296.4 A 44.621 44.621 0 0 1 372.344 296.232 Q 364 295.466 364 291.2 L 366 278.8 A 369.653 369.653 0 0 0 369.188 252.37 Q 370.394 238.56 370.997 222.468 A 923.507 923.507 0 0 0 371.6 188 A 1237.779 1237.779 0 0 0 371.38 163.728 Q 370.789 133.714 368.604 118.036 A 104.607 104.607 0 0 0 367.6 112 Q 367.6 107.503 374.975 107.219 A 26.717 26.717 0 0 1 376 107.2 A 48.509 48.509 0 0 1 386.459 108.245 Q 392.68 109.62 397.137 112.809 A 23.97 23.97 0 0 1 404.8 122 A 4.252 4.252 0 0 0 404.996 122.604 Q 405.411 123.6 406.2 123.6 A 1.484 1.484 0 0 0 406.747 123.452 Q 407.994 122.912 411.092 120.413 A 94.455 94.455 0 0 0 411.6 120 A 47.626 47.626 0 0 1 442.169 109.204 A 59.58 59.58 0 0 1 442.8 109.2 A 60.072 60.072 0 0 1 462.75 112.691 A 69.217 69.217 0 0 1 465.2 113.6 A 33.732 33.732 0 0 1 486.184 137.111 Q 487.943 143.552 487.998 151.487 A 74.114 74.114 0 0 1 488 152 Z\"\n      id=\"2\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n      d=\"M 630.4 169.6 L 629.6 220.8 A 378.48 378.48 0 0 0 630.079 240.663 Q 631.552 268.543 637.561 279.846 A 18.679 18.679 0 0 0 641.2 284.8 A 5.897 5.897 0 0 1 642.236 286.166 A 4.638 4.638 0 0 1 642.8 288.4 A 3.405 3.405 0 0 1 640.83 291.259 Q 636.044 294.173 619.637 294.384 A 204.849 204.849 0 0 1 617 294.4 A 65.592 65.592 0 0 1 607.681 293.797 Q 590.881 291.372 589.6 279.2 Q 589.2 275.6 589.2 264.4 L 590.8 200.4 A 3.485 3.485 0 0 0 590.618 199.225 Q 590.038 197.6 587.6 197.6 Q 568.4 197.6 551.6 208.4 A 44.292 44.292 0 0 0 542.741 215.736 A 29.155 29.155 0 0 0 534.8 236 A 26.732 26.732 0 0 0 535.719 243.164 A 21.118 21.118 0 0 0 539.6 250.8 A 17.329 17.329 0 0 0 543.597 254.515 A 13.91 13.91 0 0 0 551.4 256.8 Q 558.4 256.8 563 254 Q 567.097 251.507 568.18 250.917 A 7.307 7.307 0 0 1 568.4 250.8 A 6.219 6.219 0 0 1 573.337 254.424 Q 574.785 257.193 575.108 262.048 A 44.639 44.639 0 0 1 575.2 265 A 23.898 23.898 0 0 1 566.696 283.628 A 34.903 34.903 0 0 1 562.8 286.6 A 49.912 49.912 0 0 1 548.573 293.203 A 43.91 43.91 0 0 1 536.8 294.8 Q 523.2 294.8 513.4 290 Q 506.456 286.599 502.223 282.595 A 25.221 25.221 0 0 1 499.2 279.2 A 53.648 53.648 0 0 1 493.106 268.394 A 61.842 61.842 0 0 1 492 265.6 Q 489.2 256.4 489.2 249.6 A 72.084 72.084 0 0 1 491.832 229.619 A 54.524 54.524 0 0 1 506.8 204.8 Q 524.4 188 552 180.8 A 384.489 384.489 0 0 0 563.485 178.361 Q 588.675 172.569 590 167.6 Q 591.2 163.2 591.2 152.8 Q 591.2 135.967 577.581 132.5 A 32.419 32.419 0 0 0 569.6 131.6 Q 560.4 131.6 553.2 137.4 A 20.1 20.1 0 0 0 548.407 142.828 A 17.729 17.729 0 0 0 546 152 L 548.4 161.6 A 6.745 6.745 0 0 1 545.149 166.546 Q 542.348 168.402 537.168 169.218 A 46.903 46.903 0 0 1 534 169.6 L 529.6 170 A 38.953 38.953 0 0 1 521.941 169.291 Q 517.302 168.361 513.681 166.209 A 21.977 21.977 0 0 1 510.6 164 Q 503.6 158 503.6 148 Q 503.6 141.6 507.8 133.8 A 40.467 40.467 0 0 1 513.736 125.408 A 35.006 35.006 0 0 1 518.4 121.2 A 34.236 34.236 0 0 1 523.084 118.298 Q 528.988 115.213 538.2 112.6 Q 551.6 108.8 564 108.8 Q 574.22 108.8 580.636 109.344 A 79.276 79.276 0 0 1 583.2 109.6 A 81.699 81.699 0 0 1 587.873 110.304 Q 593.641 111.326 601.8 113.4 A 40.692 40.692 0 0 1 615.708 119.766 A 38.307 38.307 0 0 1 621.4 124.8 Q 629.2 133.2 629.8 142.6 Q 630.4 152 630.4 169.6 Z\"\n      id=\"3\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n      d=\"M 664 277.6 L 668.4 184.4 A 227.823 227.823 0 0 0 667.954 169.563 Q 666.559 148.294 660.8 139.2 Q 658.401 135.203 655.204 133.203 A 15.591 15.591 0 0 0 655.2 133.2 Q 652.975 132.459 652.813 130.342 A 4.468 4.468 0 0 1 652.8 130 A 6.531 6.531 0 0 1 654.598 125.761 Q 658.181 121.571 668.904 117.522 A 116.127 116.127 0 0 1 673.2 116 Q 693.6 109.2 703 109.2 Q 708.844 109.2 711.21 111.056 A 4.019 4.019 0 0 1 712.8 114 A 139.175 139.175 0 0 1 712.723 118.034 Q 712.414 128.144 710.874 154.711 A 5532.626 5532.626 0 0 1 710.6 159.4 Q 708.4 196.8 708.4 238 A 566.385 566.385 0 0 0 708.569 252.354 Q 709.3 281.075 713.2 289.2 A 8.908 8.908 0 0 1 714.061 291.075 A 6.963 6.963 0 0 1 714.4 293.2 A 3.49 3.49 0 0 1 712.521 296.214 Q 709.606 298.054 702.166 298.345 A 75.836 75.836 0 0 1 699.2 298.4 A 63.621 63.621 0 0 1 679.397 295.117 A 83.2 83.2 0 0 1 668 290.4 Q 664.114 288.458 664.003 278.211 A 56.309 56.309 0 0 1 664 277.6 Z M 696 75.6 L 686.4 75.2 A 34.825 34.825 0 0 0 681.755 75.486 Q 676.516 76.194 673.841 78.657 A 8.217 8.217 0 0 0 672.4 80.4 A 3.276 3.276 0 0 1 671.861 81.033 A 2.131 2.131 0 0 1 670.4 81.6 A 3.253 3.253 0 0 1 667.63 79.818 Q 665.761 76.857 665.33 68.975 A 95.167 95.167 0 0 1 665.2 63.8 Q 665.2 46.903 670.066 41.721 A 8.263 8.263 0 0 1 670.6 41.2 A 15.154 15.154 0 0 1 675.256 38.468 Q 679.658 36.766 686.394 36.465 A 67.334 67.334 0 0 1 689.4 36.4 A 61.12 61.12 0 0 1 695.475 36.679 Q 703.981 37.532 707.6 41 Q 712.222 45.43 712.393 55.607 A 47.069 47.069 0 0 1 712.4 56.4 Q 712.4 64.999 710.118 69.414 A 10.311 10.311 0 0 1 708.8 71.4 A 10.225 10.225 0 0 1 704.951 74.12 Q 701.463 75.6 696 75.6 Z\"\n      id=\"4\"\n      vector-effect=\"non-scaling-stroke\"\n    />\n  </g>\n</svg>\n<form id=\"form\" (submit)=\"LoginUser()\">\n  <div class=\"field\">\n    <div class=\"overlay\"></div>\n    <label>Email</label>\n    <input dir=\"auto\" type=\"text\" name=\"email\" [(ngModel)]=\"email\" />\n  </div>\n  <div class=\"field\">\n    <div class=\"overlay\"></div>\n    <label>Password</label>\n    <input dir=\"auto\" type=\"password\" name=\"password\" [(ngModel)]=\"password\" />\n  </div>\n\n  <input id=\"submit\" type=\"submit\" value=\"Login\" />\n</form>\n<div *ngIf=\"iserror\" class=\"error\">\n  <p>{{ error }}</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ViewEncapsulation } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { ProfileService } from '../../services/profile.service';\nimport { Router } from '@angular/router';\nimport { NONE_TYPE } from '@angular/compiler';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  imageSrc: any;\n  isImage: Boolean;\n  imageId: any;\n  postText: String;\n  fileToUpload: File = null;\n  URL: any;\n  imageStyle: any;\n\n  constructor(private router: Router, private ProfileService: ProfileService) {}\n\n  ngOnInit(): void {\n    this.imageStyle = {\n      display: 'none',\n    };\n    if (!localStorage.getItem('zoo')) {\n      localStorage.setItem('zoo', 'no reload');\n      location.reload();\n    } else {\n      localStorage.removeItem('zoo');\n    }\n  }\n  handleFileInput(files: FileList) {\n    this.imageStyle = {\n      display: 'inline',\n    };\n    this.fileToUpload = files.item(0);\n    this.uploadFileToActivity();\n  }\n  uploadFileToActivity() {\n    this.ProfileService.postFile(this.fileToUpload).subscribe(\n      (data) => {\n        this.imageSrc = data;\n        this.URL = 'http://localhost:3000/api/me/image?id=';\n        this.imageId = this.imageSrc.imageId;\n        this.imageSrc = this.URL + this.imageSrc.imageId;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  createPost() {\n    let check;\n    if (this.imageStyle.display == 'none') {\n      check = false;\n    } else {\n      check = true;\n    }\n    const newPost = {\n      isImage: check,\n      imageId: this.imageId,\n      postText: this.postText,\n    };\n    this.ProfileService.createPost(newPost).subscribe((data) => {\n      check;\n      check = data;\n      if (check.success) {\n        location.reload();\n      } else {\n        console.log('failed');\n      }\n    });\n  }\n  navigateHome() {\n    console.log('asas');\n    this.router.navigate(['']);\n  }\n}\n","<div class=\"sidenav\">\n  <svg\n    width=\"250\"\n    height=\"150\"\n    viewBox=\"0 0 714.4 298.4\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    id=\"logoReg\"\n    style=\"cursor: pointer;\"\n    (click)=\"navigateHome()\"\n  >\n    <g\n      id=\"svgGroup\"\n      stroke-linecap=\"round\"\n      fill-rule=\"evenodd\"\n      font-size=\"9pt\"\n      stroke=\"#000\"\n      stroke-width=\"0.25mm\"\n      fill=\"rgba(#bab1d6, 0.6)\"\n      style=\"stroke: white; stroke-width: 0.25mm; fill: rgba(#bab1d6, 0.6);\"\n    >\n      <path\n        d=\"M 11.6 134 L 9.6 58.4 Q 9.6 40.811 5.781 30.479 A 39.104 39.104 0 0 0 5.6 30 Q 1.6 19.6 1.6 18.8 A 6.814 6.814 0 0 1 4.204 13.721 Q 8.95 9.443 22.346 6.446 A 144.97 144.97 0 0 1 28.6 5.2 Q 50.755 1.262 64.292 0.555 A 106.086 106.086 0 0 1 69.8 0.4 Q 84 0.4 85.2 7.2 Q 110.4 119.6 127.6 163.2 A 20.425 20.425 0 0 0 128.421 164.952 Q 129.973 167.862 131.641 167.994 A 2.012 2.012 0 0 0 131.8 168 A 2.835 2.835 0 0 0 133.64 167.286 Q 134.713 166.397 135.6 164.4 Q 162.4 88.8 182.8 14.8 A 10.275 10.275 0 0 1 186.085 10.124 Q 187.444 8.991 189.285 8.08 A 22.524 22.524 0 0 1 190.8 7.4 Q 195.625 5.44 205.793 3.594 A 253.913 253.913 0 0 1 213 2.4 Q 228.8 0 244.4 0 A 58.111 58.111 0 0 1 249.302 0.189 Q 260 1.1 260 6.4 A 1.608 1.608 0 0 1 259.981 6.585 Q 259.869 7.39 259.084 11.222 A 720.765 720.765 0 0 1 258.8 12.6 Q 257.975 16.588 257.15 21.804 A 338.363 338.363 0 0 0 256.4 26.8 A 1601.181 1601.181 0 0 0 255.444 33.607 Q 255.022 36.654 254.561 40.052 A 3200.023 3200.023 0 0 0 253.6 47.2 Q 250 74.8 249 110.6 Q 248 146.4 248 182.4 L 248.8 224.4 Q 248.8 246.556 251.049 258.887 A 55.67 55.67 0 0 0 252.6 265.4 Q 256.4 277.6 256.4 279.4 A 2.984 2.984 0 0 1 256.099 280.646 Q 255.481 281.988 253.6 283.6 A 38.953 38.953 0 0 1 241.687 289.982 Q 236.094 291.904 229.194 292.805 A 102.153 102.153 0 0 1 216 293.6 Q 200 293.6 198 282.8 Q 197.088 278.546 196.869 270.481 A 202.597 202.597 0 0 1 196.8 265 Q 196.8 254.561 198.557 207.072 A 14151.852 14151.852 0 0 1 199.2 190 Q 201.51 129.546 201.597 100.785 A 728.222 728.222 0 0 0 201.6 98.6 Q 201.6 75.307 199.477 70.985 A 1.384 1.384 0 0 0 198.4 70 A 1.201 1.201 0 0 0 198.267 70.007 Q 198 70.037 198 70.2 A 0.142 0.142 0 0 1 197.945 70.296 Q 197.742 70.486 196.8 70.8 Q 195.6 71.2 190.6 83.2 A 149.579 149.579 0 0 0 188.381 88.938 Q 182.825 104.05 170.8 142.4 Q 156 189.6 144 230.6 Q 132.677 269.289 130.97 274.319 A 16.882 16.882 0 0 1 130.8 274.8 A 18.138 18.138 0 0 1 126.774 281.004 Q 123.334 284.38 118.057 285.276 A 24.217 24.217 0 0 1 114 285.6 A 13.196 13.196 0 0 1 109.365 284.817 A 11.562 11.562 0 0 1 104.4 281.2 Q 94.6 235.875 73.076 160.772 A 4770.388 4770.388 0 0 0 58.8 112 L 47.6 75.6 A 9.706 9.706 0 0 0 47.3 74.921 Q 46.77 73.844 46.24 73.645 A 0.679 0.679 0 0 0 46 73.6 Q 44.255 73.6 43.424 75.732 A 7.541 7.541 0 0 0 43.2 76.4 A 509.99 509.99 0 0 0 42.577 90.178 Q 41.6 119.069 41.6 178.6 Q 41.6 254.8 47.2 274.8 A 2.984 2.984 0 0 1 47.411 275.379 Q 47.573 275.999 47.596 276.898 A 11.896 11.896 0 0 1 47.6 277.2 A 9.716 9.716 0 0 1 43.764 284.92 Q 40.484 287.649 34.4 289.4 Q 22.602 292.797 12.881 293.158 A 61.513 61.513 0 0 1 10.6 293.2 A 35.343 35.343 0 0 1 7.133 293.045 Q 3.728 292.708 1.949 291.634 A 3.617 3.617 0 0 1 0 288.4 A 1.038 1.038 0 0 1 0.031 288.213 Q 0.219 287.389 1.527 283.426 A 525.892 525.892 0 0 1 2 282 A 137.444 137.444 0 0 0 5.266 267.861 Q 7.779 254.017 9.102 234.958 A 531.788 531.788 0 0 0 9.8 222.8 A 1561.178 1561.178 0 0 0 11.031 186.707 Q 11.458 168.271 11.564 147.841 A 2648.453 2648.453 0 0 0 11.6 134 Z\"\n        id=\"0\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 289.2 277.6 L 293.6 184.4 A 227.823 227.823 0 0 0 293.154 169.563 Q 291.759 148.294 286 139.2 Q 283.601 135.203 280.404 133.203 A 15.591 15.591 0 0 0 280.4 133.2 Q 278.175 132.459 278.013 130.342 A 4.468 4.468 0 0 1 278 130 A 6.531 6.531 0 0 1 279.798 125.761 Q 283.381 121.571 294.104 117.522 A 116.127 116.127 0 0 1 298.4 116 Q 318.8 109.2 328.2 109.2 Q 334.044 109.2 336.41 111.056 A 4.019 4.019 0 0 1 338 114 A 139.175 139.175 0 0 1 337.923 118.034 Q 337.614 128.144 336.074 154.711 A 5532.626 5532.626 0 0 1 335.8 159.4 Q 333.6 196.8 333.6 238 A 566.385 566.385 0 0 0 333.769 252.354 Q 334.5 281.075 338.4 289.2 A 8.908 8.908 0 0 1 339.261 291.075 A 6.963 6.963 0 0 1 339.6 293.2 A 3.49 3.49 0 0 1 337.721 296.214 Q 334.806 298.054 327.366 298.345 A 75.836 75.836 0 0 1 324.4 298.4 A 63.621 63.621 0 0 1 304.597 295.117 A 83.2 83.2 0 0 1 293.2 290.4 Q 289.314 288.458 289.203 278.211 A 56.309 56.309 0 0 1 289.2 277.6 Z M 321.2 75.6 L 311.6 75.2 A 34.825 34.825 0 0 0 306.955 75.486 Q 301.716 76.194 299.041 78.657 A 8.217 8.217 0 0 0 297.6 80.4 A 3.276 3.276 0 0 1 297.061 81.033 A 2.131 2.131 0 0 1 295.6 81.6 A 3.253 3.253 0 0 1 292.83 79.818 Q 290.961 76.857 290.53 68.975 A 95.167 95.167 0 0 1 290.4 63.8 Q 290.4 46.903 295.266 41.721 A 8.263 8.263 0 0 1 295.8 41.2 A 15.154 15.154 0 0 1 300.456 38.468 Q 304.858 36.766 311.594 36.465 A 67.334 67.334 0 0 1 314.6 36.4 A 61.12 61.12 0 0 1 320.675 36.679 Q 329.181 37.532 332.8 41 Q 337.422 45.43 337.593 55.607 A 47.069 47.069 0 0 1 337.6 56.4 Q 337.6 64.999 335.318 69.414 A 10.311 10.311 0 0 1 334 71.4 A 10.225 10.225 0 0 1 330.151 74.12 Q 326.663 75.6 321.2 75.6 Z\"\n        id=\"1\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 488 152 L 486 182.4 L 487.6 196.4 Q 487.6 203.355 475.542 203.946 A 47.931 47.931 0 0 1 473.2 204 A 56.968 56.968 0 0 1 462.633 203.11 Q 445.235 199.809 444.082 184.268 A 30.652 30.652 0 0 1 444 182 A 27.097 27.097 0 0 1 444.26 178.46 Q 444.757 174.723 446.203 169.629 A 112.428 112.428 0 0 1 446.8 167.6 Q 449.6 158.4 449.6 151.6 A 19.375 19.375 0 0 0 448.334 144.52 A 17.914 17.914 0 0 0 445.6 139.8 Q 441.6 134.8 434 134.8 A 17.698 17.698 0 0 0 421.169 140.033 A 21.554 21.554 0 0 0 421 140.2 A 30.667 30.667 0 0 0 417.601 144.193 Q 415.922 146.574 415.039 148.993 A 16.522 16.522 0 0 0 414.4 151.2 L 412.8 156.8 Q 410.991 166.149 410.545 184.932 A 562.247 562.247 0 0 0 410.4 198.2 Q 410.4 220.404 410.869 235.338 A 507.581 507.581 0 0 0 411.2 243.8 Q 412 260.4 412.8 266.6 A 400.96 400.96 0 0 1 413.072 268.75 Q 413.53 272.456 413.591 273.682 A 6.578 6.578 0 0 1 413.6 274 A 14.991 14.991 0 0 1 408.817 284.956 Q 406.719 287.037 403.702 288.836 A 38.563 38.563 0 0 1 401.2 290.2 A 59.714 59.714 0 0 1 387.25 295.214 A 50.638 50.638 0 0 1 376.4 296.4 A 44.621 44.621 0 0 1 372.344 296.232 Q 364 295.466 364 291.2 L 366 278.8 A 369.653 369.653 0 0 0 369.188 252.37 Q 370.394 238.56 370.997 222.468 A 923.507 923.507 0 0 0 371.6 188 A 1237.779 1237.779 0 0 0 371.38 163.728 Q 370.789 133.714 368.604 118.036 A 104.607 104.607 0 0 0 367.6 112 Q 367.6 107.503 374.975 107.219 A 26.717 26.717 0 0 1 376 107.2 A 48.509 48.509 0 0 1 386.459 108.245 Q 392.68 109.62 397.137 112.809 A 23.97 23.97 0 0 1 404.8 122 A 4.252 4.252 0 0 0 404.996 122.604 Q 405.411 123.6 406.2 123.6 A 1.484 1.484 0 0 0 406.747 123.452 Q 407.994 122.912 411.092 120.413 A 94.455 94.455 0 0 0 411.6 120 A 47.626 47.626 0 0 1 442.169 109.204 A 59.58 59.58 0 0 1 442.8 109.2 A 60.072 60.072 0 0 1 462.75 112.691 A 69.217 69.217 0 0 1 465.2 113.6 A 33.732 33.732 0 0 1 486.184 137.111 Q 487.943 143.552 487.998 151.487 A 74.114 74.114 0 0 1 488 152 Z\"\n        id=\"2\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 630.4 169.6 L 629.6 220.8 A 378.48 378.48 0 0 0 630.079 240.663 Q 631.552 268.543 637.561 279.846 A 18.679 18.679 0 0 0 641.2 284.8 A 5.897 5.897 0 0 1 642.236 286.166 A 4.638 4.638 0 0 1 642.8 288.4 A 3.405 3.405 0 0 1 640.83 291.259 Q 636.044 294.173 619.637 294.384 A 204.849 204.849 0 0 1 617 294.4 A 65.592 65.592 0 0 1 607.681 293.797 Q 590.881 291.372 589.6 279.2 Q 589.2 275.6 589.2 264.4 L 590.8 200.4 A 3.485 3.485 0 0 0 590.618 199.225 Q 590.038 197.6 587.6 197.6 Q 568.4 197.6 551.6 208.4 A 44.292 44.292 0 0 0 542.741 215.736 A 29.155 29.155 0 0 0 534.8 236 A 26.732 26.732 0 0 0 535.719 243.164 A 21.118 21.118 0 0 0 539.6 250.8 A 17.329 17.329 0 0 0 543.597 254.515 A 13.91 13.91 0 0 0 551.4 256.8 Q 558.4 256.8 563 254 Q 567.097 251.507 568.18 250.917 A 7.307 7.307 0 0 1 568.4 250.8 A 6.219 6.219 0 0 1 573.337 254.424 Q 574.785 257.193 575.108 262.048 A 44.639 44.639 0 0 1 575.2 265 A 23.898 23.898 0 0 1 566.696 283.628 A 34.903 34.903 0 0 1 562.8 286.6 A 49.912 49.912 0 0 1 548.573 293.203 A 43.91 43.91 0 0 1 536.8 294.8 Q 523.2 294.8 513.4 290 Q 506.456 286.599 502.223 282.595 A 25.221 25.221 0 0 1 499.2 279.2 A 53.648 53.648 0 0 1 493.106 268.394 A 61.842 61.842 0 0 1 492 265.6 Q 489.2 256.4 489.2 249.6 A 72.084 72.084 0 0 1 491.832 229.619 A 54.524 54.524 0 0 1 506.8 204.8 Q 524.4 188 552 180.8 A 384.489 384.489 0 0 0 563.485 178.361 Q 588.675 172.569 590 167.6 Q 591.2 163.2 591.2 152.8 Q 591.2 135.967 577.581 132.5 A 32.419 32.419 0 0 0 569.6 131.6 Q 560.4 131.6 553.2 137.4 A 20.1 20.1 0 0 0 548.407 142.828 A 17.729 17.729 0 0 0 546 152 L 548.4 161.6 A 6.745 6.745 0 0 1 545.149 166.546 Q 542.348 168.402 537.168 169.218 A 46.903 46.903 0 0 1 534 169.6 L 529.6 170 A 38.953 38.953 0 0 1 521.941 169.291 Q 517.302 168.361 513.681 166.209 A 21.977 21.977 0 0 1 510.6 164 Q 503.6 158 503.6 148 Q 503.6 141.6 507.8 133.8 A 40.467 40.467 0 0 1 513.736 125.408 A 35.006 35.006 0 0 1 518.4 121.2 A 34.236 34.236 0 0 1 523.084 118.298 Q 528.988 115.213 538.2 112.6 Q 551.6 108.8 564 108.8 Q 574.22 108.8 580.636 109.344 A 79.276 79.276 0 0 1 583.2 109.6 A 81.699 81.699 0 0 1 587.873 110.304 Q 593.641 111.326 601.8 113.4 A 40.692 40.692 0 0 1 615.708 119.766 A 38.307 38.307 0 0 1 621.4 124.8 Q 629.2 133.2 629.8 142.6 Q 630.4 152 630.4 169.6 Z\"\n        id=\"3\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 664 277.6 L 668.4 184.4 A 227.823 227.823 0 0 0 667.954 169.563 Q 666.559 148.294 660.8 139.2 Q 658.401 135.203 655.204 133.203 A 15.591 15.591 0 0 0 655.2 133.2 Q 652.975 132.459 652.813 130.342 A 4.468 4.468 0 0 1 652.8 130 A 6.531 6.531 0 0 1 654.598 125.761 Q 658.181 121.571 668.904 117.522 A 116.127 116.127 0 0 1 673.2 116 Q 693.6 109.2 703 109.2 Q 708.844 109.2 711.21 111.056 A 4.019 4.019 0 0 1 712.8 114 A 139.175 139.175 0 0 1 712.723 118.034 Q 712.414 128.144 710.874 154.711 A 5532.626 5532.626 0 0 1 710.6 159.4 Q 708.4 196.8 708.4 238 A 566.385 566.385 0 0 0 708.569 252.354 Q 709.3 281.075 713.2 289.2 A 8.908 8.908 0 0 1 714.061 291.075 A 6.963 6.963 0 0 1 714.4 293.2 A 3.49 3.49 0 0 1 712.521 296.214 Q 709.606 298.054 702.166 298.345 A 75.836 75.836 0 0 1 699.2 298.4 A 63.621 63.621 0 0 1 679.397 295.117 A 83.2 83.2 0 0 1 668 290.4 Q 664.114 288.458 664.003 278.211 A 56.309 56.309 0 0 1 664 277.6 Z M 696 75.6 L 686.4 75.2 A 34.825 34.825 0 0 0 681.755 75.486 Q 676.516 76.194 673.841 78.657 A 8.217 8.217 0 0 0 672.4 80.4 A 3.276 3.276 0 0 1 671.861 81.033 A 2.131 2.131 0 0 1 670.4 81.6 A 3.253 3.253 0 0 1 667.63 79.818 Q 665.761 76.857 665.33 68.975 A 95.167 95.167 0 0 1 665.2 63.8 Q 665.2 46.903 670.066 41.721 A 8.263 8.263 0 0 1 670.6 41.2 A 15.154 15.154 0 0 1 675.256 38.468 Q 679.658 36.766 686.394 36.465 A 67.334 67.334 0 0 1 689.4 36.4 A 61.12 61.12 0 0 1 695.475 36.679 Q 703.981 37.532 707.6 41 Q 712.222 45.43 712.393 55.607 A 47.069 47.069 0 0 1 712.4 56.4 Q 712.4 64.999 710.118 69.414 A 10.311 10.311 0 0 1 708.8 71.4 A 10.225 10.225 0 0 1 704.951 74.12 Q 701.463 75.6 696 75.6 Z\"\n        id=\"4\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n    </g>\n  </svg>\n  <a class=\"active\" routerLink=\"/profile/createPost\">Create Post</a>\n  <a routerLink=\"/profile/editPosts\">Edit Post</a>\n  <a routerLink=\"/profile/editProfile\">Edit Profile Info</a>\n  <a routerLink=\"/profile/comments\">See Comments</a>\n</div>\n\n<div class=\"content\">\n  <div class=\"postcard\">\n    <div class=\"post\">\n      <form>\n        <textarea\n          name=\"comment\"\n          id=\"comment\"\n          rows=\"10\"\n          tabindex=\"4\"\n          dir=\"auto\"\n          required=\"required\"\n          [(ngModel)]=\"postText\"\n        ></textarea>\n        <br />\n        <input\n          type=\"file\"\n          name=\"file\"\n          width=\"30px\"\n          id=\"file\"\n          class=\"inputfile\"\n          (change)=\"handleFileInput($event.target.files)\"\n        />\n        <label for=\"file\">Choose an Image</label>\n      </form>\n      <input id=\"submit\" type=\"submit\" value=\"POST\" (click)=\"createPost()\" />\n      <div [ngStyle]=\"imageStyle\" class=\"postImage\">\n        <img src=\"{{ imageSrc }}\" />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ViewEncapsulation } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { ValidationService } from '../../services/validation.service';\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  userName: String;\n  blogName: String;\n  password: String;\n  email: String;\n  res: any;\n  error: any;\n  iserror: any;\n  constructor(\n    private AuthService: AuthService,\n    private router: Router,\n    private ValidationService: ValidationService\n  ) {}\n\n  ngOnInit(): void {\n    this.iserror = false;\n    this.error = '';\n    this.userName = '';\n    this.blogName = '';\n    this.password = '';\n    this.email = '';\n  }\n  async RegisterUser() {\n    let valid = await this.ValidationService.validateRegister(\n      this.userName,\n      this.password,\n      this.email,\n      this.blogName\n    );\n    if (valid.success) {\n      this.ValidationService.validateEmail(this.email).subscribe((data) => {\n        let checkExistMail: any;\n        checkExistMail = data;\n        console.log(checkExistMail);\n        if (!checkExistMail.success) {\n          this.iserror = true;\n          this.error = 'Email is already existed';\n        } else {\n          this.ValidationService.validateBlog(this.blogName).subscribe(\n            (data) => {\n              let checkExistBlog: any;\n              checkExistBlog = data;\n              console.log(checkExistBlog);\n              if (!checkExistBlog.success) {\n                this.iserror = true;\n                this.error = 'Blog Name is already existed';\n              } else {\n                const user = {\n                  userName: this.userName,\n                  blogName: this.blogName,\n                  password: this.password,\n                  email: this.email,\n                };\n\n                this.AuthService.userRegister(user).subscribe((data) => {\n                  this.res = data;\n                  if (this.res.success) {\n                    this.router.navigate(['/login']);\n                  }\n                });\n              }\n            }\n          );\n        }\n      });\n    } else {\n      this.iserror = true;\n      this.error = valid.text;\n    }\n  }\n}\n","<div class=\"wrapper\">\n  <svg\n    width=\"700.4\"\n    height=\"150\"\n    viewBox=\"0 0 714.4 298.4\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    id=\"logoReg\"\n  >\n    <g\n      id=\"svgGroup\"\n      stroke-linecap=\"round\"\n      fill-rule=\"evenodd\"\n      font-size=\"9pt\"\n      stroke=\"#000\"\n      stroke-width=\"0.25mm\"\n      fill=\"none\"\n      style=\"stroke: white; stroke-width: 10; fill: none;\"\n    >\n      <path\n        d=\"M 11.6 134 L 9.6 58.4 Q 9.6 40.811 5.781 30.479 A 39.104 39.104 0 0 0 5.6 30 Q 1.6 19.6 1.6 18.8 A 6.814 6.814 0 0 1 4.204 13.721 Q 8.95 9.443 22.346 6.446 A 144.97 144.97 0 0 1 28.6 5.2 Q 50.755 1.262 64.292 0.555 A 106.086 106.086 0 0 1 69.8 0.4 Q 84 0.4 85.2 7.2 Q 110.4 119.6 127.6 163.2 A 20.425 20.425 0 0 0 128.421 164.952 Q 129.973 167.862 131.641 167.994 A 2.012 2.012 0 0 0 131.8 168 A 2.835 2.835 0 0 0 133.64 167.286 Q 134.713 166.397 135.6 164.4 Q 162.4 88.8 182.8 14.8 A 10.275 10.275 0 0 1 186.085 10.124 Q 187.444 8.991 189.285 8.08 A 22.524 22.524 0 0 1 190.8 7.4 Q 195.625 5.44 205.793 3.594 A 253.913 253.913 0 0 1 213 2.4 Q 228.8 0 244.4 0 A 58.111 58.111 0 0 1 249.302 0.189 Q 260 1.1 260 6.4 A 1.608 1.608 0 0 1 259.981 6.585 Q 259.869 7.39 259.084 11.222 A 720.765 720.765 0 0 1 258.8 12.6 Q 257.975 16.588 257.15 21.804 A 338.363 338.363 0 0 0 256.4 26.8 A 1601.181 1601.181 0 0 0 255.444 33.607 Q 255.022 36.654 254.561 40.052 A 3200.023 3200.023 0 0 0 253.6 47.2 Q 250 74.8 249 110.6 Q 248 146.4 248 182.4 L 248.8 224.4 Q 248.8 246.556 251.049 258.887 A 55.67 55.67 0 0 0 252.6 265.4 Q 256.4 277.6 256.4 279.4 A 2.984 2.984 0 0 1 256.099 280.646 Q 255.481 281.988 253.6 283.6 A 38.953 38.953 0 0 1 241.687 289.982 Q 236.094 291.904 229.194 292.805 A 102.153 102.153 0 0 1 216 293.6 Q 200 293.6 198 282.8 Q 197.088 278.546 196.869 270.481 A 202.597 202.597 0 0 1 196.8 265 Q 196.8 254.561 198.557 207.072 A 14151.852 14151.852 0 0 1 199.2 190 Q 201.51 129.546 201.597 100.785 A 728.222 728.222 0 0 0 201.6 98.6 Q 201.6 75.307 199.477 70.985 A 1.384 1.384 0 0 0 198.4 70 A 1.201 1.201 0 0 0 198.267 70.007 Q 198 70.037 198 70.2 A 0.142 0.142 0 0 1 197.945 70.296 Q 197.742 70.486 196.8 70.8 Q 195.6 71.2 190.6 83.2 A 149.579 149.579 0 0 0 188.381 88.938 Q 182.825 104.05 170.8 142.4 Q 156 189.6 144 230.6 Q 132.677 269.289 130.97 274.319 A 16.882 16.882 0 0 1 130.8 274.8 A 18.138 18.138 0 0 1 126.774 281.004 Q 123.334 284.38 118.057 285.276 A 24.217 24.217 0 0 1 114 285.6 A 13.196 13.196 0 0 1 109.365 284.817 A 11.562 11.562 0 0 1 104.4 281.2 Q 94.6 235.875 73.076 160.772 A 4770.388 4770.388 0 0 0 58.8 112 L 47.6 75.6 A 9.706 9.706 0 0 0 47.3 74.921 Q 46.77 73.844 46.24 73.645 A 0.679 0.679 0 0 0 46 73.6 Q 44.255 73.6 43.424 75.732 A 7.541 7.541 0 0 0 43.2 76.4 A 509.99 509.99 0 0 0 42.577 90.178 Q 41.6 119.069 41.6 178.6 Q 41.6 254.8 47.2 274.8 A 2.984 2.984 0 0 1 47.411 275.379 Q 47.573 275.999 47.596 276.898 A 11.896 11.896 0 0 1 47.6 277.2 A 9.716 9.716 0 0 1 43.764 284.92 Q 40.484 287.649 34.4 289.4 Q 22.602 292.797 12.881 293.158 A 61.513 61.513 0 0 1 10.6 293.2 A 35.343 35.343 0 0 1 7.133 293.045 Q 3.728 292.708 1.949 291.634 A 3.617 3.617 0 0 1 0 288.4 A 1.038 1.038 0 0 1 0.031 288.213 Q 0.219 287.389 1.527 283.426 A 525.892 525.892 0 0 1 2 282 A 137.444 137.444 0 0 0 5.266 267.861 Q 7.779 254.017 9.102 234.958 A 531.788 531.788 0 0 0 9.8 222.8 A 1561.178 1561.178 0 0 0 11.031 186.707 Q 11.458 168.271 11.564 147.841 A 2648.453 2648.453 0 0 0 11.6 134 Z\"\n        id=\"0\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 289.2 277.6 L 293.6 184.4 A 227.823 227.823 0 0 0 293.154 169.563 Q 291.759 148.294 286 139.2 Q 283.601 135.203 280.404 133.203 A 15.591 15.591 0 0 0 280.4 133.2 Q 278.175 132.459 278.013 130.342 A 4.468 4.468 0 0 1 278 130 A 6.531 6.531 0 0 1 279.798 125.761 Q 283.381 121.571 294.104 117.522 A 116.127 116.127 0 0 1 298.4 116 Q 318.8 109.2 328.2 109.2 Q 334.044 109.2 336.41 111.056 A 4.019 4.019 0 0 1 338 114 A 139.175 139.175 0 0 1 337.923 118.034 Q 337.614 128.144 336.074 154.711 A 5532.626 5532.626 0 0 1 335.8 159.4 Q 333.6 196.8 333.6 238 A 566.385 566.385 0 0 0 333.769 252.354 Q 334.5 281.075 338.4 289.2 A 8.908 8.908 0 0 1 339.261 291.075 A 6.963 6.963 0 0 1 339.6 293.2 A 3.49 3.49 0 0 1 337.721 296.214 Q 334.806 298.054 327.366 298.345 A 75.836 75.836 0 0 1 324.4 298.4 A 63.621 63.621 0 0 1 304.597 295.117 A 83.2 83.2 0 0 1 293.2 290.4 Q 289.314 288.458 289.203 278.211 A 56.309 56.309 0 0 1 289.2 277.6 Z M 321.2 75.6 L 311.6 75.2 A 34.825 34.825 0 0 0 306.955 75.486 Q 301.716 76.194 299.041 78.657 A 8.217 8.217 0 0 0 297.6 80.4 A 3.276 3.276 0 0 1 297.061 81.033 A 2.131 2.131 0 0 1 295.6 81.6 A 3.253 3.253 0 0 1 292.83 79.818 Q 290.961 76.857 290.53 68.975 A 95.167 95.167 0 0 1 290.4 63.8 Q 290.4 46.903 295.266 41.721 A 8.263 8.263 0 0 1 295.8 41.2 A 15.154 15.154 0 0 1 300.456 38.468 Q 304.858 36.766 311.594 36.465 A 67.334 67.334 0 0 1 314.6 36.4 A 61.12 61.12 0 0 1 320.675 36.679 Q 329.181 37.532 332.8 41 Q 337.422 45.43 337.593 55.607 A 47.069 47.069 0 0 1 337.6 56.4 Q 337.6 64.999 335.318 69.414 A 10.311 10.311 0 0 1 334 71.4 A 10.225 10.225 0 0 1 330.151 74.12 Q 326.663 75.6 321.2 75.6 Z\"\n        id=\"1\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 488 152 L 486 182.4 L 487.6 196.4 Q 487.6 203.355 475.542 203.946 A 47.931 47.931 0 0 1 473.2 204 A 56.968 56.968 0 0 1 462.633 203.11 Q 445.235 199.809 444.082 184.268 A 30.652 30.652 0 0 1 444 182 A 27.097 27.097 0 0 1 444.26 178.46 Q 444.757 174.723 446.203 169.629 A 112.428 112.428 0 0 1 446.8 167.6 Q 449.6 158.4 449.6 151.6 A 19.375 19.375 0 0 0 448.334 144.52 A 17.914 17.914 0 0 0 445.6 139.8 Q 441.6 134.8 434 134.8 A 17.698 17.698 0 0 0 421.169 140.033 A 21.554 21.554 0 0 0 421 140.2 A 30.667 30.667 0 0 0 417.601 144.193 Q 415.922 146.574 415.039 148.993 A 16.522 16.522 0 0 0 414.4 151.2 L 412.8 156.8 Q 410.991 166.149 410.545 184.932 A 562.247 562.247 0 0 0 410.4 198.2 Q 410.4 220.404 410.869 235.338 A 507.581 507.581 0 0 0 411.2 243.8 Q 412 260.4 412.8 266.6 A 400.96 400.96 0 0 1 413.072 268.75 Q 413.53 272.456 413.591 273.682 A 6.578 6.578 0 0 1 413.6 274 A 14.991 14.991 0 0 1 408.817 284.956 Q 406.719 287.037 403.702 288.836 A 38.563 38.563 0 0 1 401.2 290.2 A 59.714 59.714 0 0 1 387.25 295.214 A 50.638 50.638 0 0 1 376.4 296.4 A 44.621 44.621 0 0 1 372.344 296.232 Q 364 295.466 364 291.2 L 366 278.8 A 369.653 369.653 0 0 0 369.188 252.37 Q 370.394 238.56 370.997 222.468 A 923.507 923.507 0 0 0 371.6 188 A 1237.779 1237.779 0 0 0 371.38 163.728 Q 370.789 133.714 368.604 118.036 A 104.607 104.607 0 0 0 367.6 112 Q 367.6 107.503 374.975 107.219 A 26.717 26.717 0 0 1 376 107.2 A 48.509 48.509 0 0 1 386.459 108.245 Q 392.68 109.62 397.137 112.809 A 23.97 23.97 0 0 1 404.8 122 A 4.252 4.252 0 0 0 404.996 122.604 Q 405.411 123.6 406.2 123.6 A 1.484 1.484 0 0 0 406.747 123.452 Q 407.994 122.912 411.092 120.413 A 94.455 94.455 0 0 0 411.6 120 A 47.626 47.626 0 0 1 442.169 109.204 A 59.58 59.58 0 0 1 442.8 109.2 A 60.072 60.072 0 0 1 462.75 112.691 A 69.217 69.217 0 0 1 465.2 113.6 A 33.732 33.732 0 0 1 486.184 137.111 Q 487.943 143.552 487.998 151.487 A 74.114 74.114 0 0 1 488 152 Z\"\n        id=\"2\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 630.4 169.6 L 629.6 220.8 A 378.48 378.48 0 0 0 630.079 240.663 Q 631.552 268.543 637.561 279.846 A 18.679 18.679 0 0 0 641.2 284.8 A 5.897 5.897 0 0 1 642.236 286.166 A 4.638 4.638 0 0 1 642.8 288.4 A 3.405 3.405 0 0 1 640.83 291.259 Q 636.044 294.173 619.637 294.384 A 204.849 204.849 0 0 1 617 294.4 A 65.592 65.592 0 0 1 607.681 293.797 Q 590.881 291.372 589.6 279.2 Q 589.2 275.6 589.2 264.4 L 590.8 200.4 A 3.485 3.485 0 0 0 590.618 199.225 Q 590.038 197.6 587.6 197.6 Q 568.4 197.6 551.6 208.4 A 44.292 44.292 0 0 0 542.741 215.736 A 29.155 29.155 0 0 0 534.8 236 A 26.732 26.732 0 0 0 535.719 243.164 A 21.118 21.118 0 0 0 539.6 250.8 A 17.329 17.329 0 0 0 543.597 254.515 A 13.91 13.91 0 0 0 551.4 256.8 Q 558.4 256.8 563 254 Q 567.097 251.507 568.18 250.917 A 7.307 7.307 0 0 1 568.4 250.8 A 6.219 6.219 0 0 1 573.337 254.424 Q 574.785 257.193 575.108 262.048 A 44.639 44.639 0 0 1 575.2 265 A 23.898 23.898 0 0 1 566.696 283.628 A 34.903 34.903 0 0 1 562.8 286.6 A 49.912 49.912 0 0 1 548.573 293.203 A 43.91 43.91 0 0 1 536.8 294.8 Q 523.2 294.8 513.4 290 Q 506.456 286.599 502.223 282.595 A 25.221 25.221 0 0 1 499.2 279.2 A 53.648 53.648 0 0 1 493.106 268.394 A 61.842 61.842 0 0 1 492 265.6 Q 489.2 256.4 489.2 249.6 A 72.084 72.084 0 0 1 491.832 229.619 A 54.524 54.524 0 0 1 506.8 204.8 Q 524.4 188 552 180.8 A 384.489 384.489 0 0 0 563.485 178.361 Q 588.675 172.569 590 167.6 Q 591.2 163.2 591.2 152.8 Q 591.2 135.967 577.581 132.5 A 32.419 32.419 0 0 0 569.6 131.6 Q 560.4 131.6 553.2 137.4 A 20.1 20.1 0 0 0 548.407 142.828 A 17.729 17.729 0 0 0 546 152 L 548.4 161.6 A 6.745 6.745 0 0 1 545.149 166.546 Q 542.348 168.402 537.168 169.218 A 46.903 46.903 0 0 1 534 169.6 L 529.6 170 A 38.953 38.953 0 0 1 521.941 169.291 Q 517.302 168.361 513.681 166.209 A 21.977 21.977 0 0 1 510.6 164 Q 503.6 158 503.6 148 Q 503.6 141.6 507.8 133.8 A 40.467 40.467 0 0 1 513.736 125.408 A 35.006 35.006 0 0 1 518.4 121.2 A 34.236 34.236 0 0 1 523.084 118.298 Q 528.988 115.213 538.2 112.6 Q 551.6 108.8 564 108.8 Q 574.22 108.8 580.636 109.344 A 79.276 79.276 0 0 1 583.2 109.6 A 81.699 81.699 0 0 1 587.873 110.304 Q 593.641 111.326 601.8 113.4 A 40.692 40.692 0 0 1 615.708 119.766 A 38.307 38.307 0 0 1 621.4 124.8 Q 629.2 133.2 629.8 142.6 Q 630.4 152 630.4 169.6 Z\"\n        id=\"3\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 664 277.6 L 668.4 184.4 A 227.823 227.823 0 0 0 667.954 169.563 Q 666.559 148.294 660.8 139.2 Q 658.401 135.203 655.204 133.203 A 15.591 15.591 0 0 0 655.2 133.2 Q 652.975 132.459 652.813 130.342 A 4.468 4.468 0 0 1 652.8 130 A 6.531 6.531 0 0 1 654.598 125.761 Q 658.181 121.571 668.904 117.522 A 116.127 116.127 0 0 1 673.2 116 Q 693.6 109.2 703 109.2 Q 708.844 109.2 711.21 111.056 A 4.019 4.019 0 0 1 712.8 114 A 139.175 139.175 0 0 1 712.723 118.034 Q 712.414 128.144 710.874 154.711 A 5532.626 5532.626 0 0 1 710.6 159.4 Q 708.4 196.8 708.4 238 A 566.385 566.385 0 0 0 708.569 252.354 Q 709.3 281.075 713.2 289.2 A 8.908 8.908 0 0 1 714.061 291.075 A 6.963 6.963 0 0 1 714.4 293.2 A 3.49 3.49 0 0 1 712.521 296.214 Q 709.606 298.054 702.166 298.345 A 75.836 75.836 0 0 1 699.2 298.4 A 63.621 63.621 0 0 1 679.397 295.117 A 83.2 83.2 0 0 1 668 290.4 Q 664.114 288.458 664.003 278.211 A 56.309 56.309 0 0 1 664 277.6 Z M 696 75.6 L 686.4 75.2 A 34.825 34.825 0 0 0 681.755 75.486 Q 676.516 76.194 673.841 78.657 A 8.217 8.217 0 0 0 672.4 80.4 A 3.276 3.276 0 0 1 671.861 81.033 A 2.131 2.131 0 0 1 670.4 81.6 A 3.253 3.253 0 0 1 667.63 79.818 Q 665.761 76.857 665.33 68.975 A 95.167 95.167 0 0 1 665.2 63.8 Q 665.2 46.903 670.066 41.721 A 8.263 8.263 0 0 1 670.6 41.2 A 15.154 15.154 0 0 1 675.256 38.468 Q 679.658 36.766 686.394 36.465 A 67.334 67.334 0 0 1 689.4 36.4 A 61.12 61.12 0 0 1 695.475 36.679 Q 703.981 37.532 707.6 41 Q 712.222 45.43 712.393 55.607 A 47.069 47.069 0 0 1 712.4 56.4 Q 712.4 64.999 710.118 69.414 A 10.311 10.311 0 0 1 708.8 71.4 A 10.225 10.225 0 0 1 704.951 74.12 Q 701.463 75.6 696 75.6 Z\"\n        id=\"4\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n    </g>\n  </svg>\n  <form id=\"form\" (submit)=\"RegisterUser()\">\n    <div class=\"field\">\n      <div class=\"overlay\"></div>\n      <label>Username</label>\n      <input dir=\"auto\" type=\"text\" name=\"userName\" [(ngModel)]=\"userName\" />\n    </div>\n    <div class=\"field\">\n      <div class=\"overlay\"></div>\n      <label>Email</label>\n      <input dir=\"auto\" type=\"text\" name=\"email\" [(ngModel)]=\"email\" />\n    </div>\n    <div class=\"field\">\n      <div class=\"overlay\"></div>\n      <label>Password</label>\n      <input\n        dir=\"auto\"\n        type=\"password\"\n        name=\"password\"\n        [(ngModel)]=\"password\"\n      />\n    </div>\n    <div class=\"field\">\n      <div class=\"overlay\"></div>\n      <label>Blog Name</label>\n      <input dir=\"auto\" type=\"text\" name=\"blogName\" [(ngModel)]=\"blogName\" />\n    </div>\n    <div *ngIf=\"iserror\" class=\"error\">\n      <p>{{ error }}</p>\n    </div>\n    <input id=\"submit\" type=\"submit\" value=\"Register\" />\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ViewEncapsulation } from '@angular/core';\nimport { BlogService } from '../../services/blog.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app-see-comments',\n  templateUrl: './see-comments.component.html',\n  styleUrls: ['./see-comments.component.scss'],\n})\nexport class SeeCommentsComponent implements OnInit {\n  URL: String;\n  blogName: any;\n  blog: any;\n  check: Boolean;\n  commentText: String;\n  comments: any;\n  commentsCheck: any;\n  commentsLength: any;\n  styles: any;\n  posts: any;\n  indecies: any;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private BlogService: BlogService,\n    private AuthService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    if (!localStorage.getItem('loo')) {\n      localStorage.setItem('loo', 'no reload');\n      location.reload();\n    } else {\n      localStorage.removeItem('loo');\n    }\n    this.URL = '/api/me/image?id=';\n    this.BlogService.getMyBlog().subscribe((data) => {\n      this.blog = data;\n      console.log(this.blog);\n      if (this.blog.success) {\n        this.blog = this.blog.blog;\n        this.URL = '/api/me/image?id=';\n        this.posts = this.blog.posts;\n        this.styles = [];\n        this.indecies = [];\n        this.commentsCheck = [];\n        this.commentsLength = [[]];\n        for (var i = 0; i < this.posts.length; i++) {\n          if (this.posts[i].comments.length == 0) {\n            console.log(false);\n            this.commentsCheck.push(false);\n          } else {\n            console.log(true);\n            this.commentsCheck.push(true);\n          }\n          this.commentsLength.push([]);\n          for (var j = 0; j < this.posts[i].comments.length; j++) {\n            this.commentsLength[i].push(Number(j));\n            this.posts[i].comments[j].commentter.profileImage =\n              this.URL + this.posts[i].comments[j].commentter.profileImage;\n          }\n          this.posts[i].imageId = '/api/me/image?id=' + this.posts[i].imageId;\n          if (!this.posts[i].isImage) {\n            this.styles.push({\n              image: { display: 'none' },\n              text: { float: 'left', width: '80%', padding: '10px' },\n            });\n          } else {\n            this.styles.push({ image: {}, text: {} });\n          }\n          this.indecies.push(i);\n        }\n        console.log(this.posts[0]);\n      } else {\n        console.log('blog not found');\n      }\n    });\n  }\n  see() {\n    console.log(this.commentsLength);\n  }\n  navigateHome() {\n    this.router.navigate(['']);\n  }\n}\n","<div class=\"sidenav\">\n  <svg\n    width=\"250\"\n    height=\"150\"\n    viewBox=\"0 0 714.4 298.4\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    id=\"logoReg\"\n    style=\"cursor: pointer;\"\n    (click)=\"navigateHome()\"\n  >\n    <g\n      id=\"svgGroup\"\n      stroke-linecap=\"round\"\n      fill-rule=\"evenodd\"\n      font-size=\"9pt\"\n      stroke=\"#000\"\n      stroke-width=\"0.25mm\"\n      fill=\"rgba(#bab1d6, 0.6)\"\n      style=\"stroke: white; stroke-width: 0.25mm; fill: rgba(#bab1d6, 0.6);\"\n    >\n      <path\n        d=\"M 11.6 134 L 9.6 58.4 Q 9.6 40.811 5.781 30.479 A 39.104 39.104 0 0 0 5.6 30 Q 1.6 19.6 1.6 18.8 A 6.814 6.814 0 0 1 4.204 13.721 Q 8.95 9.443 22.346 6.446 A 144.97 144.97 0 0 1 28.6 5.2 Q 50.755 1.262 64.292 0.555 A 106.086 106.086 0 0 1 69.8 0.4 Q 84 0.4 85.2 7.2 Q 110.4 119.6 127.6 163.2 A 20.425 20.425 0 0 0 128.421 164.952 Q 129.973 167.862 131.641 167.994 A 2.012 2.012 0 0 0 131.8 168 A 2.835 2.835 0 0 0 133.64 167.286 Q 134.713 166.397 135.6 164.4 Q 162.4 88.8 182.8 14.8 A 10.275 10.275 0 0 1 186.085 10.124 Q 187.444 8.991 189.285 8.08 A 22.524 22.524 0 0 1 190.8 7.4 Q 195.625 5.44 205.793 3.594 A 253.913 253.913 0 0 1 213 2.4 Q 228.8 0 244.4 0 A 58.111 58.111 0 0 1 249.302 0.189 Q 260 1.1 260 6.4 A 1.608 1.608 0 0 1 259.981 6.585 Q 259.869 7.39 259.084 11.222 A 720.765 720.765 0 0 1 258.8 12.6 Q 257.975 16.588 257.15 21.804 A 338.363 338.363 0 0 0 256.4 26.8 A 1601.181 1601.181 0 0 0 255.444 33.607 Q 255.022 36.654 254.561 40.052 A 3200.023 3200.023 0 0 0 253.6 47.2 Q 250 74.8 249 110.6 Q 248 146.4 248 182.4 L 248.8 224.4 Q 248.8 246.556 251.049 258.887 A 55.67 55.67 0 0 0 252.6 265.4 Q 256.4 277.6 256.4 279.4 A 2.984 2.984 0 0 1 256.099 280.646 Q 255.481 281.988 253.6 283.6 A 38.953 38.953 0 0 1 241.687 289.982 Q 236.094 291.904 229.194 292.805 A 102.153 102.153 0 0 1 216 293.6 Q 200 293.6 198 282.8 Q 197.088 278.546 196.869 270.481 A 202.597 202.597 0 0 1 196.8 265 Q 196.8 254.561 198.557 207.072 A 14151.852 14151.852 0 0 1 199.2 190 Q 201.51 129.546 201.597 100.785 A 728.222 728.222 0 0 0 201.6 98.6 Q 201.6 75.307 199.477 70.985 A 1.384 1.384 0 0 0 198.4 70 A 1.201 1.201 0 0 0 198.267 70.007 Q 198 70.037 198 70.2 A 0.142 0.142 0 0 1 197.945 70.296 Q 197.742 70.486 196.8 70.8 Q 195.6 71.2 190.6 83.2 A 149.579 149.579 0 0 0 188.381 88.938 Q 182.825 104.05 170.8 142.4 Q 156 189.6 144 230.6 Q 132.677 269.289 130.97 274.319 A 16.882 16.882 0 0 1 130.8 274.8 A 18.138 18.138 0 0 1 126.774 281.004 Q 123.334 284.38 118.057 285.276 A 24.217 24.217 0 0 1 114 285.6 A 13.196 13.196 0 0 1 109.365 284.817 A 11.562 11.562 0 0 1 104.4 281.2 Q 94.6 235.875 73.076 160.772 A 4770.388 4770.388 0 0 0 58.8 112 L 47.6 75.6 A 9.706 9.706 0 0 0 47.3 74.921 Q 46.77 73.844 46.24 73.645 A 0.679 0.679 0 0 0 46 73.6 Q 44.255 73.6 43.424 75.732 A 7.541 7.541 0 0 0 43.2 76.4 A 509.99 509.99 0 0 0 42.577 90.178 Q 41.6 119.069 41.6 178.6 Q 41.6 254.8 47.2 274.8 A 2.984 2.984 0 0 1 47.411 275.379 Q 47.573 275.999 47.596 276.898 A 11.896 11.896 0 0 1 47.6 277.2 A 9.716 9.716 0 0 1 43.764 284.92 Q 40.484 287.649 34.4 289.4 Q 22.602 292.797 12.881 293.158 A 61.513 61.513 0 0 1 10.6 293.2 A 35.343 35.343 0 0 1 7.133 293.045 Q 3.728 292.708 1.949 291.634 A 3.617 3.617 0 0 1 0 288.4 A 1.038 1.038 0 0 1 0.031 288.213 Q 0.219 287.389 1.527 283.426 A 525.892 525.892 0 0 1 2 282 A 137.444 137.444 0 0 0 5.266 267.861 Q 7.779 254.017 9.102 234.958 A 531.788 531.788 0 0 0 9.8 222.8 A 1561.178 1561.178 0 0 0 11.031 186.707 Q 11.458 168.271 11.564 147.841 A 2648.453 2648.453 0 0 0 11.6 134 Z\"\n        id=\"0\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 289.2 277.6 L 293.6 184.4 A 227.823 227.823 0 0 0 293.154 169.563 Q 291.759 148.294 286 139.2 Q 283.601 135.203 280.404 133.203 A 15.591 15.591 0 0 0 280.4 133.2 Q 278.175 132.459 278.013 130.342 A 4.468 4.468 0 0 1 278 130 A 6.531 6.531 0 0 1 279.798 125.761 Q 283.381 121.571 294.104 117.522 A 116.127 116.127 0 0 1 298.4 116 Q 318.8 109.2 328.2 109.2 Q 334.044 109.2 336.41 111.056 A 4.019 4.019 0 0 1 338 114 A 139.175 139.175 0 0 1 337.923 118.034 Q 337.614 128.144 336.074 154.711 A 5532.626 5532.626 0 0 1 335.8 159.4 Q 333.6 196.8 333.6 238 A 566.385 566.385 0 0 0 333.769 252.354 Q 334.5 281.075 338.4 289.2 A 8.908 8.908 0 0 1 339.261 291.075 A 6.963 6.963 0 0 1 339.6 293.2 A 3.49 3.49 0 0 1 337.721 296.214 Q 334.806 298.054 327.366 298.345 A 75.836 75.836 0 0 1 324.4 298.4 A 63.621 63.621 0 0 1 304.597 295.117 A 83.2 83.2 0 0 1 293.2 290.4 Q 289.314 288.458 289.203 278.211 A 56.309 56.309 0 0 1 289.2 277.6 Z M 321.2 75.6 L 311.6 75.2 A 34.825 34.825 0 0 0 306.955 75.486 Q 301.716 76.194 299.041 78.657 A 8.217 8.217 0 0 0 297.6 80.4 A 3.276 3.276 0 0 1 297.061 81.033 A 2.131 2.131 0 0 1 295.6 81.6 A 3.253 3.253 0 0 1 292.83 79.818 Q 290.961 76.857 290.53 68.975 A 95.167 95.167 0 0 1 290.4 63.8 Q 290.4 46.903 295.266 41.721 A 8.263 8.263 0 0 1 295.8 41.2 A 15.154 15.154 0 0 1 300.456 38.468 Q 304.858 36.766 311.594 36.465 A 67.334 67.334 0 0 1 314.6 36.4 A 61.12 61.12 0 0 1 320.675 36.679 Q 329.181 37.532 332.8 41 Q 337.422 45.43 337.593 55.607 A 47.069 47.069 0 0 1 337.6 56.4 Q 337.6 64.999 335.318 69.414 A 10.311 10.311 0 0 1 334 71.4 A 10.225 10.225 0 0 1 330.151 74.12 Q 326.663 75.6 321.2 75.6 Z\"\n        id=\"1\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 488 152 L 486 182.4 L 487.6 196.4 Q 487.6 203.355 475.542 203.946 A 47.931 47.931 0 0 1 473.2 204 A 56.968 56.968 0 0 1 462.633 203.11 Q 445.235 199.809 444.082 184.268 A 30.652 30.652 0 0 1 444 182 A 27.097 27.097 0 0 1 444.26 178.46 Q 444.757 174.723 446.203 169.629 A 112.428 112.428 0 0 1 446.8 167.6 Q 449.6 158.4 449.6 151.6 A 19.375 19.375 0 0 0 448.334 144.52 A 17.914 17.914 0 0 0 445.6 139.8 Q 441.6 134.8 434 134.8 A 17.698 17.698 0 0 0 421.169 140.033 A 21.554 21.554 0 0 0 421 140.2 A 30.667 30.667 0 0 0 417.601 144.193 Q 415.922 146.574 415.039 148.993 A 16.522 16.522 0 0 0 414.4 151.2 L 412.8 156.8 Q 410.991 166.149 410.545 184.932 A 562.247 562.247 0 0 0 410.4 198.2 Q 410.4 220.404 410.869 235.338 A 507.581 507.581 0 0 0 411.2 243.8 Q 412 260.4 412.8 266.6 A 400.96 400.96 0 0 1 413.072 268.75 Q 413.53 272.456 413.591 273.682 A 6.578 6.578 0 0 1 413.6 274 A 14.991 14.991 0 0 1 408.817 284.956 Q 406.719 287.037 403.702 288.836 A 38.563 38.563 0 0 1 401.2 290.2 A 59.714 59.714 0 0 1 387.25 295.214 A 50.638 50.638 0 0 1 376.4 296.4 A 44.621 44.621 0 0 1 372.344 296.232 Q 364 295.466 364 291.2 L 366 278.8 A 369.653 369.653 0 0 0 369.188 252.37 Q 370.394 238.56 370.997 222.468 A 923.507 923.507 0 0 0 371.6 188 A 1237.779 1237.779 0 0 0 371.38 163.728 Q 370.789 133.714 368.604 118.036 A 104.607 104.607 0 0 0 367.6 112 Q 367.6 107.503 374.975 107.219 A 26.717 26.717 0 0 1 376 107.2 A 48.509 48.509 0 0 1 386.459 108.245 Q 392.68 109.62 397.137 112.809 A 23.97 23.97 0 0 1 404.8 122 A 4.252 4.252 0 0 0 404.996 122.604 Q 405.411 123.6 406.2 123.6 A 1.484 1.484 0 0 0 406.747 123.452 Q 407.994 122.912 411.092 120.413 A 94.455 94.455 0 0 0 411.6 120 A 47.626 47.626 0 0 1 442.169 109.204 A 59.58 59.58 0 0 1 442.8 109.2 A 60.072 60.072 0 0 1 462.75 112.691 A 69.217 69.217 0 0 1 465.2 113.6 A 33.732 33.732 0 0 1 486.184 137.111 Q 487.943 143.552 487.998 151.487 A 74.114 74.114 0 0 1 488 152 Z\"\n        id=\"2\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 630.4 169.6 L 629.6 220.8 A 378.48 378.48 0 0 0 630.079 240.663 Q 631.552 268.543 637.561 279.846 A 18.679 18.679 0 0 0 641.2 284.8 A 5.897 5.897 0 0 1 642.236 286.166 A 4.638 4.638 0 0 1 642.8 288.4 A 3.405 3.405 0 0 1 640.83 291.259 Q 636.044 294.173 619.637 294.384 A 204.849 204.849 0 0 1 617 294.4 A 65.592 65.592 0 0 1 607.681 293.797 Q 590.881 291.372 589.6 279.2 Q 589.2 275.6 589.2 264.4 L 590.8 200.4 A 3.485 3.485 0 0 0 590.618 199.225 Q 590.038 197.6 587.6 197.6 Q 568.4 197.6 551.6 208.4 A 44.292 44.292 0 0 0 542.741 215.736 A 29.155 29.155 0 0 0 534.8 236 A 26.732 26.732 0 0 0 535.719 243.164 A 21.118 21.118 0 0 0 539.6 250.8 A 17.329 17.329 0 0 0 543.597 254.515 A 13.91 13.91 0 0 0 551.4 256.8 Q 558.4 256.8 563 254 Q 567.097 251.507 568.18 250.917 A 7.307 7.307 0 0 1 568.4 250.8 A 6.219 6.219 0 0 1 573.337 254.424 Q 574.785 257.193 575.108 262.048 A 44.639 44.639 0 0 1 575.2 265 A 23.898 23.898 0 0 1 566.696 283.628 A 34.903 34.903 0 0 1 562.8 286.6 A 49.912 49.912 0 0 1 548.573 293.203 A 43.91 43.91 0 0 1 536.8 294.8 Q 523.2 294.8 513.4 290 Q 506.456 286.599 502.223 282.595 A 25.221 25.221 0 0 1 499.2 279.2 A 53.648 53.648 0 0 1 493.106 268.394 A 61.842 61.842 0 0 1 492 265.6 Q 489.2 256.4 489.2 249.6 A 72.084 72.084 0 0 1 491.832 229.619 A 54.524 54.524 0 0 1 506.8 204.8 Q 524.4 188 552 180.8 A 384.489 384.489 0 0 0 563.485 178.361 Q 588.675 172.569 590 167.6 Q 591.2 163.2 591.2 152.8 Q 591.2 135.967 577.581 132.5 A 32.419 32.419 0 0 0 569.6 131.6 Q 560.4 131.6 553.2 137.4 A 20.1 20.1 0 0 0 548.407 142.828 A 17.729 17.729 0 0 0 546 152 L 548.4 161.6 A 6.745 6.745 0 0 1 545.149 166.546 Q 542.348 168.402 537.168 169.218 A 46.903 46.903 0 0 1 534 169.6 L 529.6 170 A 38.953 38.953 0 0 1 521.941 169.291 Q 517.302 168.361 513.681 166.209 A 21.977 21.977 0 0 1 510.6 164 Q 503.6 158 503.6 148 Q 503.6 141.6 507.8 133.8 A 40.467 40.467 0 0 1 513.736 125.408 A 35.006 35.006 0 0 1 518.4 121.2 A 34.236 34.236 0 0 1 523.084 118.298 Q 528.988 115.213 538.2 112.6 Q 551.6 108.8 564 108.8 Q 574.22 108.8 580.636 109.344 A 79.276 79.276 0 0 1 583.2 109.6 A 81.699 81.699 0 0 1 587.873 110.304 Q 593.641 111.326 601.8 113.4 A 40.692 40.692 0 0 1 615.708 119.766 A 38.307 38.307 0 0 1 621.4 124.8 Q 629.2 133.2 629.8 142.6 Q 630.4 152 630.4 169.6 Z\"\n        id=\"3\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n      <path\n        d=\"M 664 277.6 L 668.4 184.4 A 227.823 227.823 0 0 0 667.954 169.563 Q 666.559 148.294 660.8 139.2 Q 658.401 135.203 655.204 133.203 A 15.591 15.591 0 0 0 655.2 133.2 Q 652.975 132.459 652.813 130.342 A 4.468 4.468 0 0 1 652.8 130 A 6.531 6.531 0 0 1 654.598 125.761 Q 658.181 121.571 668.904 117.522 A 116.127 116.127 0 0 1 673.2 116 Q 693.6 109.2 703 109.2 Q 708.844 109.2 711.21 111.056 A 4.019 4.019 0 0 1 712.8 114 A 139.175 139.175 0 0 1 712.723 118.034 Q 712.414 128.144 710.874 154.711 A 5532.626 5532.626 0 0 1 710.6 159.4 Q 708.4 196.8 708.4 238 A 566.385 566.385 0 0 0 708.569 252.354 Q 709.3 281.075 713.2 289.2 A 8.908 8.908 0 0 1 714.061 291.075 A 6.963 6.963 0 0 1 714.4 293.2 A 3.49 3.49 0 0 1 712.521 296.214 Q 709.606 298.054 702.166 298.345 A 75.836 75.836 0 0 1 699.2 298.4 A 63.621 63.621 0 0 1 679.397 295.117 A 83.2 83.2 0 0 1 668 290.4 Q 664.114 288.458 664.003 278.211 A 56.309 56.309 0 0 1 664 277.6 Z M 696 75.6 L 686.4 75.2 A 34.825 34.825 0 0 0 681.755 75.486 Q 676.516 76.194 673.841 78.657 A 8.217 8.217 0 0 0 672.4 80.4 A 3.276 3.276 0 0 1 671.861 81.033 A 2.131 2.131 0 0 1 670.4 81.6 A 3.253 3.253 0 0 1 667.63 79.818 Q 665.761 76.857 665.33 68.975 A 95.167 95.167 0 0 1 665.2 63.8 Q 665.2 46.903 670.066 41.721 A 8.263 8.263 0 0 1 670.6 41.2 A 15.154 15.154 0 0 1 675.256 38.468 Q 679.658 36.766 686.394 36.465 A 67.334 67.334 0 0 1 689.4 36.4 A 61.12 61.12 0 0 1 695.475 36.679 Q 703.981 37.532 707.6 41 Q 712.222 45.43 712.393 55.607 A 47.069 47.069 0 0 1 712.4 56.4 Q 712.4 64.999 710.118 69.414 A 10.311 10.311 0 0 1 708.8 71.4 A 10.225 10.225 0 0 1 704.951 74.12 Q 701.463 75.6 696 75.6 Z\"\n        id=\"4\"\n        vector-effect=\"non-scaling-stroke\"\n      />\n    </g>\n  </svg>\n  <a routerLink=\"/profile/createPost\">Create Post</a>\n  <a routerLink=\"/profile/editPosts\">Edit Post</a>\n  <a routerLink=\"/profile/editProfile\">Edit Profile Info</a>\n  <a class=\"active\" routerLink=\"/profile/comments\">See Comments</a>\n</div>\n<div class=\"content\">\n  <div class=\"allpost\" *ngFor=\"let i of indecies\">\n    <div class=\"postcard\">\n      <div class=\"post\">\n        <div\n          class=\"postImage\"\n          [ngStyle]=\"styles[indecies.length - i - 1].image\"\n        >\n          <img src=\"{{ posts[indecies.length - i - 1].imageId }}\" />\n        </div>\n        <div class=\"postText\" [ngStyle]=\"styles[indecies.length - i - 1].text\">\n          <p dir=\"auto\">\n            {{ posts[indecies.length - i - 1].postText }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"commentSection\"\n      *ngIf=\"commentsCheck[commentsCheck.length - i - 1]\"\n    >\n      <div\n        class=\"commentcard\"\n        *ngFor=\"let j of commentsLength[indecies.length - i - 1]\"\n        (click)=\"see()\"\n      >\n        <div class=\"cardImage\">\n          <img\n            src=\"{{\n              posts[indecies.length - i - 1].comments[j].commentter.profileImage\n            }}\"\n          />\n          <label>{{\n            posts[indecies.length - i - 1].comments[j].commentter.userName\n          }}</label>\n          <label style=\"font-size: smaller; margin-left: 10px;\">{{\n            posts[indecies.length - i - 1].comments[j].commentDate\n          }}</label>\n        </div>\n        <div class=\"commentText\">\n          <p>\n            {{ posts[indecies.length - i - 1].comments[j].commentText }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private AuthService: AuthService, private router: Router) {}\n  canActivate() {\n    if (this.AuthService.isLogged()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  constructor(private http: HttpClient) {}\n  userRegister(user) {\n    return this.http.post('/api/register', user);\n  }\n  userBlogName() {\n    this.getLocalStorage();\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: this.authToken,\n      }),\n    };\n    return this.http.get('/api/user/blogname', httpOptions);\n  }\n  userLogin(user) {\n    return this.http.post('/api/login', user);\n  }\n  setLocalStorage(token, user) {\n    localStorage.clear();\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', user);\n    this.authToken = token;\n    this.user = user;\n  }\n  getLocalStorage() {\n    let token = localStorage.getItem('token');\n    this.authToken = token;\n  }\n  isLogged() {\n    this.getLocalStorage();\n    const helper = new JwtHelperService();\n    console.log(this.authToken);\n    const isExpired = helper.isTokenExpired(this.authToken);\n    console.log(isExpired);\n    return !isExpired;\n  }\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root',\n})\nexport class BlogService {\n  blogName: String;\n  authToken: any;\n  constructor(private http: HttpClient) {}\n  getUserBlog(blogName) {\n    this.blogName = blogName;\n    return this.http.get('/api/' + blogName);\n  }\n  getMyBlog() {\n    this.authToken = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: this.authToken,\n      }),\n    };\n    return this.http.get('/api/me/blog', httpOptions);\n  }\n  comment(commentText, blogName, index) {\n    this.authToken = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: this.authToken,\n      }),\n    };\n    return this.http.post(\n      '/api/me/comment',\n      { commentText: commentText, blogName: blogName, index: index },\n      httpOptions\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  authToken: any;\n  constructor(private httpClient: HttpClient) {}\n  postFile(fileToUpload: File) {\n    this.authToken = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Authorization: this.authToken,\n      }),\n    };\n    const endpoint = '/api/me/uploadImage';\n    const formData: FormData = new FormData();\n    formData.set('file', fileToUpload);\n    console.log(formData);\n\n    return this.httpClient.post(endpoint, formData, httpOptions);\n  }\n  editPost(newPost, index) {\n    this.authToken = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: this.authToken,\n      }),\n    };\n    return this.httpClient.put(\n      '/api/me/post',\n      { newPost: newPost, index: index },\n      httpOptions\n    );\n  }\n  editProfile(user) {\n    this.authToken = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: this.authToken,\n      }),\n    };\n    return this.httpClient.put('/api/me/profile', { user: user }, httpOptions);\n  }\n  getMe() {\n    this.authToken = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: this.authToken,\n      }),\n    };\n    return this.httpClient.get('/api/me/profile', httpOptions);\n  }\n  createPost(newPost) {\n    this.authToken = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: this.authToken,\n      }),\n    };\n    return this.httpClient.post(\n      '/api/me/post',\n      { newPost: newPost },\n      httpOptions\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { animationFrame } from 'rxjs/internal/scheduler/animationFrame';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ValidationService {\n  constructor(private http: HttpClient) {}\n  async validateRegister(userName, password, email, blogName) {\n    if (userName == '' || password == '' || email == '' || blogName == '') {\n      return { success: false, text: 'Please Fill in all data' };\n    }\n    if (password.length < 5) {\n      return { success: false, text: 'Password is too short' };\n    }\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const checkmail = re.test(String(email).toLowerCase());\n    if (!checkmail) {\n      return { success: false, text: 'Please Enter valid email' };\n    }\n    return { success: true };\n  }\n  validateEmail(email) {\n    let res: any;\n    return this.http.post('api/me/checkMail', {\n      email: email,\n    });\n  }\n  validateBlog(blogName) {\n    let res: any;\n    return this.http.post('/api/me/checkBlog', {\n      blogName: blogName,\n    });\n  }\n  validateLogin(email, password) {\n    if (password == '' || email == '') {\n      return { success: false, text: 'Please Fill in all data' };\n    }\n    if (password.length < 5) {\n      return { success: false, text: 'Password is too short' };\n    }\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const checkmail = re.test(String(email).toLowerCase());\n    if (!checkmail) {\n      return { success: false, text: 'Please Enter valid email' };\n    }\n    return { success: true };\n  }\n  validateEdit(email, password, userName, user) {\n    if (user.userName != userName) {\n      if (userName == '') {\n        return { success: false, text: 'user name cant be empty' };\n      }\n    }\n    if (password != '') {\n      if (password.length < 5) {\n        return { success: false, text: 'Password is too short' };\n      }\n    }\n    if (user.email != email) {\n      if (email == '') {\n        return { success: false, text: 'email cant be empty' };\n      }\n      const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      const checkmail = re.test(String(email).toLowerCase());\n      if (!checkmail) {\n        return { success: false, text: 'Please Enter valid email' };\n      }\n    }\n    return { success: true };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}